var searchIndex = JSON.parse('{\
"bootprot":{"doc":"MEG-OS Boot Procotol","t":"PPPPPFFFGGTTPPPTPPPPPPPGPPPPPONONNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNOOOOONONNNOONOONONNNNONNNNNNNNNNNNNNNNNNNOO","n":["Abgr32","AcpiNonVolatile","AcpiReclaim","Argb32","Available","BootFlags","BootInfo","BootMemoryMapDescriptor","BootMemoryType","ColorMode","DEBUG_MODE","FORCE_SINGLE","FirmwareCode","FirmwareData","FmTowns","HEADLESS","Indexed8","Mmio","MmioPortSpace","Nec98","OsLoaderCode","OsLoaderData","PcCompatible","PlatformType","Reserved","UEFI","Unavailable","Unknown","Unspecified","acpi_rsdptr","all","base","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmdline","cmp","cmp","cmp","color_mode","complement","contains","default","default","default","default","difference","dtb","empty","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","initrd_base","initrd_size","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_empty","kernel_base","master_cr3","mem_type","mmap_base","mmap_len","not","page_count","partial_cmp","partial_cmp","partial_cmp","platform","real_bitmap","remove","screen_height","screen_width","set","smbios","sub","sub_assign","symmetric_difference","toggle","total_memory_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","vram_base","vram_stride"],"q":[[0,"bootprot"],[151,"core::cmp"],[152,"core::iter::traits::collect"],[153,"core::fmt"],[154,"core::fmt"],[155,"core::hash"],[156,"core::result"],[157,"core::any"]],"d":["","","","32bit Color (Little Endian B-G-R-A, VESA, UEFI)","","","","","","","","","","","IA32-Legacy Fujitsu FM TOWNS","","8bit Indexed Color Mode","","","IA32-Legacy NEC PC-98 Series Computer","","","IA32-Legacy IBM PC Compatible","","","UEFI based","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","",""],"i":[5,7,7,5,7,0,0,0,0,0,1,1,7,7,4,1,5,7,7,4,7,7,4,0,7,4,7,4,5,10,1,6,1,1,1,1,1,1,1,10,4,5,1,6,7,10,4,5,1,6,7,4,5,1,6,7,10,5,1,7,10,1,1,10,4,5,1,1,10,1,5,1,7,1,10,4,4,5,1,1,1,1,1,7,10,4,5,1,6,7,1,1,1,1,1,10,10,1,1,1,10,4,5,1,6,7,1,1,10,10,6,10,10,1,6,5,1,7,10,10,1,10,10,1,10,1,1,1,1,10,10,4,5,1,6,7,10,4,5,1,6,7,10,4,5,1,6,7,1,10,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[[1,1],1],[[1,1],2],[[1,1],1],[[1,1],2],[1,3],[[1,1],1],[[1,1],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[1,1],[6,6],[7,7],0,[[5,5],8],[[1,1],8],[[7,7],8],0,[1,1],[[1,1],9],[[],10],[[],4],[[],5],[[],1],[[1,1],1],0,[[],1],[[5,5],9],[[1,1],9],[[7,7],9],[[1,-1],2,[[12,[],[[11,[1]]]]]],0,[[4,13],14],[[4,13],14],[[5,13],14],[[1,13],14],[[1,13],14],[[1,13],14],[[1,13],14],[[1,13],14],[[7,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,[[15,[1]]]],[3,1],[3,1],[-1,1,[[12,[],[[11,[1]]]]]],[[1,-1],2,16],0,0,[[1,1],2],[[1,1],1],[[1,1],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,9],[1,9],0,0,0,0,0,[1,1],0,[[5,5],[[15,[8]]]],[[1,1],[[15,[8]]]],[[7,7],[[15,[8]]]],0,0,[[1,1],2],0,0,[[1,1,9],2],0,[[1,1],1],[[1,1],2],[[1,1],1],[[1,1],2],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[1,1],1],0,0],"c":[],"p":[[5,"BootFlags",0],[1,"tuple"],[1,"u16"],[6,"PlatformType",0],[6,"ColorMode",0],[5,"BootMemoryMapDescriptor",0],[6,"BootMemoryType",0],[6,"Ordering",151],[1,"bool"],[5,"BootInfo",0],[17,"Item"],[10,"IntoIterator",152],[5,"Formatter",153],[8,"Result",153],[6,"Option",154],[10,"Hasher",155],[6,"Result",156],[5,"TypeId",157]],"b":[[75,"impl-Display-for-PlatformType"],[76,"impl-Debug-for-PlatformType"],[78,"impl-Debug-for-BootFlags"],[79,"impl-Octal-for-BootFlags"],[80,"impl-UpperHex-for-BootFlags"],[81,"impl-Binary-for-BootFlags"],[82,"impl-LowerHex-for-BootFlags"]]},\
"kernel":{"doc":"","t":"FCQNNCNNCCCNCCQCQQQQCCCCCCNNNCCQFNNCNNNNCNNNNPTPPPTPPPPPPPPPPPPPPPPPPPPPPPKTPPPPPTPPPPPPPTPTTTTTTTTTTTTTTTPPPFFPPPTPPPPGFFGPPPPPPPFPGGPGPGGGPPPPGPGPPPPPPPPGPPPFPPPPTPPTTTTTTTTTTTTTTNNTTTTTTTTPTTTPPPTTPPTTTPPPPPPPFPGFPPTTPPPPPTTTPPFFFFFPTPPTPPPPPPPPPFPPPGFFPTTTPGPPTTTPPPFFPPGPPPPPPPPPPPPTPPPPPPTPPPPPGPPPPTPFPPPPPTPPPTTPPPPPPPPPPPPPPPPPTPPFPPPPTPPPPPPPFPPPPPPPTTPPPPPTTTPPPPPPPPPPPPPPPPPPTPTNMNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTPPPTTTTTTPTTTTTTTTTTTTTTTFFGFTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCTPFFFPPPPFPPPTPTPTPTPTTPGPPPFFPTTTTTTTTFGFGPPFPPGFFFFTTTTTTTGPPIPPTTTTTTPPPTGPPPPPPPPPPPFFFFPPPGPFFFTTTTTTTTPFFPPFPTPPPTTTTTPPPPFPFTTTPPPPPPTTGFPPFPGPPPTTTTTTPPPFIPPPPPPPPPPPPPFFFFPPTTTGPPPPPPPPPPPPPPPPPPFFFFPFPPFPTTPPTTPPPGPPTPFGPPTPTPTPTPTPTTPTPTPTPTPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTPTTTPPPTTTTFFFGFFFFFFKKFPTTTTTTNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTPPTTTPPPPPTTTTTTTPPPPOPPPTPTPPPPOOPTPPTPTTTTTTTPTTTTTTTPTTTTTPPPPPPTTPPPPFPPPPPTTTTPPTTTGPPPPPPPPPPPPPPPPPPPPTTTTTTTTTTTPTTPPPPPPPPTPPPPPTTTTTTPPFFPFFFGFFFFFFKFFFFFFGGFKGFKGFFGFFFFFFFGGFFKFFFKFFFFFFFFFPFFFTTTPTPPTTTTNNNNNNNNNMNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNNNMMNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOMNNNNNNNOOOOOOOOOOOOOOMNNCCCCCCFFNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNPPTPPPTPPTTPTPTPPTTPPTTPTPPPTTPTTTPTPTPTPPTTPPTTPPPTTTPTPTPPFFGFFFFGFFFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNTTTFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTPTPPPPPPPTPPTTTTTPPPPPTTTFPFPPPPFPPFPPPTPFFTTPPPPPPFFFGFTTTPFFFPTPPPPPFFPPFPPPTPTTPTPPTPPPPPTPTTFTPTTTTTTPTTTTTFFFPPPPPPTPGFTPPPTPTTPPPPPPPPFFFPPPGFFKKFGFFKFKFGKKKFFFKFKIFFKFGFGKPPFFPTTTTTPTFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTFKKFFFFFIFTTPPPTTGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCCMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNMMNNNNNMNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCFNNNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNNFNNNNNNNNNNNFKFKGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNMMNNNNONNNNNNNNNNNNNNNNNNNNNNCTTTTTTTTTTTTFTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKKKKKKFTFIFIFNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNMNMNNNMNMNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNMMNMMNNNNNNNMNNNMNMMMMNMMNNNNNMNNNNNNNNNNNNNNNMNNNNNNMMMCCCCCCSSFFKFFFZTSSIFFGPFIPFPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNNNNPPTPPPPPPPFGFFGFFFFPPFFFFPPFFPPFGFPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOONONNNNNNNNNNNNNNOONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOGPFPPPPNNNNNNNNNNNNNNNNFPPKGMNNNNNNNNMNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNPPPPFPKGKIKNNNNNMNMNNNNNNMNNMNNMNMNMNMNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGGPPPPGPFGPPPTPPPPPPPPCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNFNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPGPPPPPNNNNNNNNNNNCFNNNNNNNNNKKFFKFFOCOONNNNNNNNNNMNNNNNNNNNNCOONNNNNMMCONMNMMNOOOONNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGFFGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPIFFPPFPFFFGIPCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFTINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNFPPPPGFGPPPFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNCNNNCNNNFNNNNNNNNNNPPPPTTPPPPPGTFPPPPGFFPPFGFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCPFPFKGFPPPPPFMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNTFNNNNNNNNNNNNNNNNNNNFFPPPPPPGFPPGFPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFTTPGTTPPPTTTTTTPPPTTTPTTTPTPPPPTPPPPPTTTTPPPPPPTTTTTTTTTTPTFTTTPPTGFGFFFFGGFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFNNNNNNNNN","n":["HexDump","arch","assert_call_once","borrow","borrow_mut","drivers","fmt","from","fs","fw","hal","into","io","log","log","mem","my_bitflags","notify","print","println","r","res","rt","sync","system","task","try_from","try_into","type_id","ui","user","without_interrupts","Arch","borrow","borrow_mut","cpu","from","init_first","init_second","into","page","system_time","try_from","try_into","type_id","ABM","AC","ACPI","ADX","AES","AF","AMX_BF16","AMX_INT8","AMX_TILE","APIC","AVX","AVX2","AVX512_4FMAPS","AVX512_4VNNIW","AVX512_BITALG","AVX512_BW","AVX512_CD","AVX512_DQ","AVX512_ER","AVX512_F","AVX512_IFMA","AVX512_PF","AVX512_VBMI","AVX512_VBMI2","AVX512_VL","AVX512_VNNI","AVX512_VP2INTERSECT","AVX512_VPOPCNTDQ","AlignmentCheck","AsDescriptorEntry","BIG_DATA","BMI1","BMI2","Breakpoint","CET_IBT","CET_SS","CF","CLDEMOTE","CLFLUSHIPT","CLFSH","CLWB","CMOV","CMP_LEGACY","CNXT_ID","CPU_WATCHDOG_TIMER","CR8_LEGACY","CTX_DS","CTX_ES","CTX_FPU","CTX_FS","CTX_GS","CTX_R12","CTX_R13","CTX_R14","CTX_R15","CTX_RBP","CTX_RBX","CTX_RSP","CTX_TSS_RSP0","CTX_USER_CS_DESC","CTX_USER_DS_DESC","CX16","CX8","ControlProtection","Cpu","CpuContextData","DBX","DCA","DE","DF","DS","DS_CPL","DTES64","Debug","DefaultSize","DescriptorEntry","DescriptorPair","DescriptorType","DeviceNotAvailable","DivideError","DoubleFault","ENQCMD","ERMS","EST","EXTAPIC","EaxAndEdx","Efficient","ExceptionType","F01C","F01C","F01D","F01D","F070B","F070C","F070D","F07B","F07C","F07D","F16C","F81C","F81C","F81D","F81D","FDP_EXCPTN_ONLY","FMA","FMA4","FPU","FSGSBASE","FSRM","FXSR","Feature","FloatingPointException","GFNI","GeneralProtection","GlobalDescriptorTable","HLE","HTT","HYBRID","HYPERVISOR","IA32_APIC_BASE","IA32_ARCH_CAPABILITIES","IA32_CORE_CAPABILITIES","IA32_CSTAR","IA32_EFER","IA32_FEATURE_CONTROL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_HW_FEEDBACK_CONFIG","IA32_HW_FEEDBACK_PTR","IA32_HW_FEEDBACK_THREAD_CONFIG","IA32_KERNEL_GS_BASE","IA32_LSTAR","IA32_MISC_ENABLE","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRRphysBase","IA32_MTRRphysMask","IA32_PAT","IA32_PLATFORM_ID","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THREAD_FEEDBACK_CHAR","IA32_TSC","IA32_TSC_ADJUST","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA64","IBRS_IBPB","IBS","ID","IF","INTEL_PT","INVPCID","IOPL3","IPI_INVALIDATE_TLB","IPI_SCHEDULE","IST1","IST2","IST3","IST4","IST5","IST6","IST7","InterruptDescriptorTable","InterruptGate","InterruptStackTable","InterruptVector","InvalidOpcode","InvalidTss","KERNEL_CODE","KERNEL_DATA","Kernel","L1D_FLUSH","LA57","LAHF_LM","LBR","LEGACY_CODE","LEGACY_DATA","LIMIT","LM","LWP","LegacySyscallContext","Limit16","Limit32","Linear32","Linear64","MAX","MAX","MCA","MCE","MD","MD_CLEAR","MGE","MISALIGNSSE","MMX","MONITOR","MOVBE","MOVDIR64B","MOVDIRI","MPX","MSR","MSR","MTRR","MachineCheck","Mtrr","MtrrIndex","MtrrItem","NODEID_MSR","NT","NULL","NUM_ITEMS","NX","NativeModelCoreType","NonMaskable","Null","OF","OFFSET_RSP0","OFFSET_TSS","OSPKE","OSVW","OSXSAVE","Offset32","Offset64","Overflow","PAE","PAT","PAT","PBE","PCID","PCLMULQDQ","PCOMMIT","PCONFIG","PCX_L2I","PDCM","PDPE1GB","PERFCTR_CORE","PERFCTR_NB","PERFTSC","PF","PKS","PKU","POPCNT","PQE","PQM","PREFETCHWT1","PRESENT","PSE","PSE36","PSN","PageFault","Performance","PrivilegeLevel","RDPID","RDRND","RDSEED","RDTSCP","RF","RTM","Rflags","Ring1","Ring2","SDBG","SEP","SERIALIZE","SF","SGX","SGX_LC","SHA","SIZE_OF_CONTEXT","SIZE_OF_STACK","SKINIT","SMAP","SMEP","SMX","SRBDS_CTRL","SS","SSBD","SSE","SSE2","SSE3","SSE4A","SSE4_1","SSE4_2","SSSE3","STIBP","SVM","SYSCALL","SYSTEM_TSS","Security","SegmentNotPresent","Selector","SimdException","StackException","TBM","TCE","TF","TM","TM2","TOPOEXT","TSC","TSC_DEADLINE","TSXLDTRK","TSX_FORCE_ABORT","TaskStateSegment","TrapGate","Tss","TssBusy","UC","UC","UC_","UMIP","USER_CODE","USER_DATA","Use16","Use32","Use64","User","VAES","VIF","VIP","VM","VME","VMX","VPCLMULQDQ","Virtualization","WAITPKG","WB","WB","WC","WC","WDT","WP","WP","WT","WT","X2APIC","XOP","XSAVE","XTPR","ZF","_3DNOWPREFETCH","_VF","all","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_descriptor_pair","as_gate_offset","as_gate_offset_pair","as_segment_base","as_segment_base_pair","as_vec","base","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code_segment","complement","contains","count","current","data_segment","default","default","default_operand_size","difference","eax","ebp","ebx","ecx","edi","edx","eip","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","esi","flat_code_segment","flat_data_segment","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_truncate","from_descriptor","from_raw","from_raw","from_u8","from_usize","from_vec","gate_descriptor","get","has_error_code","has_feature","high","index","indexes","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_pair","iopl","is_all","is_code_segment","is_empty","is_enabled","is_hybrid","is_null","is_present","is_segment","item","item_mut","items","low","mask","matches","mem_type","mnemonic","native_model_core_type","new","new","new","new","not","null","out32","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","physical_address_mask","physical_id","processor_type","read","register","remove","rpl","set","set","set_iopl","set_item","set_items","set_pat","sub","sub_assign","switch","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_address_mask","write","ACCESS","ACCESS_RIGHTS","AVL_MASK","AVL_SHIFT","CannotExecute","CannotRead","CannotWrite","DIRTY","FETCH","GLOBAL","LARGE_2M","LARGE_PAT","NO_EXECUTE","NotPresent","PAT","PAT_000","PAT_001","PAT_010","PAT_011","PAT_UC","PAT_WB","PAT_WC","PAT_WT","PCD","PREFERRED_PAT_SETTINGS","PRESENT","PRESENT","PROTECTION_KEY","PWT","PageAttribute","PageErrorCode","PageErrorKind","PageManager","RESERVED_BITS","SGX","SHADOW_STACK","USER","USER","WRITE","WRITE","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","could_not_execute","could_not_read","could_not_write","difference","difference","empty","empty","eq","eq","eq","fmt","from","from","from","from","from","from","from","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_err","init","init_late","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","is_page_present","mmap","not","not","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","hda","pci","usb","AMP_OVERRIDE","AUX","AmplifierCapabilities","AmplifierGainMuteGetPayload","AmplifierGainMuteSetPayload","AudioFunctionGroupCapabilities","AudioMixer","AudioOutput","AudioSelector","AudioWidgetCapabilities","AudioWidgetCapabilities","Audioinput","B16","B16","B20","B20","B24","B24","B32","B32","B8","B8","BCIS","BeepGenerator","Bits","Black","Blue","Bottom","BufferDescriptor","BufferDescriptorFlag","CD","CHAN_EX_MASK","CIE","CLEAR_INTERRUPTS","CONN_LIST","CORBRPRST","CP_CAPS","CRST","CURRENT_VERSION","Cad","Color","Command","CommandBuffer","CommandBusy","CommandNotResponding","ConfigurationDefault","ConnectedToJack","ConnectionListLength","ControllerError","Corb","CorbControl","CorbRegisterSet","CorbStatus","DEIE","DELAY_MASK","DESE","DIGITAL","DIR","DMAEN","DRIVER_NAME","DefaultDevice","DigitalOtherIn","DigitalOtherOut","DmaBufferChunk","Err","ExternalOnPrimary","FCNTRL","FEIE","FIFOE","FIFORDY","FORMAT_OVERRIDE","FSTS","FixedFunction","Front","FunctionGroupType","GIE","GeometricLocation","GetAmplifierGainMute","GetConectionListEntry","GetConfigurationDefault","GetConnectionSelect","GetConverterControl","GetConverterFormat","GetEapdBtlEnable","GetParameter","GetPinWidgetControl","GetPowerState","GetProcessingState","GlobalCapabilities","GlobalControl","GlobalRegisterSet","GlobalStatus","GpIoCount","Green","Grey","GrossLocation","HPOut","HdAudioController","HdaDriverRegistrar","HdaSoundDriver","ICB","ICVER","IN_AMP","IOC","IOCE","IRRADD","IRRUNSOL","IRV","Immediate","ImmediateCommandRegisterSet","ImmediateCommandStatus","InputAmpCapabilities","Internal","InterruptControl","JackAndInternal","L_R_SWAP","Left","LineIn","LineOut","MAX","MAX","MAX","MEI","MEIE","MicIn","ModemHandsetSide","ModemLineSide","NA","Nid","NoPhysicalConnection","Node","OIC","OIS","OUT_AMP","Ok","Orange","Other","Other","Other","OutputAmpCapabilities","POWER_CNTRL","PROC_WIDGET","ParameterId","PcmFormat","PinCapabilities","PinComplex","PinWidgetControl","Pink","PortConnectivity","PowerWidget","ProcessingCapabilities","Purple","RINTCTL","RINTFL","RIRBWPRST","ROOT","RUN","RUN","Rear","Red","Reserved","Response","Result","Resvd1","Resvd1","Resvd2","Resvd2","Resvd3","Resvd3","Resvd4","Resvd4","Resvd5","Resvd6","RevisionId","Right","RingBuffer","Rirb","RirbControl","RirbRegisterSet","RirbStatus","SPDIF","SPDIFIn","SRST","STEREO","STRIP","SampleRate","SampleSizeRateCaps","SeperateChasis","SetAmplifierGainMute","SetConfigurationDefault1","SetConfigurationDefault2","SetConfigurationDefault3","SetConfigurationDefault4","SetConnectionSelect","SetConverterControl","SetConverterFormat","SetEapdBtlEnable","SetPinWidgetControl","SetPowerState","SetProcessingState","Speaker","Special1","Special2","Special3","StreamDescriptor","StreamDescriptorControl","StreamDescriptorRegisterSet","StreamDescriptorStatus","StreamFormats","StreamId","StreamNotReady","SubordinateNodeCount","SupportedPCMFormat","SupportedPowerStates","TP","TYPE_MASK","Telephony","Top","UNSOL","UNSOL_CAPABLE","Unknown","VendorDefined","VendorId","Verb","VolumeKnobCapabilities","VolumeKnobWidget","WAIT_DELAY_MS","White","WidgetAddress","WidgetType","Yellow","_11K025","_11K025","_16K","_16K","_176K4","_176K4","_192K","_192K","_22K05","_22K05","_32K","_32K","_384K","_44K1","_44K1","_48K","_48K","_88K2","_88K2","_8K","_8K","_96K","_96K","_STREAM","_STRIPE","add","addr","address","all","all","all","all","all","all","all","all","all","all","all","all","all","as_corb","as_corb","as_corb","as_corb","as_u32","as_u8","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bps","bss","cad","cad","can_write","capabilities","capabilities","channels","clear_interrupts","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","command","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","configuration_default","connections","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","current_output","current_status","default","default_association","default_device","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","entries","entries","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fifo_size","find_best_output_pin","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","geometric_location","get_audio_widget_capabilities","get_buffer_length","get_configuration_default","get_control","get_control","get_control","get_control","get_format","get_input_amplifier_capabilities","get_last_valid_index","get_output_amplifier_capabilities","get_parameter","get_read_pointer","get_rintcnt","get_state_change_status","get_status","get_status","get_status","get_status","get_status","get_stream_id","get_subordinate_node_count","get_supported_sample_format","get_wake_enable","get_write_pointer","get_write_pointer","gross_location","handle_interrupt","has_response","hertz","init","input_amplifier_capabilities","input_payload_capability","input_stream_payload_capability","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","instantiate","interrupt_control","interrupt_status","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_input","is_output","iss","issue_command","len","len","link_position","mute_supported","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","nid","nid","not","not","not","not","not","not","not","not","not","not","not","not","not","nsdo","num_steps","number_of_channels","offset","oss","output_amplifier_capabilities","output_payload_capability","output_stream_payload_capability","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_to_dac","port_connectivity","prepare_buffer","pretty","process_events","read_response","registrar","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","reset_write_pointer","run","run","sample_rate","sequence","set","set","set","set","set","set","set","set","set","set","set","set","set","set_amplifier_gain_mute","set_base","set_base","set_base","set_buffer_length","set_control","set_control","set_control","set_control","set_current_dac","set_current_output","set_interrupt_control","set_last_valid_index","set_master_volume","set_pcm_format","set_pcm_format","set_pcm_format","set_rintcnt","set_state_change_status","set_status","set_status","set_status","set_status","set_status","set_stream_id","set_stream_id","set_stream_id","set_wake_enable","set_write_pointer","size_of_buffer","start","start","step_size","stop","stop","stop","stream_id","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","supports_64bit","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","union","union","union","version","widget_type","write_block","write_data","AGP","AGP_8X","BUS_MASTER","COMPACT_PCI","HOT_PLUG","HOT_SWAP","HYPER_TRANSPORT","INT_DISABLE","INVALID_0000","INVALID_0000","INVALID_FFFF","INVALID_FFFF","IO_SPACE","IsolatedIO","MEM_SPACE","MSI","MSI_X","Mmio1MB","Mmio32","Mmio64","NULL","PCI_EXPRESS","PCI_X","PM","Pci","PciBar","PciBarIndex","PciBarType","PciCapabilityId","PciClass","PciCommand","PciConfigAddress","PciDevice","PciDeviceId","PciDriver","PciDriverRegistrar","PciVendorId","Reserved","SLOT_ID","VENDOR_SPECIFIC","VIRTIO","VIRTIO_MAX","VIRTIO_MIN","VOD","add","address","address","all","bar_index","bar_type","bars","base","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class_code","clear_pci_command","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","code","complement","contains","current_status","data","default","dev","device_by_addr","device_id","devices","difference","drivers","empty","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_truncate","from_pci","fun","get_bus","get_class_code","get_dev","get_fun","get_interface","get_register","get_sub_class","has_multi_func","init","insert","instantiate","interface","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","is_isolated_io","is_mmio","is_prefetchable","is_valid","is_valid","mask_bias","matches","name","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_data","read_pci_command","register","register_msi","remove","secondary_bus_number","set","set_pci_command","size","sub","sub","sub_assign","subsys_device_id","subsys_vendor_id","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","ven_dev","ven_dev_cc","ven_dev_subsys","vendor_id","write_pci_command","APPLICATION_SPECIFIC","AUDIO","AUDIO_VIDEO","Aborted","Authentication","BILLBOARD","BLUETOOTH","BOS_MIN","BatteryInfo","Billboard","BillboardEx","BinaryObjectStore","Bulk","CAPABILITY_TYPE","CDC_DATA","CLEAR_FEATURE","COMM","COMPOSITE","COMPOSITE","CONTENT_SECURITY","Class","ComplianceMode","Configuration","ConfigurationSummary","ContainerID","ContainerId","Control","ControllerError","DESCRIPTOR_TYPE","DEVICE_REMOTE_WAKEUP","DIAGNOSTIC","Device","Device","DeviceCapability","DeviceQualifier","DeviceRemovable","DeviceRemovable","Disabled","EMPTY","Endpoint","Endpoint","FLOPPY","FS","GET_CLASS","GET_CONFIGURATION","GET_DESCRIPTOR","GET_DEVICE","GET_INTERFACE","GET_INTERFACE","GET_STATUS","General","HID","HID_BOOT_KEYBOARD","HID_BOOT_MOUSE","HID_GENERIC","HID_GET_REPORT","HID_SET_PROTOCOL","HID_SET_REPORT","HS","HUB","HUB_FS","HUB_HS_MTT","HUB_HS_STT","HUB_SS","HidClass","HidPhysical","HidReport","HotReset","Hub","Hub3","IAD","IMAGE","Inactive","Interface","Interface","InterfaceAssociation","InterfaceAssociationDescriptor","Interrupt","InvalidDescriptor","InvalidParameter","Isochronous","LS","MAX_DEPTH","MIDI_STREAMING","MISCELLANEOUS","MSD_BULK_ONLY","Other","OutOfMemory","PERSONAL_HEALTHCARE","PHYSICAL","PRINTER","PSIV","PSIV10","PSIV11","PSIV12","PSIV13","PSIV14","PSIV15","PSIV5","PSIV6","PSIV7","PSIV8","PSIV9","PdConsumerPort","PdProviderPort","Platform","Polling","PowerDelivery","PrecisionTimeMeasurement","Recovery","Resume","RxDetect","SET_CLASS","SET_CONFIGURATION","SET_DESCRIPTOR","SET_DEVICE","SET_FEATURE","SET_HUB_DEPTH","SET_INTERFACE","SET_INTERFACE","SET_ISOCH_DELAY","SET_SEL","SMART_CARD","SS","STILL_IMAGING","STORAGE","ShortPacket","Stall","Standard","String","SuperspeedPlus","SuperspeedUsb","SuperspeedUsbEndpointCompanion","SuperspeedplusIsochronousEndpointCompanion","TYPE_C_BRIDGE","TestMode","U0","U1","U2","U3","USB1_0","USB1_1","USB2_0","USB3_0","USB3_1","USB3_2","UnexpectedToken","Unsupported","Usb2HubCharacterisrics","Usb2HubDescriptor","Usb2_0Extention","Usb3ExitLatencyValues","Usb3HubCharacterisrics","Usb3HubDescriptor","Usb3LinkState","UsbAddress","UsbAlternateSettingNumber","UsbBaseClass","UsbBinaryObjectStore","UsbBinaryObjectStoreDescriptor","UsbClass","UsbClassDriverStarter","UsbConfiguration","UsbConfigurationDescriptor","UsbConfigurationValue","UsbContainerIdCapability","UsbControlRequest","UsbControlRequestBitmap","UsbControlRequestTarget","UsbControlRequestType","UsbControlSetupData","UsbDescriptor","UsbDescriptorType","UsbDevice","UsbDeviceCapabilityDescriptor","UsbDeviceCapabilityType","UsbDeviceContext","UsbDeviceDescriptor","UsbDeviceFeatureSel","UsbDeviceFocusedScope","UsbDeviceIter","UsbDeviceIterResult","UsbDeviceQualifierDescriptor","UsbEndpoint","UsbEndpointAddress","UsbEndpointDescriptor","UsbEndpointType","UsbError","UsbHidClassDescriptor","UsbHidReportDescriptor","UsbHostInterface","UsbHubPortNumber","UsbInterface","UsbInterfaceDescriptor","UsbInterfaceDriverStarter","UsbInterfaceNumber","UsbLangId","UsbManager","UsbProductId","UsbProtocolCode","UsbRouteString","UsbSsDeviceCapability","UsbStringDescriptor","UsbSubClass","UsbTransactionError","UsbVendorId","UsbVersion","UsbWord","VALID_MASK","VENDOR_SPECIFIC","VIDEO","Vendor","WIRELESS","WirelessUsb","WirelessUsbExt","XINPUT","XINPUT_HEADSET","XINPUT_IF2","XINPUT_IF3","addr","address","alternate_setting","alternate_setting","append","appending","as_u16","as_u32","as_u8","attach_child_device","attach_child_device","bAlternateSetting","bConfigurationValue","bCountryCode","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType","bDescriptorType_","bDevCapabilityType","bDevCapabilityType","bDeviceClass","bDeviceClass","bDeviceProtocol","bDeviceProtocol","bDeviceSubClass","bDeviceSubClass","bEndpointAddress","bFirstInterface","bFunctionClass","bFunctionProtocol","bFunctionSubClass","bFunctionalitySupport","bHubContrCurrent","bHubContrCurrent","bHubHdrDecLat","bInterfaceClass","bInterfaceCount","bInterfaceNumber","bInterfaceProtocol","bInterfaceSubClass","bInterval","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bLength","bMaxPacketSize0","bMaxPacketSize0","bMaxPower","bNbrPorts","bNbrPorts","bNumConfigurations","bNumConfigurations","bNumDescriptors","bNumDeviceCaps","bNumEndpoints","bNumInterface","bPwrOn2PwrGood","bPwrOn2PwrGood","bRequest","bReserved","bReserved","bU1DevExitLat","base","bcdDevice","bcdHID","bcdUSB","bcdUSB","bmAttributes","bmAttributes","bmAttributes","bmRequestType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bos","capability_type","capability_type","characteristics","characteristics","child_device","children","children","class","class","class","class","class","class","class_string","clear_device_feature","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compact","config_raw","configuration_index","configuration_value","configuration_value","configurations","configure_endpoint","configure_endpoint","configure_hub2","configure_hub2","configure_hub3","configure_hub3","container_id","control_nodata","control_recv","control_send","control_send","control_slice","control_vec","current_configuration","default","depth","deref","descriptor","descriptor","descriptor","descriptor","descriptor_type","descriptor_type","detach_child_device","device","device_by_addr","device_removable","device_removable","devices","drivers","drop","drop","endpoint_address","endpoints","ep_no","ep_type","ep_type","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","find_interface","first_child","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_device","focus_hub","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_slice","from_slice","from_ss_dev_cap","from_u16","from_u8","from_u8","from_u8","from_u8","get_descriptor","get_descriptor","get_string","hid_reports_by","iConfiguration","iFunction","iInterface","iManufacturer","iProduct","iSerialNumber","idProduct","idVendor","if_no","if_no","index","index_if","init","instantiate","instantiate","instantiate","interface_index","interfaces","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_compound_device","is_compound_device","is_configured","is_device_to_host","is_dir_in","is_dir_in","is_empty","lang_id","len","len","length","manufacturer_index","manufacturer_string","max_packet_size","max_packet_size","max_packet_size","max_power","name","name","new","new","new","next","notify_error","num_children","num_descriptors","num_endpoints","num_interface","num_ports","num_ports","parent","parent_device_address","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pid","pid","ports","ports","power_on_to_power_good","power_on_to_power_good","preferred_device_name","preferred_lang_id","product_index","product_string","protocol","protocol_speed","protocol_speed","raw","read","read","read_slice","read_vec","register_xfer_task","remove_device","request","route_string","route_string","serial_number","serial_number_index","set_configuration","set_device_feature","set_max_packet_size","set_sel","speed","ss_dev_cap","sub","supports_port_indicators","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","total_length","total_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttt","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u1_dev_exit_lat","u1pel","u1sel","u2_dev_exit_lat","u2pel","u2sel","unfocus_hub","usb_version","usb_version","uuid","uuid","value","vid","vid","wDescriptorLength","wDescriptorLength_","wHubCharacteristics","wHubCharacteristics","wHubDelay","wIndex","wLangId","wLength","wMaxPacketSize","wSpeedSupported","wTotalLength","wTotalLength","wU2DevExitLat","wValue","write","write","write_slice","xhci","usb_audio","usb_hid","usb_hub","usb_msd","xinput","UsbAudioDriver","UsbAudioStarter","borrow","borrow","borrow_mut","borrow_mut","from","from","instantiate","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","UsbHidDriver","UsbHidStarter","borrow","borrow","borrow_mut","borrow_mut","from","from","get_report","instantiate","into","into","new","set_boot_protocol","set_report","try_from","try_from","try_into","try_into","type_id","type_id","BH_PORT_RESET","C_BH_PORT_RESET","C_BH_PORT_RESET","C_HUB_LOCAL_POWER","C_HUB_OVER_CURRENT","C_PORT_CONFIG_ERROR","C_PORT_CONFIG_ERROR","C_PORT_CONNECTION","C_PORT_CONNECTION","C_PORT_CONNECTION","C_PORT_CONNECTION","C_PORT_ENABLE","C_PORT_ENABLE","C_PORT_LINK_STATE","C_PORT_LINK_STATE","C_PORT_OVER_CURRENT","C_PORT_OVER_CURRENT","C_PORT_OVER_CURRENT","C_PORT_OVER_CURRENT","C_PORT_RESET","C_PORT_RESET","C_PORT_RESET","C_PORT_RESET","C_PORT_SUSPEND","C_PORT_SUSPEND","FORCE_LINKPM_ACCEPT","PORT_CONNECTION","PORT_CONNECTION","PORT_CONNECTION","PORT_CONNECTION","PORT_ENABLE","PORT_ENABLE","PORT_ENABLE","PORT_HIGH_SPEED","PORT_INDICATOR","PORT_INDICATOR","PORT_LINK_STATE","PORT_LINK_STATE","PORT_LOW_SPEED","PORT_LOW_SPEED","PORT_OVER_CURRENT","PORT_OVER_CURRENT","PORT_OVER_CURRENT","PORT_OVER_CURRENT","PORT_POWER","PORT_POWER","PORT_POWER","PORT_POWER","PORT_REMOTE_WAKE_MASK","PORT_RESET","PORT_RESET","PORT_RESET","PORT_RESET","PORT_SPEED","PORT_SUSPEND","PORT_SUSPEND","PORT_TEST","PORT_TEST","PORT_U1_TIMEOUT","PORT_U2_TIMEOUT","UsbHub2Driver","UsbHub2PortChangeBit","UsbHub2PortFeatureSel","UsbHub2PortStatus","UsbHub2PortStatusBit","UsbHub3Driver","UsbHub3PortChangeBit","UsbHub3PortFeatureSel","UsbHub3PortStatus","UsbHub3PortStatusBit","UsbHubCommon","UsbHubFeatureSel","UsbHubStarter","all","all","all","all","as_u32","as_u32","attach_device","attach_device","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","clear_hub_feature","clear_port_feature","clear_port_feature","clear_port_feature","clear_status_changes","clear_status_changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","complement","contains","contains","contains","contains","detatch_device","detatch_device","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","get_hub_descriptor","get_port_status","get_port_status","get_port_status","insert","insert","insert","insert","instantiate","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","link_state","link_state_raw","new","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","set","set","set","set","set_hub_depth","set_hub_feature","set_port_feature","set_port_feature","set_port_feature","speed","status_change_bit","status_change_bit","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","UsbMsdDriver","UsbMsdStarter","borrow","borrow","borrow_mut","borrow_mut","from","from","get_max_lun","instantiate","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","MIN_LEN","VALID_LEN","VALID_TYPE","XInputDriver","XInputMsg14","XInputStarter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","fmt","from","from","from","instantiate","into","into","into","new","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AC64","ADDRESS_DEVICE_COMMAND","ALL_CHANGE_BITS","Aborted","Acquired","Available","BABBLE_DETECTED","BANDWIDTH_ERROR","BANDWIDTH_OVERRUN","BANDWIDTH_REQUEST_EVENT","BNC","BulkIn","BulkOut","CAS","CCS","CEC","CFC","CNR","COMMAND_ABORTED","COMMAND_COMPLETION_EVENT","COMMAND_RING_STOPPED","CONFIGURE_ENDPOINT_COMMAND","CONTEXT_STATE_ERROR","CONTROL","CSC","CSZ","CapabilityRegisters","CommandCompletion","CommandRequestBlock","Completed","Control","ControlIn","ControlOut","CycleBit","DATA","DATA_BUFFER_ERROR","DCI","DEVICE_NOTIFICATION_EVENT","DISABLE_SLOT_COMMAND","DOORBELL_EVENT","DR","DeviceNotification","DeviceNotificationBitmap","DoorbellRegister","EMPTY","EMPTY","ENABLE_SLOT_COMMAND","ENDPOINT_NOT_ENABLED","EVALUATE_CONTEXT_COMMAND","EVENT_DATA","EVENT_LOST","EVENT_RING_FULL","EndpointContext","EpRingContext","EpRingScopeGuard","EpType","EventRingSegmentTableEntry","FUNCTION_WAKE","HCH","HCRST","HOST_CONTROLLER_EVENT","HccParams1","HciContext","HciDeviceContext","IMCOMPATIBLE_DEVICE","INTE","INVALID","INVALID_STREAM_ID","INVALID_STREAM_TYPE","ISOCH","ISOCH_BUFFER_OVERRUN","InputContext","InputControlContext","InterruptIn","InterruptOut","InterrupterRegisterSet","Invalid","IsochIn","IsochOut","LHRC","LINK","LTC","LWS","MAX_EXIT_LATENCY_TOO_LARGE","MAX_PSA_SIZE","MFINDEX_WRAP_EVENT","MISSED_SERVICE","NAME_USB","NOP","NOP_COMMAND","NORMAL","NO_PING_RESPONSE","NO_SLOTS_AVAILABLE","NSS","NoData","OCA","OCC","OperationalRegisters","PAE","PARAMETER_ERROR","PEC","PED","PIC","PIND","PLC","PLS","PORT_STATUS_CHANGE_EVENT","PP","PPC","PR","PRC","PRESERVE_MASK","PortId","PortRegisters","PortSc","PortStatusChange","RESERVED","RESET_ENDPOINT_COMMAND","RESOURCE_ERROR","RING_OVERRUN","RING_UNDERRUN","RUN","Read","RequestState","RuntimeRegisters","SEC","SECONDARY_BANDWIDTH","SETUP","SHORT_PACKET","SIZE_EVENT_RING","SLOT_NOT_ENABLED","SPC","SPEED","SPLIT_TRANSACTION","STALL","STATUS","STOPPED","STOPPED_LENGTH_INVALID","STOPPED_SHORT_PACKET","SUCCESS","Scheduled","ScheduledTrb","SlotContext","SlotId","TRANSFER_EVENT","TRB_ERROR","Transfer","TransferDirection","Trb","TrbAddressDeviceCommand","TrbBase","TrbCC","TrbCommandCompletionEvent","TrbCompletionCode","TrbConfigureEndpointCommand","TrbDataStage","TrbDci","TrbDeviceNotificationEvent","TrbDir","TrbEvaluateContextCommand","TrbEvent","TrbIDt","TrbIoC","TrbIsp","TrbLink","TrbNop","TrbNormal","TrbPortId","TrbPortStatusChangeEvent","TrbPtr","TrbRawData","TrbResetEndpointCommand","TrbSetupStage","TrbSlotId","TrbStatusStage","TrbTranfserType","TrbTransferEvent","TrbType","TrbXferLen","UNDEFINED_ERROR","USB_TRANSACTION_ERROR","UsbCmd","UsbSts","VF_EVENT_RING_FULL","WCE","WDE","WOE","WPR","WRC","Write","XECP","Xhci","XhciRegistrar","XhciSupportedProtocolCapability","_attach_root_port","_process_port_change","address","all","all","all","all","all","alloc","alloc_ep_ring","allocate_crb","as_event","as_event","as_trb","as_trb","attach_child_device","attach_child_device","attach_root_device","base","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","can_read","can_write","clear","clear","clear_changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare_exchange_state","compare_exchange_state","compatible_port_count","compatible_port_offset","complement","complement","complement","complement","complement","completion_code","completion_code","completion_code","configure_endpoint","configure_endpoint","configure_hub2","configure_hub2","configure_hub3","configure_hub3","contains","contains","contains","contains","contains","context_entries","control","control_async","control_recv","control_send","copied","copied","copied","copy","copy","copy_without_cycle","copy_without_cycle","current_status","cycle_bit","cycle_bit","db_off","dcbaap","dci","dci","dci","default","dequeue_event","deref","deref_mut","device_notification_bitmap","difference","difference","difference","difference","difference","dir","dir","dispose_ref","doorbells","drop","drop","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","endpoint","ep_in","ep_no","ep_out","ep_ring_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","execute_command","find_crb","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_hub","focus_hub","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_i64","from_i64","from_i64","from_u64","from_u64","from_u64","from_usb_ep_type","get_device_context","has_changes","has_known_type","has_known_type","hcc_params1","hcc_params2","hcs_params1","hcs_params2","hcs_params3","idt","idt","index","init","init","input_context","insert","insert","insert","insert","insert","instantiate","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioc","ioc","irs","is_all","is_all","is_all","is_all","is_all","is_bulk","is_command","is_connected","is_connected_status_changed","is_control","is_control","is_disabled","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_event","is_event_data","is_interrupt","is_isochronous","is_powered","is_transfer","is_usb2","is_usb3","isp","isp","issue_trb","last_setup","length","link_state","link_state_raw","max_device_slots","max_exit_latency","max_interrups","max_ports","max_psa_size","max_scratchpad_size","mf_index","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not","not","not","not","not","num_ports","opr","page_size","page_size_raw","parent_device_address","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pcs","peek","port_by","port_by_slot","port_id","port_id","port_indicator_raw","port_is_usb2","port_is_usb3","ports","ports","power_off","primary_irs","process_event","ptr","ptr","raw","raw_copy","raw_copy","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","raw_data","read","read_cmd","registrar","remove","remove","remove","remove","remove","reset","reset_endpoint","reset_status","rev_major","rev_minor","ring_a_doorbell","ring_a_doorbell_async","root_hub_port","route_string","route_string","rts","rts_off","schedule","scoped","semaphore","set","set","set","set","set","set","set","set_add","set_average_trb_len","set_cmd","set_config","set_context_entries","set_crcr","set_dcbaap","set_dci","set_dci","set_device_context","set_device_notification_bitmap","set_dir","set_dir","set_drop","set_ep_type","set_error_count","set_idt","set_idt","set_iman","set_interval","set_ioc","set_ioc","set_is_hub","set_is_mtt","set_isp","set_isp","set_max_burst_size","set_max_exit_latency","set_max_packet_size","set_max_packet_size","set_max_packet_size","set_num_ports","set_parent_hub_slot_id","set_parent_port_id","set_ptr","set_ptr","set_raw","set_response","set_response","set_root_hub_port","set_route_string","set_scheduled","set_slot_id","set_slot_id","set_speed","set_state","set_state","set_target","set_trb_type","set_trdp","set_ttt","set_xfer_len","set_xfer_len","setup_data","size","size","slot","slot_by_port","slot_id","slot_id","slot_id","speed","speed","speed","speed_raw","state","state","status","status","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_usb_error","to_usb_error","toggle","toggle","toggle","toggle","toggle","toggle","tr_base","tr_value","tr_value","transfer_async","transfer_length","transmute","transmute","trb_type","trb_type","trb_value","trdp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_acquire","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfocus_hub","unfocus_hub","union","union","union","union","union","usb2_ports","usb3_ports","value","version","wait","wait_cnr","write","write","write_cmd","xecp","xecp","xfer_len","xfer_len","APPEND","CREAT","EXCL","FileManager","FsAccessToken","FsDriver","FsRawDirEntry","FsRawFileControlBlock","FsRawMetaData","FsRawReadDir","INodeType","OffsetType","OpenOptions","PATH_SEPARATOR","READ","SeekCur","SeekEnd","SeekSet","TRUNC","WRITE","Whence","append","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","canonical_path","canonical_path_components","chdir","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","contains","creat","creat","creat","create","create_new","default","description","dev","devfs","device_name","eq","eq","file_type","flush","flush","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fstat","get","init","inode","inode","into","into","into","into","into","into","into","into","into_iter","len","lookup","lseek","lseek","lseek","metadata","mkdir","mkdir","mkdir","mkdir2","mount_points","name","new","new","new","new","new_unchecked","next","open","open","partial_cmp","partial_cmp","read","read","read_data","read_dir","read_dir","read_to_end","rename","rename","rename","root_dir","set","stat","stat","stat","to_owned","to_owned","to_owned","to_string","truncate","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlink","unlink","unlink","write","write","write_data","write_data","write_str","full","null","random","zero","Full","borrow","borrow_mut","from","init","into","name","open","read_data","try_from","try_into","type_id","write_data","Null","borrow","borrow_mut","from","init","into","name","open","try_from","try_into","type_id","Random","borrow","borrow_mut","from","init","into","name","open","read_data","try_from","try_into","type_id","Zero","borrow","borrow_mut","from","init","into","name","open","read_data","try_from","try_into","type_id","DevFs","DeviceAccessToken","DeviceCharacteristics","DeviceFileDriver","InstallDeviceError","MajorDevNo","MinorDevNo","NameAlreadyInUse","OutOfDeviceNumber","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","eq","eq","eq","file_type","fmt","fmt","fmt","fmt","from","from","from","from","from","info","info","init","install_minor_device","into","into","into","into","into","lseek","name","open","partial_cmp","partial_cmp","partial_cmp","read_data","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_data","smbios","ADDITIONAL_INFO","BASEBOARD_INFO","BIOS_INFO","BIOS_LANGUAGE_INFO","BOOT_INTEGRITY_SERVICE","BUILT_IN_POINTING_DEVICE","CACHE_INFO","COOLING_DEVICE","DEFAULT_STRING","ELECTRICAL_CURRENT_PROBE","GROUP_ASSOCIATIONS","HARDWARE_SECURITY","HeaderType","IPMI_DEVICE_INFO","MANAGEMENT_CONTROLLER_HOST_INTERFACE","MANAGEMENT_DEVICE","MANAGEMENT_DEVICE_COMPONENT","MANAGEMENT_DEVICE_THRESHOLD_DATA","MEMORY_ARRAY_MAPPED_ADDRESS","MEMORY_CHANNEL","MEMORY_CONTROLLER_INFO","MEMORY_DEVICE","MEMORY_DEVICE_MAPPED_ADDRESS","MEMORY_MODULE_INFO","OEM_STRINGS","ONBOARD_DEVICES_EXTENDED_INFO","ONBOARD_DEVICE_INFO","OUT_OF_BAND_REMOTE_ACCESS","PHYSICAL_MEMORY_ARRAY","PORTABLE_BATTERY","PORT_CONNECTOR_INFO","PROCESSOR_ADDITIONAL_INFO","PROCESSOR_INFO","SYSTEM_BOOT_INFO","SYSTEM_CONFIGURATION_OPTIONS","SYSTEM_ENCLOSURE","SYSTEM_EVENT_LOG","SYSTEM_INFO","SYSTEM_POWER_CONTROLS","SYSTEM_POWER_SUPPLY","SYSTEM_RESET","SYSTEM_SLOTS","SmBios","SmBiosEntryV1","SmBiosHeader","TEMPERATURE_PROBE","TO_BE_FILLED_BY_OEM","TPM_DEVICE","VOLTAGE_PROBE","_32BIT_MEMORY_ERROR_INFO","_64BIT_MEMORY_ERROR_INFO","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","find","fmt","from","from","from","from","handle","header_size","header_type","init","into","into","into","into","iter","manufacturer_name","model_name","partial_cmp","string","struct_size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Hal","HalCpu","HalPci","HalSpinLoopWait","HalSpinlock","HalSync","HalTrait","InterruptGuard","NULL","NonNullPhysicalAddress","NonZeroPhysicalAddressRepr","PhysicalAddress","PhysicalAddressRepr","Spinlock","add","add","as_repr","as_u64","as_usize","backward_checked","bitand","bitand","bitor","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_invalidate_tlb","broadcast_reschedule","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare_and_swap","cpu","cpu","current_processor_index","default","direct_map","direct_unmap","disable_interrupt","drop","enable_interrupt","eq","eq","fetch_inc","fetch_reset","fetch_set","fetch_update","fmt","fmt","fmt","force_unlock","force_unlock","forward_checked","from","from","from","from","from","from","from","from","from_u64","from_usize","get","identity_map","interrupt_guard","into","into","into","into","into","invoke_legacy","invoke_user","is_interrupt_disabled","is_interrupt_enabled","lock","lock","mul","mul","new","new","new","new_unchecked","no_op","not","partial_cmp","partial_cmp","pci","pci","read_pci","register_msi","reset","reset","set_interrupt_enabled","spin_loop_hint","spin_wait","steps_between","stop","sub","sub","swap","sync","sync","synchronized","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","type_id","type_id","type_id","type_id","type_id","wait","wait_for_interrupt","write_pci","audio","emcon","hid_mgr","image","screen","tty","AUDIO_LEVEL_MAX","AUDIO_LEVEL_MIN","AudioContext","AudioContextHandle","AudioDriver","AudioEmitter","AudioManager","AudioNode","AudioNodeFilter","DEFAULT_SAMPLE_RATE","FREQ_MAX","FREQ_MIN","FreqType","NoteControl","NoteOnParams","OscType","Pulse","PulseWaveOscillator","SampleType","Sawtooth","SawtoothWaveOscillator","Sine","SineWaveOscillator","Square","Triangle","TriangleWaveOscillator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closed","cmp","connect","create_gain","create_oscillator","destination","drop","eq","final_destination","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","handle","init","into","into","into","into","into","into","into","into","into","into","into","into","into_filter","is_closed","is_leaf","master_gain","new","new","new","new","new","new","new","new","number_of_outputs","partial_cmp","register_context","reinterpret_i16","remove_emitter","render","schedule","schedule_emitter","set_audio_driver","set_master_volume","size_of_buffer","start","stop","take_final_destination","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister_context","write_block","EmConsole","borrow","borrow_mut","cursor_position","dims","from","into","is_cursor_enabled","new","read_async","reset","set_attribute","set_cursor_enabled","set_cursor_position","try_from","try_into","type_id","write_char","write_str","A","B","BREAK","Collection","DpadDown","DpadLeft","DpadRight","DpadUp","EndCollection","Feature","GameInput","GameInputButtonType","GameInputHandle","GameInputManager","HidBitStreamError","HidBitStreamReader","HidBitStreamWriter","HidManager","HidParsedReport","Input","InvalidParameter","KeyEvent","KeyEventFlags","KeyReportRaw","KeyboardState","LButton","Menu","MouseEvent","MouseState","OutOfBounds","Output","ParsedReportApplication","ParsedReportEntry","ParsedReportMainItem","RButton","Select","Start","ThumbL","ThumbR","X","Y","_Reserved","advance_by","advance_by","app_by_report_id","applications","bit_count","bit_count","bit_count","bit_count_for_feature","bit_count_for_input","bit_count_for_output","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","buttons","buttons","clear","clear","clear_stream","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","connect_new_input","contains","copy_from","current","current_buttons","current_input","current_len","data","default","default","default","empty","empty","empty","empty","empty","empty","entries","eq","eq","eq","event_buttons","event_buttons","feature_items","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_item","has_report_id","init","initial_bit_position","input_items","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_char","is_array","is_break","is_const","is_make","is_relative","is_variable","key_data","keydata","logical_max","logical_min","max_x","max_y","modifier","modifier","new","new","new","new","new","new","new","output_items","parse","parse","partial_cmp","partial_cmp","point","post","prev","prev_buttons","primary_app","process_absolute_report","process_relative_report","process_report","read_bit_array","read_value","read_value_signed","report_count","report_id","report_ids","report_size","send_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage","usage","usage_max","usage_min","usage_range","wheel","write_item","x","x","y","y","DecodeError","General","ImageLoader","InvalidData","InvalidParameter","NotSupported","OutOfMemory","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","load","try_from","try_from","try_into","try_into","type_id","type_id","BitmapScreen","Landscape","Portrait","Screen","ScreenOrientation","blt","blt","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","draw_glyph","draw_glyph","eq","fill_rect","fill_rect","fmt","from","from","into","into","is_landscape","is_portrait","native_size","native_size","new","orientation","partial_cmp","physical_size","pixels_per_inch","rotate","rotate","rotation","rotation","set_orientation","set_orientation","set_rotation","set_rotation","size","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DeviceError","EndOfStream","Err","NotReady","NullTty","Ok","Tty","TtyError","TtyRead","TtyReadResult","TtyWrite","attributes","borrow","borrow","borrow_mut","borrow_mut","cursor_position","cursor_position","dims","dims","fmt","from","from","into","into","is_cursor_enabled","is_cursor_enabled","null","read_async","read_async","read_line_async","reset","reset","set_attribute","set_attribute","set_cursor_enabled","set_cursor_enabled","set_cursor_position","set_cursor_position","try_from","try_from","try_into","try_into","type_id","type_id","write_str","EventManager","Log","SimpleMessagePayload","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","icon","into","into","into","message","monitor_notification","new","new","notify_simple_message","system_log","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_str","AllocationError","DeallocationError","Framebuffer","InvalidArgument","InvalidArgument","Kernel","MProtect","MProtect","MemoryManager","MemoryMapRequest","Mmio","None","OutOfMemory","PAGE_SIZE_MIN","Read","ReadExec","ReadWrite","Unexpected","Unexpected","Unsupported","Unsupported","User","alloc","alloc_dma","alloc_pages","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_executable","can_read","can_write","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","eq","fixedvec","fmt","fmt","fmt","fmt","free_memory_size","from","from","from","from","from","init_first","init_second","into","into","into","into","into","last_alloc_ptr","mmap","mmio","page_size_min","partial_cmp","pg_alloc","pg_dealloc","reserved_memory_size","slab","static_alloc_real","statistics","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zalloc","zalloc2","zfree","CustomAlloc","alloc","borrow","borrow_mut","dealloc","from","into","try_from","try_into","type_id","FixedVec","as_mut_slice","as_slice","borrow","borrow_mut","capacity","deref","deref_mut","from","into","len","new","pop","push","set_len","try_from","try_into","type_id","MmioRegU16","MmioRegU32","MmioRegU64","MmioRegU8","MmioSlice","base","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","from","from_bar","from_phys","from_virt","into","into","into","into","into","read_u16","read_u32","read_u64","read_u8","read_volatile","read_volatile","read_volatile","read_volatile","size","to_owned","transmute","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_u32","write_u64","write_u8","write_volatile","write_volatile","write_volatile","write_volatile","AtomicNode","Node16","borrow","borrow","borrow_mut","borrow_mut","element_ptr","element_ptr","from","from","into","into","new","new","next","next","next_raw","next_raw","try_from","try_from","try_into","try_into","type_id","type_id","Apps","Cancel","Check","ChevronLeft","ChevronRight","Close","Delete","Error","Icons","Info","Menu","Pointer","Usb","Warning","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","icon","IconManager","bitmap","borrow","borrow_mut","from","into","mask","try_from","try_into","type_id","BinaryLoader","BinaryRecognizer","LegacyAppContext","LoadedImageOption","Personality","PersonalityContext","RuntimeEnvironment","argv","arle","base_of_code","base_of_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","context","default","default","exit","fmt","fmt","from","from","from","from","get","haribote","image_base","image_size","init","into","into","into","into","invoke_start","load","myos","name","new","on_exit","on_exit","option","recognize","recognize","size_of_code","size_of_data","stack_pointer","start","supported_extensions","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uuid","ArleContext","ArleLoader","ArleRecognizer","LaunchOption","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","context","default","from","from","from","from","identity","into","into","into","into","invoke_start","load","new","new","on_exit","option","recognize","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ANK","Ascii","EUC","Hoe","HoeLangMode","HrbBinaryLoader","HrbRecognizer","JisChar","JisChars","JisString","Kanji","ShiftJIS","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chars","clone","clone_into","cmp","context","eq","fmt","fmt","from","from","from","from","from","from","from","hoe_syscall","identity","into","into","into","into","into","into","into","into_iter","invoke_start","load","new","new","next","on_exit","option","partial_cmp","recognize","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AllocationStrategy","BestFit","FirstFit","MyosBinaryLoader","MyosRuntime","SimpleAllocator","WasmRecognizer","alloc","append_block","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","context","dealloc","default","eq","fmt","from","from","from","from","from","into","into","into","into","into","invoke_start","load","new","new","new","on_exit","option","partial_cmp","recognize","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Err","Err","LockResult","Mutex","MutexGuard","Ok","Ok","PoisonError","Poisoned","RwLock","RwLockReadGuard","RwLockWriteGuard","TryLockError","TryLockResult","WouldBlock","atomic","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","drop","drop","drop","drop","fifo","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","into","into","into","into","into","into","into","into_inner","into_inner","is_poisoned","lock","new","new","read","semaphore","signal","spinlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","AtomicFlags","AtomicFloat","AtomicWrapper","AtomicWrapperU16","AtomicWrapperU32","AtomicWrapperU64","AtomicWrapperU8","EMPTY","FloatType","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compare_exchange","compare_exchange_weak","contains","default","default","default","default","default","default","default","empty","empty","empty","empty","empty","empty","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_reset","fetch_set","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","from","from","from","from","from","insert","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_empty","load","new","new","new","new","new","new","new","remove","set","store","store","store","store","store","store","store","swap","swap","swap","swap","swap","swap","swap","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","value","AsyncEventQueue","ConcurrentFifo","EventQueue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dequeue","drop","enqueue","from","from","from","get_event","get_event","into","into","into","new","new","post","post","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_event","wait_event","with_capacity","AsyncSemaphore","AsyncSemaphoreObserver","AsyncSemaphoreResultObserver","BinarySemaphore","Semaphore","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","estimated_value","estimated_value","force_unlock","from","from","from","from","from","into","into","into","into","into","into_future","into_future","lock","new","new","new","poll","poll","poll","signal","signal","synchronized","synchronized","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_poll","type_id","type_id","type_id","type_id","type_id","wait","wait","wait_ok","with_capacity","SignallingObject","borrow","borrow_mut","compare_and_swap","default","from","into","new","signal","take","try_from","try_into","type_id","wait_for","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","force_unlock","from","from","from","from","into","into","into_inner","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","DeviceInfo","Efficient","EfficientSub","Hybrid","Normal","ProcessorCoreType","ProcessorIndex","ProcessorSystemType","SMP","SMT","Sub","System","Uniprocessor","Version","acpi","activate_cpu","as_u32","assert_call_once","boot_flags","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","codename","cpu","cpu_ref","cpus","current_device","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","init","into","into","into","into","into","into","is_efficient_processor","is_multi_processor_capable_kernel","is_normal_processor","is_performance_processor","is_sub_processor","log","main_screen","maj","manufacturer_name","min","model_name","name","new","new","num_of_efficient_cpus","num_of_logical_cpus","num_of_main_cpus","num_of_physical_cpus","partial_cmp","partial_cmp","partial_cmp","patch","processor_system_type","rel","safe_screen","set_stdout","short_name","smbios","stdout","system_time","to_owned","to_owned","to_owned","to_owned","to_string","total_memory_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","Task","borrow","borrow_mut","executor","from","into","new","scheduler","try_from","try_into","type_id","Executor","borrow","borrow_mut","from","into","new","run","spawn","try_from","try_into","type_id","Apc","Device","Disabled","Dispatch","EPSILON","FOREVER","FullThrottle","High","High","IPI","Idle","Irql","JUST","JoinHandle","Low","Normal","Normal","Passive","Priority","ProcessId","Quantum","Realtime","Saving","Scheduler","SchedulerState","SpawnOption","ThreadHandle","TimeSpec","Timer","TimerEvent","TimerSource","add","as_raw","as_usize","async_timer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","consume","current","current_personality","current_pid","current_state","current_thread","cwd","default","default","default","default","default","epsilon","eq","eq","eq","eq","eq","eq","eq","exit","fire","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_duration","from_isize","from_raw","get_idle_statistics","get_thread_statistics","init_second","into","into","into","into","into","into","into","into","into","into","into","into","into_duration","into_isize","is_alive","is_alive","is_enabled","is_expired","is_forever","is_just","is_multi_processor_capable","is_useful","join","join","join","measure","monotonic","monotonic","name","new","new","new","new","one_shot","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perform_tasks","personality","print_statistics","raise","repeat_until","reschedule","reset","schedule","set_cwd","set_timer","setup_new_thread","sleep","sleep_async","sleep_thread","spawn","spawn_async","spawn_task","start","start","start_process","strong_affinity","strong_affinity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage_per_cpu","usage_total","wake","window","with_priority","font","terminal","text","theme","window","Cursive","FixedFontDriver","FixedSystem","FontDescriptor","FontDriver","FontFamily","FontManager","Monospace","SansSerif","Serif","SmallFixed","Terminal","TrueTypeFont","base_height","base_height","base_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","draw_char","draw_char","draw_char","draw_char","draw_glyph","em_width","eq","fixed_system_font","fmt","from","from","from","from","from","init","into","into","into","into","into","is_scalable","is_scalable","is_scalable","is_scalable","kern","kern","kern","kern","line_height","line_height","monospace_font","new","new","new","partial_cmp","point","preferred_console_font","preferred_line_height","preferred_line_height","preferred_line_height","title_font","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ui_font","width","width_of","width_of","width_of","width_of","DEFAULT_PALETTE","Terminal","attributes","borrow","borrow_mut","cursor_position","dims","from","from_window","into","is_cursor_enabled","new","read_async","reset","set_attribute","set_cursor_enabled","set_cursor_position","try_from","try_into","type_id","write_str","AttributeSet","AttributedString","Bottom","Center","Center","CharWrapping","Leading","Left","LineBreakMode","LineStatus","NoWrap","Right","TextAlignment","TextProcessing","Top","Trailing","TrancatingTail","VerticalAlignment","WordWrapping","align","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_center","bottom_left","bottom_right","bounding_size","bounding_size","center","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","color","default","default","default","draw_text","draw_text","end_position","eq","eq","eq","fmt","fmt","fmt","fmt","font","font","from","from","from","from","from","from","from","height","into","into","into","into","into","into","into","line_break_mode","line_break_mode","line_statuses","middle_center","middle_left","middle_right","new","new","shadow","shadow_color","shadow_offset","start_position","text","text","to_owned","to_owned","to_owned","to_owned","top_center","top_left","top_right","trailing","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valign","valign","width","Theme","borrow","borrow_mut","button_default_background","button_default_border","button_default_foreground","button_destructive_background","button_destructive_border","button_destructive_foreground","default_desktop_color","from","into","shared","status_bar_background","status_bar_foreground","try_from","try_into","type_id","window_default_accent","window_default_background","window_default_border_dark","window_default_border_light","window_default_foreground","window_title_active_background","window_title_active_background_dark","window_title_active_foreground","window_title_active_foreground_dark","window_title_active_shadow","window_title_active_shadow_dark","window_title_close_active_background","window_title_close_active_foreground","window_title_close_foreground","window_title_close_foreground_dark","window_title_inactive_background","window_title_inactive_background_dark","window_title_inactive_foreground","window_title_inactive_foreground_dark","Activated","AnimatedProp","AtomicWindowHandle","BACK_DOWN","BORDER","Back","BitmapStrategy","CLOSE_BUTTON","CLOSE_DOWN","Char","Close","Compact","DARK_ACTIVE","DARK_BORDER","DARK_MODE","DARK_TITLE","DEFAULT","DESKTOP_ITEMS","Deactivated","Disabled","Draw","EVENT","EVENT_MOUSE_MOVE","EVENT_MOUSE_SHOW","Expressive","FLOATING","FLOATING","FULLSCREEN","Full","HW_CURSOR","Hover","InconsistentCoordinates","Key","Key","MOVING","MouseDown","MouseEnter","MouseLeave","MouseMove","MouseUp","NEEDS_REDRAW","NEEDS_REDRAW","NORMAL","NO_SHADOW","Native","NoBitmap","NonBitmap","Nop","Normal","NotFound","OPAQUE","OPAQUE_CONTENT","PINCHABLE","POINTER","POINTER_ENABLED","POINTER_HIDE_TEMP","POINTER_VISIBLE","POPUP","POPUP_BARRIER","POPUP_BARRIER_BG","Pressed","ROOT","RawWindowBuilder","SUSPENDED","THIN_FRAME","TITLE","Timer","User","VISIBLE","ViewActionState","WindowAttributes","WindowDrawingError","WindowHandle","WindowLevel","WindowManager","WindowManagerAttributes","WindowMessage","WindowPostError","WindowStyle","WindowSystemEvent","active_title_color","active_title_color","add_screen_insets","all","all","all","as_usize","await_message","bg_color","bg_color","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitmap_argb32","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","center","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","contains","content_insets","content_rect","content_size","create_timer","current_desktop_window","default","default","default","default","default","difference","difference","difference","draw","draw_in_rect","draw_into","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frame","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","fullscreen","get","get_statistics","handle_default_message","hide","hide_pointer_temporarily","inactive_title_color","inactive_title_color","init","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidate_rect","invalidate_screen","is_active","is_alive","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_enabled","is_none","is_pointer_enabled","is_pointer_visible","is_some","is_valid","is_visible","level","main_screen_bounds","make_active","map","move_by","move_to","new","new","new","new","not","not","not","opaque","origin","partial_cmp","partial_cmp","partial_cmp","poll_message","post","post_absolute_pointer","post_key_event","post_relative_pointer","progress","read_message","refresh_if_needed","remove","remove","remove","reset","resize_to","save_screen_to","screen_insets","set","set","set","set","set_back_button_enabled","set_barrier_opacity","set_bg_color","set_close_button_enabled","set_desktop_bitmap","set_desktop_color","set_frame","set_needs_display","set_pointer_enabled","set_pointer_move","set_pointer_states","set_pointer_visible","set_title","show","size","style","style_add","style_sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","swap","symmetric_difference","symmetric_difference","symmetric_difference","thin_frame","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","user_screen_bounds","wait_message","while_hiding_pointer","with_options","write","userenv","UserEnv","borrow","borrow_mut","from","into","start","system_reset","try_from","try_into","type_id"],"q":[[0,"kernel"],[32,"kernel::arch"],[45,"kernel::arch::cpu"],[948,"kernel::arch::page"],[1096,"kernel::drivers"],[1099,"kernel::drivers::hda"],[2439,"kernel::drivers::pci"],[2699,"kernel::drivers::usb"],[3851,"kernel::drivers::usb::drivers"],[3856,"kernel::drivers::usb::drivers::usb_audio"],[3874,"kernel::drivers::usb::drivers::usb_hid"],[3895,"kernel::drivers::usb::drivers::usb_hub"],[4247,"kernel::drivers::usb::drivers::usb_msd"],[4266,"kernel::drivers::usb::drivers::xinput"],[4301,"kernel::drivers::usb::xhci"],[5399,"kernel::fs"],[5572,"kernel::fs::dev"],[5576,"kernel::fs::dev::full"],[5589,"kernel::fs::dev::null"],[5600,"kernel::fs::dev::random"],[5612,"kernel::fs::dev::zero"],[5624,"kernel::fs::devfs"],[5708,"kernel::fw"],[5709,"kernel::fw::smbios"],[5806,"kernel::hal"],[5945,"kernel::io"],[5951,"kernel::io::audio"],[6108,"kernel::io::emcon"],[6127,"kernel::io::hid_mgr"],[6447,"kernel::io::image"],[6470,"kernel::io::screen"],[6519,"kernel::io::tty"],[6565,"kernel::log"],[6601,"kernel::mem"],[6700,"kernel::mem::alloc"],[6710,"kernel::mem::fixedvec"],[6728,"kernel::mem::mmio"],[6793,"kernel::mem::slab"],[6817,"kernel::r"],[6842,"kernel::res"],[6843,"kernel::res::icon"],[6853,"kernel::rt"],[6922,"kernel::rt::arle"],[6965,"kernel::rt::haribote"],[7049,"kernel::rt::myos"],[7111,"kernel::sync"],[7210,"kernel::sync::atomic"],[7369,"kernel::sync::fifo"],[7405,"kernel::sync::semaphore"],[7470,"kernel::sync::signal"],[7484,"kernel::sync::spinlock"],[7511,"kernel::system"],[7636,"kernel::task"],[7647,"kernel::task::executor"],[7658,"kernel::task::scheduler"],[7900,"kernel::ui"],[7905,"kernel::ui::font"],[8000,"kernel::ui::terminal"],[8021,"kernel::ui::text"],[8148,"kernel::ui::theme"],[8185,"kernel::ui::window"],[8605,"kernel::user"],[8606,"kernel::user::userenv"],[8616,"core::fmt"],[8617,"core::fmt"],[8618,"core::any"],[8619,"bootprot"],[8620,"megstd::time"],[8621,"core::cmp"],[8622,"core::option"],[8623,"core::iter::traits::iterator"],[8624,"core::ffi"],[8625,"core::convert"],[8626,"alloc::string"],[8627,"core::num::nonzero"],[8628,"alloc::sync"],[8629,"alloc::boxed"],[8630,"alloc::vec"],[8631,"core::iter::traits::exact_size"],[8632,"core::num::nonzero"],[8633,"core::pin"],[8634,"core::time"],[8635,"core::marker"],[8636,"megstd::uuid"],[8637,"megstd::io::hid"],[8638,"megstd::io::hid"],[8639,"megstd::io"],[8640,"megstd::fs"],[8641,"core::fmt"],[8642,"core::sync::atomic"],[8643,"core::ops::function"],[8644,"core::ops::function"],[8645,"megstd::io::hid"],[8646,"meggl::coords"],[8647,"meggl::bitmap"],[8648,"core::ptr::non_null"],[8649,"meggl::bitmap"],[8650,"core::sync::atomic"],[8651,"core::ops::bit"],[8652,"core::ops::bit"],[8653,"core::task::poll"],[8654,"myacpi::tables"],[8655,"core::sync::atomic"],[8656,"meggl::coords"],[8657,"meggl::bitmap"]],"d":["","The modules in the hierarchy below arch are …","","","","","","Returns the argument unchanged.","Filesystem supports","Firmware supports","Hardware Abstraction Layer","Calls <code>U::from(self)</code>.","","Log Event Manager","","Memory manager","","","","","","Resource Manager","Runtime Environment and Personalities","Classes to synchronize","","Task scheduler","","","","User Interface modules (windows, terminals, …)","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Alignment check","","","","Adjust flag","","","","","","","","","","","","","","","","","","","","","","","#AC","","","","","#BP","","","Carry flag","","","","","","","","","","","","","","","","","","","","","","","","","","","#CP","","CPU specific context data","","","","Direction flag","","","","#DB","","","","","#NM","#DE","#DF","","","","","","","","CPUID Feature Function 0000_0001, ECX","","CPUID Feature Function 0000_0001, EDX","","CPUID Feature Function 0000_0007, 0, EBX","CPUID Feature Function 0000_0007, 0, ECX","CPUID Feature Function 0000_0007, 0, EDX","","","","","CPUID Feature Function 8000_0001, ECX","","CPUID Feature Function 8000_0001, EDX","","","","","","","","","","#MF","","#GP","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Able to use CPUID instruction","Interrupt enable flag","","","I/O privilege level","","","","","","","","","","","","","","#UD","#TS","","","Ring 0, Kernel mode","","","","","","","","","","","Type of x86 Segment Limit","Type of x86 Segment Limit","Type of 32bit Linear Address","Type of 64bit Linear Address","","","","","Mode flag (NEC V30)","","","","","","","","","","","","","#MC","","","","","Nested task flag","The NULL selector that does not contain anything","","","","NMI","","Overflow flag","","","","","","Type of 32bit Offset Address","Type of 64bit Offset Address","#OF","","","","","","","","","","","","","","","Parity flag","","","","","","","","","","","#PF","","DPL, CPL, RPL and IOPL","","","","","Resume flag","","","Ring 1, Useless in 64bit mode","Ring 2, Useless in 64bit mode","","","","Sign flag","","","","","","","","","","","","","","","","","","","","","","","","#SX","#NP","Type of x86 Segment Selector","#XM","#SS","","","Trap flag","","","","","","","","","","","","UC Uncacheable","UC Uncacheable","UC- Uncached","","","","","","","Ring 3, User mode","","Virtual interrupt flag","Virtual interrupt pending","Virtual 8086 mode flag","","","","#VE","","WB WriteBack","WB WriteBack","WC WriteCombining","WC WriteCombining","","WP WriteProtect","WP WriteProtect","WT WriteThrough","WT WriteThrough","","","","","Zero flageturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the index field in the selector","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Make a new instance of the selector from the specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the requested privilege level in the selectorhen set, the page fault was caused by an instruction …","","","","","","","","","","","","","","","","","When set, the page fault was caused by a page-protection …","","When set, the page fault was caused by a protection-key …","","","","","Page Manager","When set, one or more page directory entries contain …","When set, the fault was due to an SGX violation. The fault …","When set, the page fault was caused by a shadow stack …","When set, the page fault was caused while CPL = 3. This …","","When set, the page fault was caused by a write access. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Azalia High Definition Audio","Peripheral Component Interconnect Bus","Universal Serial Bus","","","","","","","","","","","","","","16bit","","20bit","","24bit","","32bit","","8bit","Buffer Completion Interrupt Status","","","","","","","","","","","","","","","Controller Reset","","Codec Address","","","","","","","","","","Command Output Ring Buffer","","","","Descriptor Error Interrupt Enable","","Descriptor Error","","Bidirectional Direction Control","DMA Run","","","","","","Contains the error value","","Flush Control","FIFO Error Interrupt Enable","FIFO Error","FIFO Ready","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Immediate Command Busy","Immediate Command Version","","","Interrupt On Completion Enable","Immediate Response Result Address","Immediate Response Result Unsolicitied","Immediate Result Valid","","","","","","","","","","","","","","","Memory Error Indication","Memory Error Interrupt Enable","","","","","Node Id (Short form)","","","Response Overrun Interrupt Control","Response Overrun Interrupt Status","","Contains the success value","","","","","","","","","","","","","","","","","","Response Interrupt Control","Response Interrupt","","","DMA Run","Stream Run","","","","","","","","","","","","","","","","","","","Response Input Ring Buffer","","","","","","Stream Reset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traffic Priority","","","","Accept Unsolicited Response Enable","","","","","","","","","","Paired CAD and NID type","","","11.025KHz 1/4 * 44.1","11.025KHz 1/4 * 44.1","16.0KHz 1/3 * 48","16.0KHz 1/3 * 48","176.4KHz 4/1 * 44.1","176.4KHz 4/1 * 44.1","192KHz 4/1 * 48","192KHz 4/1 * 48","22.05KHz 1/2 * 44.1","22.05KHz 1/2 * 44.1","32.0KHz 2/3 * 48","32.0KHz 2/3 * 48","384KHz 8/1 * 48","44.1KHz 44.1","44.1KHz 44.1","48KHz 48 (Must be supported by all codecs)","48KHz 48 (Must be supported by all codecs)","88.2KHz 2/1 * 44.1","88.2KHz 2/1 * 44.1","8.0KHz 1/6 * 48","8.0KHz 1/6 * 48","96KHz 2/1 * 48","96KHzefault sample rate, same quality as CD-DA.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codesolated I/O (x86)","","","","Under 1MB MMIO (obsoleted)","Any 32bit MMIO","Any 64bit MMIO","","","","","","PCI Base Address Register","","","","A type that defines the PCI class code and interface.","","","","","","","","Reserved","","","","","","","","Returns the PCI configuration address of this device …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an array of capability ID and register offset …","","","","","","","","","","","","","","","","","","","","","","","","","","Makes an instance from class code.","","","Returns the current state of the device in a …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Makes an instance from the PCI class code register (0x02)","","","","","","","","","","","","","Chains the programming interface to the class code and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this BAR is an x86 isolated IO.","Returns whether or not this BAR is a memory-mapped IO.","","","","","Returns whether or not this instance matches the specified …","Returns the name of the device driver.","","","","","","","","","","","","","","","","","Chains subclasses to the class code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","BOS descriptors are only supported for version number …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Empty route (root)","","","","USB1 FullSpeed 12Mbps","Device to host class specific request","","","Device to host standard request","Device to host interface specific request","","","","","","","","","","","USB2 HighSpeed 480Mbps","","","","","","","","","","","","","","","","","","Interface Association Descriptor","","","","","USB1 LowSpeed 1.5Mbps","Max depth is 5","","","","","","","","","Protocol Speed Identifier","","","","","","","","","","","","","","","","","","","","","Host to device class specific request","","","Host to device standard request","","","Host to device interface specific request","","","","","USB3 SuperSpeed 5Gbps","","","","","","","","","","","","","","","","","","","","","","","","","","USB2 Hub Descriptor","","","","USB3 Hub Descriptor","","Valid USB bus addresses are 1 to 127.","","","USB Binary Device Object Store instance type","BOS USB Binary Device Object Store Descriptor","USB Class code (BaseClass - SubClass - Protocol)","","USB configuration instance type","USB Configuration Descriptor","","USB Container Id capability","","","","","","A trait compatible with standard USB descriptors","USB Descriptor type","USB device instance type","A type compatible with standard USB device capabilities","USB Device Capability type","","USB Device Descriptor","","","","","USB Decive Qualifier Descriptor","USB endpoint instance type","","USB Endpoint Descriptor","","","USB HID Class Descriptor","USB HID Report Descriptor","USB Driver to Host interface","","USB interface instance type","USB Interface Descriptor","","","","","USB Product Id","","USB3 Route String","USB Superspeed USB Device Capability","","","","USB Vendor Id","","16-bit word type used in the USB descriptor.","Since a valid Route String is 20 bits, a valid mask is …","","","","","","","","","","","Gets the USB address of this deviceets the device class of this device.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets raw configuration descriptors.","","","","","","","","","","","","","Performs a control transfer","","","","","","","","","Gets the device descriptor for this device.","","","","","","","","","","","","USB Device Driver Modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Focuses on packets from the specified hub and delays tasks …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Get the descriptor associated with a device","","Get string descriptor","","","","","","","","","","","","","","","","","Initialize the USB device and tie it to the appropriate …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Gets the manufacturer’s string for this device if …","","","","","","","","","","","","","","","","","","Gets the USB address of the parent device.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the product ID for this device.","","","","Time (in 2 ms intervals) from the time the power-on …","Time (in 2 ms intervals) from the time the power-on …","Gets the preferred name of the device. First, use the …","","","Gets the product name string for this device, if possible.","","","","","","","","","Register a task for USB transfer.","","","","","Gets the serial number string of this device, if possible.","","set configuration","","","Set exit latency valuesets the uuid of this device, if available.","","","Gets the vendor ID for this device.","","","","","","","","","","","","","","","","","","","xHCI: Extensible Host Controller Interface","USB Audio Class Driver (01_xx_xx)","USB HID Class Driver (03_xx_xx)","USB Hub Class Driver (09_xx_xx)","USB Mass Storage Device (Bulk Only Transfer) (08_06_50)","XInput Class Driver (FF_5D_01)","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","USB2 Hub (FS, HS, HS-MTT)","USB2 Hub Port Status Change Bits","USB2 Hub Port Feature Selector","","USB2 Hub Port Status Bits","USB3 Hub (SS)","USB3 Hub Port Status Change Bits","USB3 Hub Port Feature Selector","","USB3 Hub Port Status Bits","","USB Hub Feature Selector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","64bit Addressing Capability","","","","","","","","","","BW Negotiation Capability","","","(RO) Cold Attach Status","(ROS) Current Connect Status","(RW1CS) Port Config Error Change","Contiguous Frame ID Capability","Controller Not Ready","","","","","","","(RW1CS) Connect Status Change","Context Size","xHC Capability Registers","","","","","","","","","","xHCI Device Context Index (Endpoint Id)","","","","(RO) Device Removable","","Device Notification","xHC Doorbell Register","","","","","","","","","","","","Endpoint Type","xHC Event Ring Segment Table Entry","","HC Halted","Host Controller Reset","","Host Controller Capability Parameters 1","Host Controller Interface Device Context","","","Interrupt Enable","","","","","","","","","","xHC Interrupter Register Set","","","","Light HC Reset Capability","","Latency Tolerance Messaging Capability","(RW) Port Link State Write Strobe","","Maximum Primary Stream Array Size","","","","","","","","","No Secondary SID Support","","(RO) Over current Active","(RW1CS) Over current Change","xHC Operational Registers","Parse All Event Data","","(RW1CS) Port Enabled/Disabled Change","(RW1CS) Port Enabled","(RWS) Port Indicator","Port Indicators","(RW1CS) Port Link State Change","(RWS) Port Link State","","(RWS) Port Power","Port Power Control","(RW1S) Port Reset","(RW1CS) Port Reset Change","A magic word to preserve mask","xHCI Port Id","xHC USB Port Register Set","Port Status and Control Register","","","","","","","Run(1)/Stop(0)","","","xHC Runtime Registers","Stopped EDTLA Capability","","","","","","Stopped - Short Packet Capacility","(ROW) Port Speed","","","","","","","","","","","xHCI Slot Id","","","","","xHCI Common Transfer Request Block","TRB for ADDRESS_DEVICE_COMMAND","","","TRB for COMMAND_COMPLETION_EVENT","TRB Completion Codes","TRB for CONFIGURE_ENDPOINT_COMMAND","TRB for DATA","","TRB for DEVICE_NOTIFICATION_EVENT","Direction is device to host","TRB for EVALUATE_CONTEXT_COMMAND","","Immediate Data","Interrupt on Completion","Interrupt on Short Packet","TRB for LINK","TRB for NOP","TRB for NORMAL","","TRB for PORT_STATUS_CHANGE_EVENT","","","TRB for RESET_ENDPOINT_COMMAND","TRB for SETUP","","TRB for STATUS","","TRB for TRANSFER_EVENT","TRB Types","","","","USBCMD: Usb Command Register","USBSTS: USB Status Register","","(RWS) Wake on Connect Enable","(RWS) Wake on Disconnect Enable","(RWS) Wake on Over current Enable","(RW1S) Warm Port Reset","(RW1CS) Warm Port Reset Change","","","Extensible Host Controller Interfacessue trb command","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codewait for CNR (Controller Not Ready)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return mount options as string","","","Device name if mounted on physical device, otherwise name …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Searches for a file system object with the specified file …","","","","","","","","","","","","","","","","","Opens a file with the specified inode","","","","","","","Reads the specified directory","","","","","","Returns the inode of the root directory","","Obtains metadata for the specified inode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage Full Device <code>/dev/full</code>","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Null Device <code>/dev/null</code>","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Random Device <code>/dev/random</code>","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Zero Device <code>/dev/zero</code>","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Device Filesystem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some products return meaningless strings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System Management BIOS Entry Point","","Common definition of SmBios’s structures","","Some products return meaningless strings.","","","","","","","","","","","","","","","","","","Find the first structure matching the specified header …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator that iterates through the SMBIOS …","Returns the system manufacturer name, if available","Returns the system model name, if available","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the pointer corresponding to the specified physical …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets a pointer identical to the specified physical address.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Audio API","Emergency debugging console","Human Interface Device Manager","","","TeleTypewriter","","","","","","","","","","","","","","","Experimental Envelope Generator","Oscillator Type","","","","","TODO:","","","","","TODO:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Sets the master volume.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HidManager relays between human interface devices and the …","","","","","","USB HID BOOT Keyboard Raw Report","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns the data for which a valid key was pressed. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the native screen size","","","Returns the screen orientation status.","","Returns the physical size of the screen, if available.","Returns the number of pixels per inch.","Rotate the screen one level, if possible.","","Returns the screen rotation status.","","Changes the screen orientation state.","","Changes the rotation state of the screen.","","","","","","","","","","","","Contains the error value","","Null Tty","Contains the success value","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","for Framebuffer (physical_address, length)","","","for Kernel Mode Heap (base, length, attr)","","To change page attributes (base, length, attr)","Memory Manager","","for MMIO (physical_address, length)","","","","","","","","","","","To reserve heap for User Mode (base, length, attr)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Allocate pages","","","","Allocate a page on real memory","","","","","","","","","","","","","","","","","","","","","Allocate kernel memory","","Deallocate kernel memory","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Icon Resource Manager","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Contextual data for legacy applications","","","Contains a reference to the context of the current …","","","Arlequin Subsystem","Base address of the code segment","Base address of the data segment","","","","","","","","","","","Returns its own context","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Haribote-OS Emulator","Base address of the application image","Size of the application image","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Maystorm2020 Subsystem","","","Called to clean up resources before the process ends.","","","Recognizes the binary format and returns the corresponding …","","Size of the code segment","Size of the data segment","Initial stack pointer","Application entry point","","","","","","","","","","","","","","","","","","Recognize .bin file","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Alphabet Numeric Kana","","","Contextual structure of the Haribote-OS Emulator subsystem","","","Recognize .HRB file","","","A String encoded in Japanese Industrial Standards","Jis Kanji Code","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Perform Haribote-OS System Call","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Called to clean up resources before the process ends.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recognize .wasm file","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","Contains the error value","","A mutual exclusion primitive like std::sync::Mutex","","Contains the success value","Contains the success value","NOT YET IMPLEMENTED","","A reader-writer lock like std::sync::RwLock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Concurrent First In First Out","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Spinlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Concurrent First In First Out","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","binary semaphore","counting semaphore","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Signalling Object","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Mutual exclusion primitives like std::sync::Mutex …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Highly Efficient Processor","Highly Efficient Subprocessor","System is a hybrid of performance and high-efficiency cores","Normal Processor","","","","","","Subprocessor of SMT enabled processor.","A Kernel of MEG-OS codename Maystorm","","","","Add SMP-initialized CPU cores to the list of activated …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the codename of the current system.","Returns a reference to the processor at the specified …","","","Returns the current device information.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Initialize the system","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether the kernel is multiprocessor-capable.","","","","","Get main screen","","Returns the name of the manufacturer of the system, if …","","Returns the model name of the system, if available.","Returns the name of the current system.","","","Returns the number of Highly efficient CPU cores.","Returns the number of active logical CPU cores.","Returns the number of performance CPU cores.","Returns the number of physical CPU cores. Returns less …","","","","","","","","","Returns abbreviated name of the current system.","","","Returns the current system time.","","","","","","Returns the total amount of memory size in bytes.","","","","","","","","","","","","","","","","","","","Returns the version of the current system.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","The scheduler has not started yet.","","","","The scheduler is running at full throttle.","Higher than normal priority","","","This is the lowest priority at which the processor will be …","Interrupt Request Level","","","Lower than normal proirity","The scheduler is running.","This is the normal priority that is scheduled in a …","","Thread Priority","","","Currently, the highest priority and will not be preempted.","The scheduler is running in energy-saving mode.","System Scheduler","","Build an option to start a new thread or process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the personality instance associated with the current …","Get the current process running on the current processor","Returns the current state of the scheduler.","Get the current thread running on the current processor","","","","","","","","","","","","","","","","","","","","","","","","All threads will stop.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","deprecated","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","deprecated","","","","Returns whether or not the thread scheduler is running.","","","","","","","","","deprecated","Monotonic timer in ms.","","","","","","","","","","","","","","","Performing Asynchronous Tasks","","","","","Perform the preemption","","","","","","","","","Start the closure in a new thread.","Spawning asynchronous tasks","","Start scheduler and sleep forever","Start the specified function in a new thread.","Start the specified function in a new process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Theme Manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write text to bitmap","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Theme Manager","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unicode converted keyboard event","Requested to close the window","","","","","","","Items on the desktop","","","Needs to be redrawn","","","","","","Floating window","","","","","","Raw keyboard event","Raw Keyboard event","","","","","","","","","Normal window","","","","","Dummy message","","","","","","The mouse pointer, which is also the foremost window.","","","","Popup window","Popup barrier","","","Root window (desktop)","","","","","Timer event","User Defined","","","","","","","","","","","","","","","","","","","","Get the window message asynchronously.","","","","","","","","","Sets the window’s content bitmap to ARGB32 format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a timer associated with a window","","","","","","","","","","","","Draws the contents of the window on the screen as a bitmap.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Process window messages that are not handled.","","Make the pointer temporarily invisible","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Content is opaque","","","","","Supports asynchronous reading of window messages.","Post a window message.","","","","","Read a window message from the message queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Makes the border of the window a thin border.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for window messages to be read.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,527,527,0,527,527,527,527,0,527,527,527,527,38,11,32,34,33,11,36,36,36,32,33,34,36,36,35,34,34,34,34,34,34,34,35,35,34,35,36,35,27,0,30,34,34,27,36,35,11,35,34,32,34,32,38,33,10,38,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,33,32,27,0,0,38,33,32,11,32,33,33,27,0,0,0,0,27,27,27,35,34,33,38,0,39,0,0,31,0,31,0,0,0,31,31,31,33,0,31,0,31,34,33,38,32,34,36,32,0,27,35,27,0,34,32,36,33,10,36,36,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,34,10,10,10,32,36,38,11,11,34,34,11,28,28,20,20,20,20,20,20,20,0,18,0,0,27,27,16,16,17,36,35,38,36,16,16,21,37,38,0,0,0,0,0,27,15,32,32,11,36,32,38,32,33,33,35,35,34,0,32,32,27,0,0,0,38,11,16,46,37,0,27,18,11,21,46,35,38,33,0,0,27,32,0,32,32,33,33,34,36,38,33,37,38,38,38,11,35,35,33,34,34,35,30,32,32,32,27,39,0,35,33,34,37,11,34,0,17,17,33,32,36,11,34,35,34,51,51,38,34,34,33,36,32,36,32,32,33,38,33,33,33,36,38,37,16,27,27,0,27,27,38,38,11,32,33,38,32,33,36,36,0,18,18,18,41,43,43,35,16,16,19,19,19,17,35,11,11,11,32,33,35,27,35,41,43,41,43,38,41,43,41,43,33,38,33,33,11,38,11,11,12,14,15,16,17,18,19,19,20,21,23,24,25,26,27,42,11,11,11,11,11,11,11,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,30,22,14,15,25,26,23,24,16,17,18,28,27,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,30,22,14,15,25,26,23,24,16,17,18,28,27,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,14,15,25,26,23,24,16,17,18,28,27,20,10,9,41,43,30,11,11,41,46,30,21,40,30,11,428,428,428,428,428,428,428,42,11,30,22,14,15,25,26,23,24,16,17,18,28,27,19,20,32,33,34,35,36,37,38,10,9,41,42,43,11,428,30,30,14,15,25,26,23,24,16,17,18,28,27,19,20,31,32,33,34,35,36,37,38,39,10,9,41,42,43,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,17,18,28,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,11,11,11,19,41,42,39,17,27,30,41,27,31,22,16,41,57,51,11,11,11,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,42,11,11,30,11,42,57,30,30,30,46,46,41,22,42,42,42,27,57,51,22,16,21,11,30,57,14,15,25,26,23,24,16,17,18,28,27,20,10,9,41,43,57,57,57,10,528,11,16,41,11,11,46,41,10,11,11,51,11,30,22,14,15,25,26,23,24,16,17,18,28,27,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,11,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,30,57,51,46,528,428,30,22,14,15,25,26,23,24,16,17,18,28,27,21,19,20,31,32,33,34,35,36,37,38,39,10,40,9,41,42,43,11,11,57,10,62,62,62,62,63,63,63,62,61,62,62,62,62,63,62,62,62,62,62,62,62,62,62,62,62,61,62,61,62,0,0,0,0,61,61,61,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,529,63,61,62,529,63,61,62,63,61,62,63,61,62,63,61,62,61,62,61,61,61,61,62,61,62,63,61,62,63,529,63,61,61,62,62,62,61,62,61,62,63,529,529,61,62,61,62,61,62,529,63,61,62,61,62,61,62,61,529,61,62,63,61,62,61,62,61,62,61,62,61,62,63,61,62,61,62,529,63,61,62,529,63,61,62,529,63,61,62,61,62,0,0,0,83,104,0,0,0,102,103,103,103,0,102,103,96,84,96,84,96,84,96,84,96,84,81,103,0,108,108,107,0,0,104,83,74,81,83,114,83,72,70,0,0,0,0,101,101,0,105,102,0,0,0,0,0,80,83,81,83,80,77,70,0,104,104,0,111,106,72,80,81,81,83,73,105,107,102,74,0,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,102,108,108,0,104,0,0,0,79,79,83,82,80,79,79,79,117,0,0,102,106,0,105,83,107,104,104,88,85,66,76,75,104,104,104,107,0,105,0,77,78,83,111,108,104,106,108,102,83,83,0,0,102,103,0,108,0,103,102,108,77,78,116,66,75,80,107,108,104,0,0,107,108,107,108,107,108,107,108,107,107,102,107,117,0,0,0,0,104,104,80,83,83,0,102,106,86,86,86,86,86,86,86,86,86,86,86,86,104,107,107,107,0,0,0,0,102,0,101,102,0,102,80,83,104,107,72,83,108,103,102,0,102,103,70,108,0,0,108,109,84,109,84,109,84,109,84,109,84,109,84,84,109,84,109,84,109,84,109,84,109,84,80,80,66,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,69,85,66,86,87,88,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,89,87,83,90,91,92,84,93,94,95,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,92,99,69,69,97,98,68,92,100,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,101,88,69,85,66,102,103,104,105,106,107,108,96,109,91,110,72,73,74,75,76,77,78,79,80,81,82,83,84,68,68,72,73,74,75,76,77,78,79,80,81,82,83,84,70,70,92,91,91,72,73,74,75,76,77,78,79,80,81,82,83,84,113,72,73,74,75,76,77,78,79,80,81,82,83,91,84,114,116,70,101,88,69,85,66,72,73,74,75,76,77,78,79,80,81,82,102,83,103,104,105,106,107,108,96,109,84,100,70,101,88,69,85,66,99,86,102,103,90,91,104,105,106,107,108,92,96,109,93,94,95,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,72,73,73,74,74,99,99,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,89,87,86,102,83,83,103,90,91,104,105,106,107,108,92,96,109,84,84,93,94,95,92,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,91,117,100,117,98,114,116,100,100,117,100,117,117,114,116,98,98,114,116,110,100,80,117,117,98,114,116,91,118,119,109,114,68,98,98,72,73,74,75,76,77,78,79,80,81,82,83,84,120,98,98,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,91,91,99,97,97,119,100,95,70,120,70,129,117,97,119,118,113,68,69,85,66,89,91,92,93,94,69,69,72,73,74,75,76,77,78,79,80,81,82,83,84,99,95,83,95,99,68,98,98,101,88,69,85,66,102,103,104,105,106,107,108,96,109,70,91,118,69,70,119,70,72,73,74,75,76,77,78,79,80,81,82,83,84,116,117,118,92,91,72,73,74,75,76,77,78,79,80,81,82,83,84,117,114,116,100,100,98,114,116,100,70,70,98,100,129,117,118,100,116,98,98,114,116,110,100,117,100,80,98,114,129,114,116,95,118,114,116,118,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,99,72,73,74,75,76,77,78,79,80,81,82,83,84,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,72,73,74,75,76,77,78,79,80,81,82,83,84,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,120,70,129,117,97,119,118,98,114,116,110,100,113,101,68,88,69,85,66,72,73,74,99,75,76,77,78,79,80,81,82,89,87,86,102,83,103,90,91,104,105,106,107,108,92,96,109,84,93,94,95,72,73,74,75,76,77,78,79,80,81,82,83,84,98,83,129,118,134,134,130,134,134,134,134,130,137,138,137,138,130,133,130,134,134,133,133,133,134,134,134,134,0,0,0,0,0,0,0,0,0,0,0,0,0,133,134,134,137,138,138,134,71,122,121,130,131,131,121,131,130,130,130,130,130,130,130,530,71,137,138,121,130,131,132,133,134,136,530,71,137,138,121,130,131,132,133,134,136,71,121,121,121,71,137,138,130,131,132,133,134,136,71,137,138,130,131,132,133,134,136,71,137,138,132,134,136,130,130,122,136,71,71,530,121,530,130,530,130,71,137,138,130,132,133,134,71,137,138,121,131,132,133,134,136,530,71,137,138,121,130,130,131,132,133,134,134,136,130,130,136,71,71,136,71,71,136,71,136,121,530,130,124,136,130,130,530,71,71,137,138,121,130,131,132,133,134,136,130,130,131,131,131,137,138,133,136,122,130,71,137,138,132,134,136,121,71,121,130,121,130,121,131,130,136,130,121,121,130,71,137,138,130,131,132,133,134,136,130,530,71,137,138,121,130,131,132,133,134,136,530,71,137,138,121,130,131,132,133,134,136,530,71,137,138,121,130,131,132,133,134,136,130,121,121,121,121,121,157,157,157,155,160,157,156,171,160,160,160,166,192,159,157,189,157,156,157,157,187,190,166,160,184,160,192,155,195,170,157,166,188,166,166,161,163,190,147,166,188,156,151,186,189,189,186,186,189,189,155,157,156,156,156,189,189,189,151,157,156,156,156,156,166,166,166,190,166,166,156,157,190,166,188,166,0,192,155,155,192,151,147,156,157,156,188,155,157,157,157,0,151,151,151,151,151,151,151,151,151,151,151,160,160,160,190,160,160,190,190,190,186,189,189,186,189,189,186,189,189,189,157,151,156,157,155,155,187,166,160,160,166,166,157,190,190,190,190,190,171,171,171,171,171,171,155,155,0,0,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,0,0,0,147,157,157,187,157,160,160,156,156,156,156,140,142,144,146,147,147,149,147,141,150,154,146,178,165,531,167,178,179,146,181,168,169,182,183,184,165,161,163,165,183,184,167,168,167,168,167,168,181,169,169,169,169,183,161,163,163,146,169,146,146,146,181,167,178,179,146,181,168,169,182,183,184,165,161,163,167,168,178,161,163,167,168,165,182,146,178,161,163,185,168,184,183,156,167,165,167,168,178,181,183,185,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,140,159,159,161,163,154,140,165,140,144,167,146,168,169,156,154,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,141,171,172,173,156,157,174,175,176,177,145,166,160,180,148,162,164,147,186,187,188,189,170,151,190,143,192,143,140,178,193,178,140,150,154,150,154,150,154,158,154,150,150,154,154,154,140,147,147,194,140,193,144,142,195,195,154,154,532,161,163,532,0,154,196,181,144,143,142,181,141,149,171,172,173,156,157,174,175,176,177,145,166,160,180,148,162,164,147,186,187,188,189,170,151,190,143,192,193,165,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,154,150,531,532,200,194,154,196,140,158,193,144,142,141,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,155,147,195,195,191,149,141,166,160,192,154,185,154,144,178,169,146,167,167,167,167,167,144,146,185,185,532,198,199,532,146,193,181,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,200,162,164,140,186,142,143,147,179,195,195,185,167,140,167,181,151,178,193,144,156,186,143,200,532,182,165,146,178,161,163,140,150,141,171,172,173,156,157,174,175,176,177,145,166,160,180,148,162,164,147,186,187,188,189,170,151,190,143,192,140,167,161,163,161,163,140,140,167,140,156,140,151,158,150,154,154,154,532,532,185,150,140,140,167,154,154,150,154,150,158,156,162,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,171,172,173,156,178,182,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,162,531,532,200,194,154,196,140,158,193,144,142,141,149,171,172,173,156,157,174,175,176,177,145,166,160,167,178,179,180,146,181,168,169,182,183,184,165,148,161,162,163,164,147,185,186,187,188,189,170,151,190,191,143,192,155,183,191,191,183,191,191,150,140,167,140,184,185,140,167,531,165,161,163,163,185,179,185,181,183,178,182,183,185,150,154,154,0,0,0,0,0,0,0,0,205,533,205,533,205,533,205,205,533,205,205,533,205,533,205,533,0,0,208,534,208,534,208,534,534,208,208,534,208,534,534,208,534,208,534,208,534,219,219,212,217,217,219,212,218,219,210,212,218,210,219,212,218,219,210,212,218,219,210,212,218,210,219,218,219,209,211,218,209,211,209,218,209,219,211,218,209,218,219,209,211,218,219,209,211,219,218,219,209,211,211,218,209,218,209,219,219,0,0,0,0,0,0,0,0,0,0,0,0,0,209,210,211,212,213,214,215,216,209,210,211,212,209,210,211,212,209,210,211,212,209,210,211,212,209,210,211,212,209,210,211,212,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,213,535,215,216,535,215,216,213,214,217,218,219,209,210,211,212,213,214,217,218,219,209,210,211,212,217,218,219,209,210,211,212,209,210,211,212,215,216,209,210,211,212,213,214,209,210,211,212,213,214,217,218,219,209,210,211,212,217,218,219,221,215,216,535,213,214,217,218,219,209,209,210,210,211,211,212,212,209,210,211,212,209,210,211,212,535,215,216,535,209,210,211,212,221,209,210,211,212,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,209,210,211,212,209,210,211,212,211,211,221,209,210,211,212,217,218,219,209,210,211,212,209,210,211,212,216,535,215,216,535,209,218,219,209,210,211,212,209,210,211,212,209,210,211,212,213,214,217,218,219,209,210,211,212,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,221,215,216,535,213,214,217,218,219,209,210,211,212,209,210,211,212,0,0,222,536,222,536,222,536,536,222,222,536,222,222,536,222,536,222,536,223,223,223,0,0,0,224,537,223,224,537,223,223,223,223,223,223,224,537,223,224,224,537,223,224,223,224,537,223,224,537,223,224,537,223,227,248,231,245,245,245,197,197,197,248,227,249,249,231,231,231,227,229,197,248,197,248,197,234,231,227,0,238,0,245,249,250,250,0,248,197,0,248,248,248,231,238,0,0,236,254,248,197,248,248,197,197,0,0,0,0,0,230,229,228,248,0,0,0,197,228,197,197,197,248,197,0,0,249,249,0,249,249,249,227,248,227,231,197,227,248,197,251,248,248,248,197,197,227,250,231,231,0,227,197,231,231,231,227,231,231,248,231,227,231,231,231,0,0,0,238,248,248,197,197,197,228,246,0,0,227,197,248,197,263,197,227,231,197,197,248,197,197,197,197,245,0,0,0,248,197,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,197,0,0,197,231,231,231,231,231,246,227,0,0,0,225,225,225,227,228,229,230,231,232,225,225,237,237,237,237,225,240,225,241,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,232,234,234,232,242,243,237,237,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,244,245,226,233,234,248,197,249,250,232,236,251,251,227,228,229,230,231,252,252,238,225,240,225,240,225,240,227,228,229,230,231,253,254,225,240,240,256,257,258,237,237,237,237,225,237,237,260,261,232,262,262,245,263,264,264,261,227,228,229,230,231,265,265,236,260,225,264,254,239,256,257,258,244,227,228,229,230,231,254,234,234,234,225,259,244,245,227,228,229,230,231,226,233,234,248,197,249,250,225,225,244,245,226,233,234,248,197,249,250,225,240,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,227,228,228,229,229,230,230,231,231,226,226,233,234,234,248,197,249,250,227,228,229,230,231,227,228,229,230,231,245,248,197,245,248,197,249,225,231,237,237,260,260,260,260,260,269,269,232,254,263,225,227,228,229,230,231,270,227,228,229,230,231,227,228,229,230,231,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,271,271,272,227,228,229,230,231,249,248,231,231,234,249,231,227,228,229,230,231,231,248,257,249,249,231,248,231,231,273,273,225,232,260,231,231,260,253,260,260,227,260,272,225,251,270,236,240,259,239,274,275,276,277,278,279,280,281,282,283,241,244,227,228,229,230,231,253,260,261,261,240,244,245,226,233,234,248,197,249,250,232,244,225,225,284,284,231,225,225,225,260,243,272,225,285,285,266,237,237,237,254,239,274,275,276,277,278,279,256,287,257,258,280,281,282,283,240,261,225,227,228,229,230,231,259,225,261,251,251,225,225,253,240,253,260,260,236,232,232,243,259,227,228,229,230,231,242,267,261,261,253,261,261,262,262,225,261,265,265,242,267,267,269,269,263,267,271,271,253,253,273,273,267,253,225,240,267,253,253,253,285,285,266,232,236,253,253,232,289,289,253,232,236,266,239,267,253,290,290,277,232,241,254,225,232,289,289,240,253,231,231,232,236,261,243,227,228,229,230,231,227,228,229,230,231,227,228,229,230,231,266,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,252,252,259,227,228,229,230,231,232,232,259,225,257,237,237,237,237,259,267,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,236,270,225,232,264,236,254,240,255,260,261,243,272,263,266,259,239,274,275,276,277,278,279,238,256,287,257,258,280,281,282,283,241,242,253,267,251,244,245,246,227,228,229,230,231,226,233,234,248,197,249,250,225,240,227,228,229,230,231,225,225,259,260,236,225,240,243,261,260,227,290,290,291,291,291,0,0,0,0,0,0,0,0,0,0,538,291,294,294,294,291,291,0,291,291,291,538,307,303,298,295,293,294,291,538,307,303,298,295,293,294,291,538,538,538,291,293,294,291,293,294,293,294,291,538,296,296,291,291,294,296,0,0,296,293,294,298,297,297,295,291,293,293,294,291,538,307,303,298,295,293,293,293,294,295,293,538,303,298,291,538,307,303,298,295,293,294,307,298,296,297,297,295,303,538,296,296,538,538,303,291,303,298,293,293,307,296,538,293,294,291,295,297,296,538,295,538,296,296,296,291,296,297,538,291,293,294,293,291,297,297,295,291,538,307,303,298,295,293,294,294,291,538,307,303,298,295,293,294,291,538,307,303,298,295,293,294,538,296,296,291,295,297,297,295,0,0,0,0,0,308,308,308,308,308,308,308,308,308,308,308,308,0,310,310,310,310,310,310,310,310,310,310,0,311,311,311,311,311,311,311,311,311,311,311,0,312,312,312,312,312,312,312,312,312,312,312,0,0,0,0,0,0,0,313,313,539,313,302,301,314,539,313,302,301,314,313,302,301,314,313,302,301,314,313,302,301,314,314,313,302,301,314,313,302,301,314,539,313,302,301,314,315,309,539,539,539,313,302,301,314,309,315,315,313,302,301,309,314,313,302,301,314,539,313,302,302,301,301,314,539,313,302,301,314,539,313,302,301,314,309,0,317,317,317,317,317,317,317,317,316,317,317,317,0,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,0,0,0,317,316,317,317,317,317,316,318,540,316,317,318,540,316,317,317,317,317,317,318,317,318,540,316,317,316,316,316,318,318,540,316,317,318,318,318,317,316,316,317,318,540,316,317,318,540,316,317,318,540,316,317,0,0,0,0,0,0,0,0,53,0,0,0,0,0,53,53,53,53,53,53,319,53,53,325,329,321,53,235,325,329,321,53,235,320,320,321,53,235,321,53,235,53,235,322,541,321,320,53,53,53,320,325,320,53,235,322,322,322,322,53,53,235,328,329,53,319,325,329,321,53,53,53,235,53,53,235,53,320,325,329,321,53,235,320,320,320,320,328,329,53,53,329,53,235,235,320,53,53,235,541,321,332,332,320,333,320,320,320,53,320,53,53,322,541,321,328,321,53,235,325,329,321,53,235,325,329,321,53,235,328,329,325,329,321,53,235,333,320,332,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,542,0,0,0,0,0,0,336,0,0,336,0,336,0,336,336,0,542,342,337,339,346,543,544,545,546,547,335,336,542,342,337,339,346,543,544,545,546,547,335,336,335,336,335,336,339,335,339,337,337,337,337,335,339,335,336,542,342,337,339,346,543,544,545,546,547,335,336,342,542,542,342,337,339,346,543,544,545,546,547,335,336,339,339,339,542,342,337,339,543,544,545,546,547,339,335,542,542,542,342,337,542,542,126,126,339,346,339,335,336,542,342,337,339,346,543,544,545,546,547,335,336,542,342,337,339,346,543,544,545,546,547,335,336,542,342,337,339,346,543,544,545,546,547,335,336,542,126,0,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,366,366,358,357,366,366,366,366,357,357,0,0,0,0,0,0,0,0,0,357,364,0,0,0,0,366,366,0,0,364,357,0,0,0,366,366,366,366,366,366,366,366,352,354,355,355,356,357,353,356,356,356,358,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,359,361,359,354,356,356,358,362,363,359,356,357,353,364,365,361,366,358,362,363,359,356,357,353,364,365,361,366,365,366,549,358,361,370,368,549,354,354,362,359,361,368,358,362,356,353,361,356,365,361,366,359,359,356,363,353,358,362,370,363,359,355,356,357,353,364,365,361,366,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,358,357,355,548,355,356,368,548,352,354,549,358,362,370,363,363,359,355,356,357,353,364,365,361,366,363,353,363,353,363,353,353,363,362,353,353,368,368,363,362,352,354,370,363,359,355,353,356,355,353,365,366,359,363,370,368,355,368,368,370,352,352,352,353,356,355,353,549,358,362,363,359,356,357,353,364,365,361,366,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,368,548,352,354,549,358,362,370,363,359,355,356,357,353,364,365,361,366,363,356,353,353,353,368,354,368,359,368,359,0,380,0,380,380,380,380,550,380,550,380,380,550,380,550,380,550,550,380,550,380,550,380,0,388,388,0,0,382,386,386,388,386,388,388,388,388,382,386,388,382,386,388,386,388,386,388,388,388,382,386,386,382,388,382,382,382,386,382,386,382,386,382,386,386,388,386,388,386,388,386,388,350,350,551,350,0,551,0,0,0,0,0,392,393,350,393,350,392,393,392,393,350,393,350,393,350,392,393,393,395,393,394,392,393,392,393,392,393,392,393,393,350,393,350,393,350,393,0,0,0,398,552,396,398,552,396,396,396,396,398,552,396,396,398,552,396,396,552,398,396,552,552,396,398,552,396,398,552,396,398,552,396,398,0,0,65,399,400,65,0,65,0,0,65,64,399,401,64,64,64,399,400,399,400,65,0,401,401,401,64,399,400,65,401,64,399,400,65,64,64,64,64,399,400,65,64,399,400,65,64,64,0,64,399,400,65,401,401,64,399,400,65,401,401,401,64,399,400,65,401,401,0,401,64,401,401,401,0,401,401,64,399,400,65,401,64,399,400,65,401,64,399,400,65,401,64,399,400,65,401,401,401,0,403,403,403,403,403,403,403,403,403,0,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,0,0,0,0,0,127,405,406,407,408,127,405,406,407,408,127,127,127,127,405,406,407,408,127,127,127,127,405,406,407,408,127,127,127,127,127,405,406,407,408,127,127,127,405,406,407,408,127,405,406,407,408,127,405,406,407,408,127,127,127,127,405,406,407,408,0,0,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,409,410,397,397,397,397,397,397,397,397,0,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,0,0,553,553,553,553,553,553,553,553,553,0,0,0,0,0,0,0,414,0,330,330,554,415,414,330,554,415,414,330,330,330,413,414,330,554,414,330,554,415,414,330,415,0,330,330,554,554,415,414,330,417,417,0,414,415,413,415,417,419,554,330,330,330,330,554,330,554,415,414,330,554,415,414,330,554,415,414,330,415,0,0,0,0,423,422,420,421,423,422,420,421,420,421,423,422,420,421,422,423,422,420,421,422,422,423,420,420,422,423,422,423,422,420,421,423,422,420,421,423,422,420,421,426,425,425,0,0,0,0,0,0,0,426,425,427,429,424,430,426,431,425,427,429,424,430,426,431,425,424,425,425,425,427,425,424,425,427,429,424,430,426,431,425,0,429,427,429,424,430,426,431,425,430,429,429,430,431,430,427,429,425,431,425,424,424,427,429,424,430,426,431,425,427,429,424,430,426,431,425,427,429,424,430,426,431,425,0,434,434,0,0,0,0,432,432,436,435,432,437,434,436,435,432,437,434,434,434,434,435,432,432,434,434,436,435,432,437,434,436,435,432,437,434,436,436,436,432,437,435,436,434,437,434,436,435,432,437,434,436,435,432,437,434,436,435,432,437,434,444,445,0,0,0,444,445,0,443,0,0,0,0,0,443,0,438,440,367,306,441,442,443,438,440,367,306,441,442,443,438,367,440,306,441,440,441,440,367,306,441,0,442,438,438,438,440,367,367,367,306,441,442,443,443,438,367,438,440,367,306,441,442,443,438,367,367,438,438,367,367,0,0,0,438,440,367,306,441,442,443,438,440,367,306,441,442,443,438,367,367,438,440,367,306,441,442,443,367,0,0,0,0,0,0,0,446,0,446,450,446,451,452,453,454,447,450,446,451,452,453,454,447,447,447,446,450,446,451,452,453,454,447,450,446,451,452,453,454,450,446,451,452,453,454,447,450,446,451,452,453,454,450,446,451,452,453,454,446,446,450,446,451,452,453,454,447,450,446,451,452,453,454,447,450,446,451,452,453,454,446,450,446,451,452,453,454,447,447,446,450,446,451,452,453,454,447,450,446,451,452,453,454,447,446,447,450,446,451,452,453,454,447,446,446,450,446,451,452,453,454,447,450,446,451,452,453,454,447,446,446,450,446,451,452,453,454,447,450,446,451,452,453,454,447,450,446,451,452,453,454,447,450,446,451,452,453,454,0,0,0,462,463,461,462,463,461,461,461,461,462,463,461,462,463,462,463,461,462,463,462,463,462,463,461,462,463,461,462,463,461,462,463,461,0,0,0,0,0,465,464,288,467,469,465,464,288,467,469,464,465,288,464,465,464,288,467,469,465,464,288,467,469,467,469,464,465,464,288,288,467,469,465,288,465,464,465,464,288,467,469,465,464,288,467,469,465,464,288,469,465,464,288,467,469,465,288,288,288,0,470,470,470,470,470,470,470,470,470,470,470,470,470,0,0,472,473,472,473,472,473,473,473,472,472,472,472,473,472,473,472,472,472,472,473,472,473,472,472,473,0,58,58,478,58,0,0,0,478,478,58,0,478,0,555,555,475,555,555,555,479,478,475,324,58,555,479,478,475,324,58,478,475,324,58,478,475,324,58,475,324,58,555,555,555,555,555,475,324,58,478,475,475,324,58,555,479,478,475,324,324,58,324,555,555,479,478,475,324,58,58,555,58,58,58,555,555,475,479,475,479,555,475,58,479,479,479,479,475,324,58,475,479,475,555,555,555,555,555,555,478,475,324,58,475,479,555,479,478,475,324,58,555,479,478,475,324,58,555,479,478,475,324,58,555,0,203,203,0,203,203,203,0,203,203,203,0,480,480,480,480,480,480,480,480,480,480,486,486,482,486,481,483,482,485,486,486,485,0,483,0,485,482,485,486,0,0,0,485,482,0,0,0,0,0,0,0,0,481,482,471,484,556,491,490,484,487,482,483,481,485,418,471,486,556,491,490,484,487,482,483,481,485,418,471,486,482,483,481,485,418,471,486,482,483,481,485,418,471,486,482,481,485,418,471,486,487,486,556,556,556,556,418,482,483,481,485,418,483,482,483,481,485,418,471,486,556,484,482,483,481,485,418,471,486,556,556,491,490,484,487,487,482,482,483,483,481,481,485,418,471,486,488,483,482,556,556,556,556,491,490,484,487,482,483,481,485,418,471,486,488,483,484,483,556,483,483,483,556,485,490,418,471,488,488,483,471,491,487,483,471,484,482,483,481,485,418,471,486,556,491,556,486,483,556,487,484,418,483,0,483,483,556,491,556,556,556,491,491,491,471,482,483,481,485,418,471,486,556,491,490,484,487,482,483,481,485,418,471,486,556,491,490,484,487,482,483,481,485,418,471,486,556,491,490,484,487,482,483,481,485,418,471,486,556,556,471,484,491,0,0,0,0,0,496,0,496,0,0,0,0,496,496,496,496,496,0,494,349,495,557,349,495,496,497,557,349,495,496,497,496,497,496,497,496,494,349,495,497,349,497,496,557,496,557,349,495,496,497,557,557,349,495,496,497,494,349,495,497,494,349,495,497,349,497,557,349,495,497,496,497,557,494,349,495,557,496,497,557,349,495,496,497,557,349,495,496,497,557,349,495,496,497,557,349,494,349,495,497,500,0,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,0,0,508,505,508,507,505,505,0,0,507,505,0,0,508,505,507,0,507,504,506,504,506,558,507,505,508,509,504,506,558,507,505,508,509,506,506,506,504,558,506,507,505,508,509,507,505,508,509,504,506,507,505,508,504,558,509,507,505,508,507,505,508,509,504,506,504,506,558,507,505,508,509,509,504,506,558,507,505,508,509,504,506,558,506,506,506,504,506,506,504,504,509,504,506,507,505,508,509,506,506,506,506,504,506,558,507,505,508,509,504,506,558,507,505,508,509,504,506,558,507,505,508,509,504,506,509,0,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,522,0,0,514,515,522,0,515,514,522,522,519,515,515,515,515,515,518,522,517,522,514,514,514,519,515,518,515,521,514,517,520,522,523,514,522,522,522,522,522,514,516,518,515,519,520,519,522,517,521,515,515,515,518,514,514,514,518,518,518,517,518,0,515,515,515,522,522,516,0,0,0,0,0,0,0,0,0,0,0,513,493,559,514,515,516,493,493,513,493,514,515,516,514,515,516,513,514,515,516,514,515,516,514,515,516,514,515,516,514,515,516,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,513,513,514,517,515,516,518,519,493,520,521,522,523,514,517,515,516,518,519,493,520,521,522,523,493,517,518,493,514,515,516,514,515,516,524,493,493,493,493,559,514,517,515,519,524,514,515,516,493,493,493,525,514,515,516,514,517,515,516,518,519,493,518,519,493,520,521,522,523,513,493,559,513,525,514,514,517,515,515,516,516,518,519,493,524,520,521,522,523,514,515,516,514,515,516,513,524,559,493,493,559,513,493,559,514,515,516,514,515,516,514,515,516,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,493,559,493,525,514,515,516,514,515,516,559,524,559,559,524,493,493,513,559,493,524,493,493,513,525,493,524,514,515,516,513,513,517,518,493,493,493,559,559,559,525,493,493,514,515,516,524,493,559,559,514,515,516,524,493,559,493,493,559,559,493,493,559,559,559,559,493,493,513,513,513,513,514,515,516,514,515,516,524,514,515,516,513,514,517,515,516,518,519,493,520,521,522,523,514,515,516,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,559,513,525,514,517,515,516,518,519,493,524,520,521,522,523,514,515,516,559,493,559,513,524,0,0,560,560,560,560,560,560,560,560,560],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],3],[-1,-1,[]],0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[6,7],[[],7],[-1,-2,[],[]],0,[[],8],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,10],[9,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[12,13],[14,13],[15,13],[16,13],[17,13],[18,13],[19,13],[19,13],[20,13],[21,22],[23,13],[24,[[7,[13,13]]]],[25,13],[26,[[7,[13,13]]]],[27,28],0,[[11,11],-1,[]],[[11,11],7],[[11,11],-1,[]],[[11,11],7],[11,29],[[11,11],-1,[]],[[11,11],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[22,22],[14,14],[15,15],[25,25],[26,26],[23,23],[24,24],[16,16],[17,17],[18,18],[28,28],[27,27],[19,19],[20,20],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[10,10],[40,40],[9,9],[41,41],[42,42],[43,43],[11,11],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[14,14],44],[[15,15],44],[[25,25],44],[[26,26],44],[[23,23],44],[[24,24],44],[[16,16],44],[[17,17],44],[[18,18],44],[[28,28],44],[[27,27],44],[[20,20],44],[[10,10],44],[[9,9],44],[[41,41],44],[[43,43],44],[[25,15,17,19],30],[11,11],[[11,11],45],[[],29],[[],46],[[25,15,17],30],[[],21],[[],40],[30,[[47,[19]]]],[[11,11],11],0,0,0,0,0,0,0,[[],42],[[],11],[[30,30],45],[[22,22],45],[[14,14],45],[[15,15],45],[[25,25],45],[[26,26],45],[[23,23],45],[[24,24],45],[[16,16],45],[[17,17],45],[[18,18],45],[[28,28],45],[[27,27],45],[[19,19],45],[[20,20],45],[[32,32],45],[[33,33],45],[[34,34],45],[[35,35],45],[[36,36],45],[[37,37],45],[[38,38],45],[[10,10],45],[[9,9],45],[[41,41],45],[[42,42],45],[[43,43],45],[[11,11],45],0,[[17,19],30],[17,30],[[14,2],3],[[15,2],3],[[25,2],3],[[26,2],3],[[23,2],3],[[24,2],3],[[16,2],3],[[17,2],3],[[18,2],3],[[28,2],3],[[27,2],3],[[19,2],3],[[20,2],3],[[31,2],3],[[32,2],3],[[33,2],3],[[34,2],3],[[35,2],3],[[36,2],3],[[37,2],3],[[38,2],3],[[39,2],3],[[10,2],3],[[9,2],3],[[41,2],3],[[42,2],3],[[43,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,17],[-1,-1,[]],[27,28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,11],[29,11],[29,11],[30,[[47,[19]]]],[48,41],[[13,13],42],[48,[[47,[39]]]],[29,17],[28,27],[[24,16,17,18,[47,[20]]],22],[9,42],[27,45],[31,45],0,[16,29],[[],[[0,[[50,[],[[49,[9]]]]]]]],[6,7],[[51,52,29,29],7],[[11,11],7],[[11,11],11],[[11,11],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,[[7,[13,13]]]],[11,17],[11,45],[30,45],[11,45],0,[[],45],[30,45],[30,45],[30,45],[[46,16],[[47,[30]]]],[[46,16],[[47,[30]]]],[[],[[0,[[50,[],[[49,[42]]]]]]]],0,0,[[42,53],45],0,[27,54],[[],[[47,[39]]]],[[],51],[[30,30],22],[[29,17],16],[[],21],[11,-1,[]],[[],30],[[55,56],7],[[14,14],[[47,[44]]]],[[15,15],[[47,[44]]]],[[25,25],[[47,[44]]]],[[26,26],[[47,[44]]]],[[23,23],[[47,[44]]]],[[24,24],[[47,[44]]]],[[16,16],[[47,[44]]]],[[17,17],[[47,[44]]]],[[18,18],[[47,[44]]]],[[28,28],[[47,[44]]]],[[27,27],[[47,[44]]]],[[20,20],[[47,[44]]]],[[10,10],[[47,[44]]]],[[9,9],[[47,[44]]]],[[41,41],[[47,[44]]]],[[43,43],[[47,[44]]]],[[],13],[57,29],[57,58],[10,13],[[28,29,17],7],[[11,11],7],[16,17],[[9,42],7],[[11,11,45],7],[[11,17],7],[[46,16,30],[[47,[7]]]],[[[59,[42]]],7],[[[60,[43]]],7],[[11,11],11],[[11,11],7],[[51,51],7],[[11,11],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[11,11],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[30,[[4,[19,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[26,14],22],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[11,11],11],[[],29],[[10,13],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],61],[[],62],[[61,61],-1,[]],[[62,62],-1,[]],[[61,61],7],[[62,62],7],[[61,61],-1,[]],[[62,62],-1,[]],[[61,61],7],[[62,62],7],[61,55],[62,13],[[61,61],-1,[]],[[62,62],-1,[]],[[61,61],7],[[62,62],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[61,61],[62,62],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[63,63],44],[61,61],[62,62],[[61,61],45],[[62,62],45],[61,45],[61,45],[61,45],[[61,61],61],[[62,62],62],[[],61],[[],62],[[63,63],45],[[61,61],45],[[62,62],45],[[63,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,61],[13,62],[-1,-1,[]],[64,62],[55,61],[13,62],[55,61],[13,62],[61,63],[6,7],[[],7],[[61,61],7],[[62,62],7],[[61,61],61],[[62,62],62],[[61,61],45],[[62,62],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,45],[62,45],[61,45],[62,45],[61,45],[65,29],[61,-1,[]],[62,-1,[]],[[63,63],[[47,[44]]]],[[61,61],7],[[62,62],7],[[61,61,45],7],[[62,62,45],7],[[61,61],61],[[62,62],62],[[61,61],7],[[62,62],7],[[61,61],61],[[62,62],62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,61],7],[[62,62],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[61,61],61],[[62,62],62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[66,-1],-2,[[67,[29]]],[]],[68,69],[70,71],[[],72],[[],73],[[],74],[[],75],[[],76],[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[69,56],[85,56],[66,56],[86,56],[87,56],[88,48],[[72,72],-1,[]],[[73,73],-1,[]],[[74,74],-1,[]],[[75,75],-1,[]],[[76,76],-1,[]],[[77,77],-1,[]],[[78,78],-1,[]],[[79,79],-1,[]],[[80,80],-1,[]],[[81,81],-1,[]],[[82,82],-1,[]],[[83,83],-1,[]],[[84,84],-1,[]],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[[72,72],-1,[]],[[73,73],-1,[]],[[74,74],-1,[]],[[75,75],-1,[]],[[76,76],-1,[]],[[77,77],-1,[]],[[78,78],-1,[]],[[79,79],-1,[]],[[80,80],-1,[]],[[81,81],-1,[]],[[82,82],-1,[]],[[83,83],-1,[]],[[84,84],-1,[]],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[72,56],[73,55],[74,56],[75,48],[76,48],[77,48],[78,48],[79,55],[80,56],[81,48],[82,56],[89,56],[87,13],[83,56],[90,48],[91,56],[92,55],[84,56],[93,55],[94,55],[95,56],[[72,72],-1,[]],[[73,73],-1,[]],[[74,74],-1,[]],[[75,75],-1,[]],[[76,76],-1,[]],[[77,77],-1,[]],[[78,78],-1,[]],[[79,79],-1,[]],[[80,80],-1,[]],[[81,81],-1,[]],[[82,82],-1,[]],[[83,83],-1,[]],[[84,84],-1,[]],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,96],0,[69,85],0,[97,45],[98,99],[68,83],[92,29],[100,7],[101,101],[68,68],[88,88],[69,69],[85,85],[66,66],[72,72],[73,73],[74,74],[99,99],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[89,89],[87,87],[86,86],[102,102],[83,83],[103,103],[90,90],[91,91],[104,104],[105,105],[106,106],[107,107],[108,108],[92,92],[96,96],[109,109],[84,84],[93,93],[94,94],[95,95],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[101,101],44],[[88,88],44],[[69,69],44],[[85,85],44],[[66,66],44],[[102,102],44],[[103,103],44],[[104,104],44],[[105,105],44],[[106,106],44],[[107,107],44],[[108,108],44],[[96,96],44],[[109,109],44],[91,108],[[110,89],[[111,[87]]]],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[68,91],[68,[[59,[69]]]],[[72,72],45],[[73,73],45],[[74,74],45],[[75,75],45],[[76,76],45],[[77,77],45],[[78,78],45],[[79,79],45],[[80,80],45],[[81,81],45],[[82,82],45],[[83,83],45],[[84,84],45],[70,[[47,[69]]]],[70,112],[[],92],[91,48],[91,104],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[76,76],76],[[77,77],77],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[83,83],83],[[84,84],84],[[],113],[[],72],[[],73],[[],74],[[],75],[[],76],[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],91],[[],84],[114,[[47,[115]]]],[116,[[47,[115]]]],[70,[[111,[7]]]],[[101,101],45],[[88,88],45],[[69,69],45],[[85,85],45],[[66,66],45],[[72,72],45],[[73,73],45],[[74,74],45],[[75,75],45],[[76,76],45],[[77,77],45],[[78,78],45],[[79,79],45],[[80,80],45],[[81,81],45],[[82,82],45],[[102,102],45],[[83,83],45],[[103,103],45],[[104,104],45],[[105,105],45],[[106,106],45],[[107,107],45],[[108,108],45],[[96,96],45],[[109,109],45],[[84,84],45],[100,29],[70,[[47,[69]]]],[[101,2],3],[[88,2],3],[[69,2],3],[[85,2],3],[[66,2],3],[[99,2],3],[[86,2],3],[[102,2],3],[[103,2],3],[[90,2],3],[[91,2],3],[[104,2],3],[[105,2],3],[[106,2],3],[[107,2],3],[[108,2],3],[[92,2],3],[[96,2],3],[[109,2],3],[[93,2],3],[[94,2],3],[[95,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,72],[-1,-1,[]],[-1,-1,[]],[55,73],[56,74],[-1,-1,[]],[55,99],[-1,-1,[]],[48,75],[-1,-1,[]],[-1,-1,[]],[48,76],[48,77],[-1,-1,[]],[-1,-1,[]],[48,78],[55,79],[-1,-1,[]],[-1,-1,[]],[56,80],[-1,-1,[]],[48,81],[-1,-1,[]],[56,82],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,83],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,84],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,92],[56,72],[55,73],[56,74],[48,75],[48,76],[48,77],[48,78],[55,79],[56,80],[48,81],[56,82],[56,83],[56,84],[56,72],[55,73],[56,74],[48,75],[48,76],[48,77],[48,78],[55,79],[56,80],[48,81],[56,82],[56,83],[56,84],[91,107],[[117,69],[[111,[83]]]],[100,29],[[117,69],[[111,[91]]]],[98,72],[114,75],[116,77],[100,80],[100,92],[[117,69],[[111,[95]]]],[100,29],[[117,69],[[111,[95]]]],[[117,69,102],[[111,[87]]]],[114,29],[116,29],[98,55],[98,73],[114,76],[116,78],[110,79],[100,81],[80,[[47,[88]]]],[[117,69],[[111,[[7,[66,48]]]]]],[[117,69],[[111,[84]]]],[98,55],[114,29],[116,29],[91,106],[118,7],[119,45],[109,29],[[114,53],7],[68,95],[98,29],[98,29],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[[120,121],[[47,[[123,[122]]]]]],[98,56],[98,56],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[76,76],76],[[77,77],77],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[83,83],83],[[84,84],84],[[72,72],45],[[73,73],45],[[74,74],45],[[75,75],45],[[76,76],45],[[77,77],45],[[78,78],45],[[79,79],45],[[80,80],45],[[81,81],45],[[82,82],45],[[83,83],45],[[84,84],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,45],[73,45],[74,45],[75,45],[76,45],[77,45],[78,45],[79,45],[80,45],[81,45],[82,45],[83,45],[84,45],[72,45],[73,45],[74,45],[75,45],[76,45],[77,45],[78,45],[79,45],[80,45],[81,45],[82,45],[83,45],[84,45],[91,45],[91,45],0,[[97,89],[[111,[7]]]],[97,29],[119,29],[100,29],[95,45],[70,54],[[],[[125,[124]]]],[121,[[47,[[123,[122]]]]]],[[[123,[70]]],[[123,[126]]]],[[127,45],117],[114,97],[116,119],[100,118],[[53,29,45],113],[[117,69],[[111,[68]]]],[[85,66],69],[48,85],[48,66],[[69,86],89],[56,91],[[109,96,29],92],[[45,45,48],93],[[45,45,45,45,48,45,29],94],[69,66],0,[72,-1,[]],[73,-1,[]],[74,-1,[]],[75,-1,[]],[76,-1,[]],[77,-1,[]],[78,-1,[]],[79,-1,[]],[80,-1,[]],[81,-1,[]],[82,-1,[]],[83,-1,[]],[84,-1,[]],0,[95,29],[83,29],[95,29],0,[68,95],[98,29],[98,29],[[101,101],[[47,[44]]]],[[88,88],[[47,[44]]]],[[69,69],[[47,[44]]]],[[85,85],[[47,[44]]]],[[66,66],[[47,[44]]]],[[102,102],[[47,[44]]]],[[103,103],[[47,[44]]]],[[104,104],[[47,[44]]]],[[105,105],[[47,[44]]]],[[106,106],[[47,[44]]]],[[107,107],[[47,[44]]]],[[108,108],[[47,[44]]]],[[96,96],[[47,[44]]]],[[109,109],[[47,[44]]]],[[70,69],[[128,[69]]]],[91,105],[[118,88,92],7],[69,112],[70,7],[119,[[111,[87]]]],[[],[[125,[124]]]],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[116,7],[[117,89],[[111,[87]]]],[118,7],[92,109],[91,48],[[72,72,45],7],[[73,73,45],7],[[74,74,45],7],[[75,75,45],7],[[76,76,45],7],[[77,77,45],7],[[78,78,45],7],[[79,79,45],7],[[80,80,45],7],[[81,81,45],7],[[82,82,45],7],[[83,83,45],7],[[84,84,45],7],[[117,69,94],[[111,[7]]]],[[114,53],7],[[116,53],7],[[100,53],7],[[100,29],7],[[98,72],7],[[114,75],7],[[116,77],7],[[100,80],7],[[70,69],7],[[70,69],7],[[98,56],7],[[100,29],7],[[129,29],45],[[117,69,92],[[111,[7]]]],[[118,92],7],[[100,92],7],[[116,29],7],[[98,55],7],[[98,73],7],[[114,76],7],[[116,78],7],[[110,79],7],[[100,81],7],[[117,69,88],[[111,[7]]]],[[100,88],7],[[80,[47,[88]]],7],[[98,55],7],[[114,29],7],[129,29],[114,7],[116,7],[95,29],[118,7],[114,7],[116,7],[118,[[47,[88]]]],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[76,76],76],[[77,77],77],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[83,83],83],[[84,84],84],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],0,[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[76,76],76],[[77,77],77],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[83,83],83],[[84,84],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[76,76],76],[[77,77],77],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[83,83],83],[[84,84],84],[98,[[7,[29,29]]]],[83,103],[[129,[59,[48]]],[[47,[7]]]],[[118,[59,[48]]],[[47,[7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[71,48],-1,[]],[122,71],[121,71],[[],130],[131,132],[131,133],[121,[[0,[[50,[],[[49,[131]]]]]]]],[131,53],[[130,130],-1,[]],[[130,130],7],[[130,130],-1,[]],[[130,130],7],[130,56],[[130,130],-1,[]],[[130,130],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,71],[121,[[0,[[135,[],[[49,[[7,[134,48]]]]]]]]]],[121,136],[[121,130],7],[71,71],[137,137],[138,138],[130,130],[131,131],[132,132],[133,133],[134,134],[136,136],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[71,71],44],[[137,137],44],[[138,138],44],[[132,132],44],[[134,134],44],[48,136],[130,130],[[130,130],45],[122,112],[136,56],[[],71],[[71,48],71],[71,[[47,[121]]]],[121,138],[[],[[0,[[50,[],[[49,[121]]]]]]]],[[130,130],130],[[],[[0,[[50,[],[[49,[[123,[122]]]]]]]]]],[[],130],[[71,71],45],[[137,137],45],[[138,138],45],[[130,130],45],[[132,132],45],[[133,133],45],[[134,134],45],[[71,2],3],[[137,2],3],[[138,2],3],[[121,2],3],[[131,2],3],[[132,2],3],[[133,2],3],[[134,2],3],[[136,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,130],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,134],[-1,-1,[]],[56,130],[56,130],[56,136],[[71,48],71],[71,48],[136,48],[71,48],[71,48],[136,48],[71,48],[136,48],[121,45],[[],7],[[130,130],7],[[124,121],[[47,[[123,[122]]]]]],[[136,48],136],[[130,130],130],[[130,130],45],[-1,-2,[],[]],[-1,-2,[],[]],[71,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,45],[130,45],[131,45],[131,45],[131,45],[137,45],[138,45],[133,13],[[136,136],45],[122,54],[130,-1,[]],[[71,71],[[47,[44]]]],[[137,137],[[47,[44]]]],[[138,138],[[47,[44]]]],[[132,132],[[47,[44]]]],[[134,134],[[47,[44]]]],[136,56],[121,130],[[71,48],71],[[121,29],[[4,[7,7]]]],[[130,130],7],[121,[[47,[139]]]],[[130,130,45],7],[[121,130],7],[131,29],[[130,130],130],[[136,48],136],[[130,130],7],[121,138],[121,137],[[130,130],130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[130,130],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[130,130],130],[121,112],[121,112],[121,112],[121,137],[[121,130],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[140,141],[142,143],[144,145],[146,145],[[147,148],[[4,[7,7]]]],[[147,148],[[4,[147,147]]]],[149,55],[147,56],[141,48],[[[123,[150]],148,151],[[153,[[125,[152]]]]]],[[154,148,151],[[4,[141,155]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[156,157],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[140,158],[159,160],[159,160],[161,162],[163,164],[[154,148],[[47,[141]]]],[140,[[0,[[50,[],[[49,[141]]]]]]]],[165,[[0,[[50,[],[[49,[[7,[166,29]]]]]]]]]],[140,156],[144,156],[167,156],[146,156],[168,156],[169,156],[[156,45],[[47,[54]]]],[[154,170],[[4,[7,155]]]],[141,141],[149,149],[171,171],[172,172],[173,173],[156,156],[157,157],[174,174],[175,175],[176,176],[177,177],[145,145],[166,166],[160,160],[167,167],[178,178],[179,179],[180,180],[146,146],[181,181],[168,168],[169,169],[182,182],[183,183],[184,184],[148,148],[161,161],[162,162],[163,163],[164,164],[147,147],[185,185],[186,186],[187,187],[188,188],[189,189],[170,170],[151,151],[190,190],[191,191],[143,143],[192,192],[155,155],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[141,141],44],[[171,171],44],[[172,172],44],[[173,173],44],[[156,156],44],[[157,157],44],[[174,174],44],[[175,175],44],[[176,176],44],[[177,177],44],[[145,145],44],[[166,166],44],[[160,160],44],[[180,180],44],[[148,148],44],[[162,162],44],[[164,164],44],[[147,147],44],[[186,186],44],[[187,187],44],[[188,188],44],[[189,189],44],[[170,170],44],[[151,151],44],[[190,190],44],[[143,143],44],[[192,192],44],[143,48],[140,[[59,[48]]]],[178,[[47,[139]]]],[193,176],[178,176],[140,[[59,[193]]]],[[150,181],[[4,[7,155]]]],[[154,181],[[4,[7,155]]]],[[150,161,45],[[4,[7,155]]]],[[154,161,45],[[4,[7,155]]]],[[150,163],[[4,[7,155]]]],[[154,163],[[4,[7,155]]]],[158,[[47,[184]]]],[[154,185],[[4,[7,155]]]],[[[123,[150]],185,48],[[153,[[125,[152]]]]]],[[[123,[150]],185,48],[[153,[[125,[152]]]]]],[[154,185,29,[59,[48]]],[[4,[7,155]]]],[[154,185,[59,[48]]],[[4,[7,155]]]],[[154,185,[128,[48]],29,29],[[4,[7,155]]]],[140,193],[[],147],[147,29],[194,-1,[]],[140,167],[193,178],[144,146],[142,181],[195,166],[195,166],[[154,148],[[4,[7,155]]]],[154,140],[141,[[47,[194]]]],[161,48],[163,55],[[],[[0,[[50,[],[[49,[194]]]]]]]],0,[154,7],[196,7],[181,[[47,[143]]]],[144,[[59,[142]]]],[143,29],[142,192],[181,192],[[141,141],45],[[149,149],45],[[171,171],45],[[172,172],45],[[173,173],45],[[156,156],45],[[157,157],45],[[174,174],45],[[175,175],45],[[176,176],45],[[177,177],45],[[145,145],45],[[166,166],45],[[160,160],45],[[180,180],45],[[148,148],45],[[162,162],45],[[164,164],45],[[147,147],45],[[186,186],45],[[187,187],45],[[188,188],45],[[189,189],45],[[170,170],45],[[151,151],45],[[190,190],45],[[143,143],45],[[192,192],45],[[193,177,[47,[145]]],[[47,[144]]]],[165,[[7,[166,55]]]],[[141,2],3],[[149,2],3],[[171,2],3],[[172,2],3],[[173,2],3],[[156,2],3],[[157,2],3],[[174,2],3],[[175,2],3],[[176,2],3],[[177,2],3],[[145,2],3],[[166,2],3],[[160,2],3],[[167,2],3],[[178,2],3],[[179,2],3],[[180,2],3],[[146,2],3],[[181,2],3],[[168,2],3],[[169,2],3],[[182,2],3],[[183,2],3],[[184,2],3],[[165,2],3],[[148,2],3],[[161,2],3],[[162,2],3],[[163,2],3],[[164,2],3],[[147,2],3],[[185,2],3],[[186,2],3],[[187,2],3],[[188,2],3],[[189,2],3],[[170,2],3],[[151,2],3],[[190,2],3],[[191,2],3],[[143,2],3],[[192,2],3],[[155,2],3],[154,196],[150,[[4,[7,155]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[139,141],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[197,155],[-1,-1,[]],[56,147],[[[59,[48]]],[[47,[195]]]],[[[59,[48]]],[[47,[195]]]],[183,191],[55,149],[48,[[47,[141]]]],[48,166],[48,160],[48,192],[[154,186,48],[[4,[-1,155]]],195],[[186,166,48,29],185],[[154,[47,[139]],180],[[47,[112]]]],[[144,166],[[47,[[59,[48]]]]]],0,0,0,0,0,0,0,0,[144,177],[146,177],[[185,55],185],[[185,177],185],[[],7],[[198,[123,[154]]],[[47,[[153,[[125,[152]]]]]]]],[[199,[123,[154]],177,156],[[47,[[153,[[125,[152]]]]]]]],[[141,[123,[150]]],[[4,[7,155]]]],[146,[[47,[139]]]],[193,[[59,[144]]]],[181,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[162,45],[164,45],[140,45],[186,45],[142,45],[143,45],[147,45],[179,180],[195,29],[195,29],[[185,55],185],[167,[[47,[139]]]],[140,[[47,[54]]]],[167,29],[181,55],[151,29],[178,48],[193,[[47,[54]]]],[144,[[47,[54]]]],[[157,174,175],156],[[45,187,188],186],[[48,45],[[47,[143]]]],[200,[[47,[-1]]],[]],[155,7],[182,29],[165,29],[146,29],[178,48],[161,29],[163,29],[140,[[47,[141]]]],[150,[[47,[141]]]],[[141,141],[[47,[44]]]],[[171,171],[[47,[44]]]],[[172,172],[[47,[44]]]],[[173,173],[[47,[44]]]],[[156,156],[[47,[44]]]],[[157,157],[[47,[44]]]],[[174,174],[[47,[44]]]],[[175,175],[[47,[44]]]],[[176,176],[[47,[44]]]],[[177,177],[[47,[44]]]],[[145,145],[[47,[44]]]],[[166,166],[[47,[44]]]],[[160,160],[[47,[44]]]],[[180,180],[[47,[44]]]],[[148,148],[[47,[44]]]],[[162,162],[[47,[44]]]],[[164,164],[[47,[44]]]],[[147,147],[[47,[44]]]],[[186,186],[[47,[44]]]],[[187,187],[[47,[44]]]],[[188,188],[[47,[44]]]],[[189,189],[[47,[44]]]],[[170,170],[[47,[44]]]],[[151,151],[[47,[44]]]],[[190,190],[[47,[44]]]],[[143,143],[[47,[44]]]],[[192,192],[[47,[44]]]],[140,173],[167,173],[161,[[0,[[50,[],[[49,[148]]]]]]]],[163,[[0,[[50,[],[[49,[148]]]]]]]],[161,201],[163,201],[140,[[47,[54]]]],[140,180],[167,[[47,[139]]]],[140,[[47,[54]]]],[156,175],[140,29],[151,29],[158,[[59,[48]]]],[[[123,[150]],143,48,29],[[153,[[125,[152]]]]]],[[154,143,-1],[[4,[7,155]]],202],[[154,143,[59,[48]],29,29],[[4,[29,155]]]],[[154,143,[128,[48]],29,29],[[4,[7,155]]]],[203,7],[141,[[4,[7,155]]]],[[186,189],185],[150,147],[140,147],[140,[[47,[54]]]],[167,[[47,[139]]]],[[154,176],[[4,[7,155]]]],[[154,170],[[4,[7,155]]]],[[150,29],[[4,[7,155]]]],[[154,191],[[4,[7,155]]]],[150,151],[158,[[47,[183]]]],[156,174],[162,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,112,[]],[-1,112,[]],[-1,112,[]],[-1,112,[]],[178,29],[182,29],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[162,29],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[183,29],0,0,[183,29],0,0,[150,[[4,[7,155]]]],[140,171],[167,171],[140,204],[184,[[60,[48]]]],[[185,55],185],[140,172],[167,172],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[123,[150]],143,48,29],[[153,[[125,[152]]]]]],[[154,143,-1],[[4,[7,155]]],202],[[154,143,[59,[48]]],[[4,[7,155]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[205,[123,[154]],177,156],[[47,[[153,[[125,[152]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[125,[199]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[154,177,206,[47,[207]],29,[128,[48]]],[[4,[7,155]]]],[[208,[123,[154]],177,156],[[47,[[153,[[125,[152]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[125,[199]]]],[[154,177,45],[[4,[7,155]]]],[[154,177,206,[47,[207]],29,[59,[48]]],[[4,[7,155]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],209],[[],210],[[],211],[[],212],[213,56],[214,56],[[[123,[215]],148],[[4,[141,155]]]],[[[123,[216]],148],[[4,[141,155]]]],[[209,209],-1,[]],[[210,210],-1,[]],[[211,211],-1,[]],[[212,212],-1,[]],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[[209,209],-1,[]],[[210,210],-1,[]],[[211,211],-1,[]],[[212,212],-1,[]],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[209,55],[210,55],[211,55],[212,55],[[209,209],-1,[]],[[210,210],-1,[]],[[211,211],-1,[]],[[212,212],-1,[]],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[210,213],[[154,217],[[4,[7,155]]]],[[[123,[215]],218,148],[[4,[7,155]]]],[[[123,[216]],219,148],[[4,[7,155]]]],[[154,-1,148],[[4,[7,155]]],[[67,[55]]]],[[[123,[215]],213,[59,[218]],148],[[4,[7,155]]]],[[[123,[216]],214,[59,[219]],148],[[4,[7,155]]]],[213,213],[214,214],[217,217],[218,218],[219,219],[209,209],[210,210],[211,211],[212,212],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[217,217],44],[[218,218],44],[[219,219],44],[209,209],[210,210],[211,211],[212,212],[[209,209],45],[[210,210],45],[[211,211],45],[[212,212],45],[[215,148],[[4,[7,155]]]],[[216,148],[[4,[7,155]]]],[[209,209],209],[[210,210],210],[[211,211],211],[[212,212],212],[[],213],[[],214],[[],209],[[],210],[[],211],[[],212],[[213,213],45],[[214,214],45],[[217,217],45],[[218,218],45],[[219,219],45],[[209,209],45],[[210,210],45],[[211,211],45],[[212,212],45],[[217,2],3],[[218,2],3],[[219,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,209],[55,210],[-1,-1,[]],[55,211],[-1,-1,[]],[55,212],[-1,-1,[]],[55,209],[55,210],[55,211],[55,212],[55,209],[55,210],[55,211],[55,212],[[154,48],[[4,[-1,155]]],195],[[[123,[215]],148],[[4,[213,155]]]],[[[123,[216]],148],[[4,[214,155]]]],[[154,148],[[4,[-1,155]]],220],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[[221,[123,[154]]],[[47,[[153,[[125,[152]]]]]]]],[[209,209],209],[[210,210],210],[[211,211],211],[[212,212],212],[[209,209],45],[[210,210],45],[[211,211],45],[[212,212],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,45],[210,45],[211,45],[212,45],[209,45],[210,45],[211,45],[212,45],[211,[[47,[190]]]],[211,29],[[],[[125,[198]]]],[209,-1,[]],[210,-1,[]],[211,-1,[]],[212,-1,[]],[[217,217],[[47,[44]]]],[[218,218],[[47,[44]]]],[[219,219],[[47,[44]]]],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[[209,209,45],7],[[210,210,45],7],[[211,211,45],7],[[212,212,45],7],[[[123,[154]]],[[4,[7,155]]]],[[154,217],[[4,[7,155]]]],[[[123,[215]],218,148],[[4,[7,155]]]],[[[123,[216]],219,148],[[4,[7,155]]]],[[154,-1,148],[[4,[7,155]]],[[67,[55]]]],[209,151],[218,210],[219,212],[[209,209],209],[[210,210],210],[[211,211],211],[[212,212],212],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[[209,209],209],[[210,210],210],[[211,211],211],[[212,212],212],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[209,209],7],[[210,210],7],[[211,211],7],[[212,212],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[209,209],209],[[210,210],210],[[211,211],211],[[212,212],212],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[154,177],[[4,[48,155]]]],[[222,[123,[154]],177,156],[[47,[[153,[[125,[152]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[125,[199]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[223,223],[[-1,-2],7,[],[]],[[],223],[[223,223],45],[[223,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[224,[123,[154]],177,156],[[47,[[153,[[125,[152]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[125,[199]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[123,[225]],226],7],[[[123,[225]],226,45],7],[225,71],[[],227],[[],228],[[],229],[[],230],[[],231],[[232,[47,[233]],[47,[234]]],7],[[225,[47,[233]],[47,[234]]],[[47,[235]]]],[225,[[47,[236]]]],[237,[[47,[238]]]],[237,[[47,[238]]]],[237,239],[237,239],[[[123,[225]],[123,[240]],148,151],[[4,[141,155]]]],[[[123,[240]],148,151],[[153,[[125,[152]]]]]],[[[123,[225]],226],[[47,[141]]]],[241,53],[[227,227],-1,[]],[[228,228],-1,[]],[[229,229],-1,[]],[[230,230],-1,[]],[[231,231],-1,[]],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[[227,227],-1,[]],[[228,228],-1,[]],[[229,229],-1,[]],[[230,230],-1,[]],[[231,231],-1,[]],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[227,56],[228,56],[229,56],[230,56],[231,56],[[227,227],-1,[]],[[228,228],-1,[]],[[229,229],-1,[]],[[230,230],-1,[]],[[231,231],-1,[]],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,53],[234,45],[234,45],[232,7],[242,7],[243,7],[237,239],[237,239],[244,244],[245,245],[[[246,[-1]]],[[246,[-1]]],247],[227,227],[228,228],[229,229],[230,230],[231,231],[226,226],[233,233],[234,234],[248,248],[197,197],[249,249],[250,250],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[244,244],44],[[245,245],44],[[226,226],44],[[233,233],44],[[234,234],44],[[248,248],44],[[197,197],44],[[249,249],44],[[250,250],44],[[232,245,245],[[4,[7,245]]]],[[236,245,245],[[4,[7,245]]]],[251,48],[251,48],[227,227],[228,228],[229,229],[230,230],[231,231],[252,[[47,[197]]]],[252,[[47,[197]]]],[238,[[47,[197]]]],[[225,233,234,249,29,48,45],7],[[240,181],[[4,[7,155]]]],[[225,233,161,45],[[4,[7,155]]]],[[240,161,45],[[4,[7,155]]]],[[225,233,163],[[4,[7,155]]]],[[240,163],[[4,[7,155]]]],[[227,227],45],[[228,228],45],[[229,229],45],[[230,230],45],[[231,231],45],[253,29],[254,242],[[[123,[225]],255,185,[246,[48]]],[[4,[29,155]]]],[[[123,[240]],185,48],[[153,[[125,[152]]]]]],[[[123,[240]],185,48],[[153,[[125,[152]]]]]],[256,256],[257,257],[258,258],[[237,-1,259],7,237],[[237,-1,259],7,237],[[237,-1],7,237],[[237,-1],7,237],[225,112],[237,45],[237,45],[260,29],[261,53],[232,[[47,[234]]]],[262,[[47,[234]]]],[262,[[47,[234]]]],[[],245],[[263,259],[[47,[239]]]],[264,-1,[]],[264,-1,[]],[261,230],[[227,227],227],[[228,228],228],[[229,229],229],[[230,230],230],[[231,231],231],[265,45],[265,45],[236,7],[260,[[59,[266]]]],[225,7],[264,7],[[],254],[[],239],[[],256],[[],257],[[],258],[[],244],[[],227],[[],228],[[],229],[[],230],[[],231],[[254,234],267],[48,[[47,[234]]]],[234,29],[48,[[47,[234]]]],[[225,[47,[233]],[47,[234]]],[[47,[29]]]],[[259,259],45],[[244,244],45],[[245,245],45],[[227,227],45],[[228,228],45],[[229,229],45],[[230,230],45],[[231,231],45],[[226,226],45],[[233,233],45],[[234,234],45],[[248,248],45],[[197,197],45],[[249,249],45],[[250,250],45],[[225,239],[[4,[256,256]]]],[[225,244,[47,[245]]],[[47,[236]]]],[[244,2],3],[[245,2],3],[[226,2],3],[[233,2],3],[[234,2],3],[[248,2],3],[[197,2],3],[[249,2],3],[[250,2],3],[[[123,[225]],[47,[233]]],7],[240,[[4,[7,155]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,259],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,227],[-1,-1,[]],[-1,-1,[]],[56,228],[56,229],[-1,-1,[]],[-1,-1,[]],[56,230],[56,231],[-1,-1,[]],[148,226],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[143,234],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,227],[56,228],[56,229],[56,230],[56,231],[56,227],[56,228],[56,229],[56,230],[56,231],[268,[[47,[245]]]],[268,[[47,[248]]]],[268,[[47,[197]]]],[13,[[47,[245]]]],[13,[[47,[248]]]],[13,[[47,[197]]]],[[192,45],249],[[225,233],53],[231,45],[237,45],[237,45],[260,227],[260,56],[260,56],[260,56],[260,56],[269,45],[269,45],[232,29],[[254,53,29],7],[[263,53,29],7],[[225,233],254],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[[270,121],[[47,[[123,[122]]]]]],[[227,227],227],[[228,228],228],[[229,229],229],[[230,230],230],[[231,231],231],[[227,227],45],[[228,228],45],[[229,229],45],[[230,230],45],[[231,231],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[271,45],[271,45],[[272,29],[[47,[263]]]],[227,45],[228,45],[229,45],[230,45],[231,45],[249,45],[248,45],[231,45],[231,45],[234,45],[249,45],[231,45],[227,45],[228,45],[229,45],[230,45],[231,45],[231,45],[248,45],[257,45],[249,45],[249,45],[231,45],[248,45],[231,45],[231,45],[273,45],[273,45],[[225,[47,[236]],239,[47,[233]],[47,[234]]],7],[232,239],[260,29],[231,[[47,[190]]]],[231,29],[260,29],[253,29],[260,29],[260,29],[227,29],[260,29],[272,56],[225,54],[251,[[60,[48]]]],[[],[[125,[124]]]],[[],236],[[[123,[225]],255],240],[[],259],[248,239],[[53,45],274],[[],275],[[53,29,45,45],276],[[250,185],277],[[53,29,45,45],278],[45,279],[[233,53],280],[[233,53],281],[[233,53],282],[[233,234],283],[[53,55],241],[244,244],[227,-1,[]],[228,-1,[]],[229,-1,[]],[230,-1,[]],[231,-1,[]],[253,29],[260,261],[261,29],[261,56],[240,[[47,[141]]]],[[244,244],[[47,[44]]]],[[245,245],[[47,[44]]]],[[226,226],[[47,[44]]]],[[233,233],[[47,[44]]]],[[234,234],[[47,[44]]]],[[248,248],[[47,[44]]]],[[197,197],[[47,[44]]]],[[249,249],[[47,[44]]]],[[250,250],[[47,[44]]]],[232,259],[244,239],[[225,226],243],[[225,233],[[47,[226]]]],[284,[[47,[226]]]],[284,[[47,[226]]]],[231,29],[[225,226],45],[[225,226],45],[225,[[0,[[50,[],[[49,[[7,[226,243]]]]]]]]]],[260,[[59,[243]]]],[243,7],[272,263],[225,7],[285,53],[285,53],[266,56],[[237,-1],7,237],[[237,-1],7,237],[237,286],[254,53],[239,286],[274,286],[275,286],[276,286],[277,286],[278,286],[279,286],[256,286],[287,286],[257,286],[258,286],[280,286],[281,286],[282,286],[283,286],[[[123,[240]],143,48,29],[[153,[[125,[152]]]]]],[261,228],[[],[[125,[124]]]],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[259,7],[[225,233,234],[[4,[256,256]]]],[[261,229],7],[251,48],[251,48],[[225,[47,[233]],[47,[234]]],7],[[225,[47,[233]],[47,[233]],[47,[234]]],[[4,[7,7]]]],[253,[[47,[226]]]],[240,147],[253,147],[260,272],[260,29],[[236,239,244],7],[232,264],[232,[[153,[[123,[288]]]]]],[[243,231],7],[[259,45],7],[[227,227,45],7],[[228,228,45],7],[[229,229,45],7],[[230,230,45],7],[[231,231,45],7],[[242,56],7],[[267,29],7],[[261,228],7],[[261,29,45,45],7],[[253,29],7],[[261,235],7],[[261,235],7],[[262,234],7],[[262,234],7],[[225,233,53],7],[[261,230],7],[[265,45],7],[[265,45],7],[[242,56],7],[[267,249],7],[[267,29],7],[[269,45],7],[[269,45],7],[[263,56],7],[[267,48],7],[[271,45],7],[[271,45],7],[[253,45],7],[[253,45],7],[[273,45],7],[[273,45],7],[[267,29],7],[[253,29],7],[[225,233,29],[[4,[7,7]]]],[[240,29],[[4,[7,155]]]],[[267,29],7],[[253,29],7],[[253,233],7],[[253,148],7],[[285,53],7],[[285,53],7],[[266,56],7],[[232,-1],[[47,[7]]],237],[[236,239],7],[[253,226],7],[[253,147],7],[232,7],[[289,233],7],[[289,233],7],[[253,151],7],[[232,245],7],[[236,245],7],[[266,[47,[234]]],7],[[239,248],7],[[267,53],7],[[253,29],7],[[290,29],7],[[290,29],7],[277,185],[[],29],[241,55],[254,253],[[225,226],[[47,[233]]]],[232,[[47,[233]]]],[289,[[47,[233]]]],[289,[[47,[233]]]],[240,151],[253,151],[231,[[47,[151]]]],[231,29],[232,245],[236,245],[261,229],[243,231],[[227,227],227],[[228,228],228],[[229,229],229],[[230,230],230],[[231,231],231],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[[227,227],227],[[228,228],228],[[229,229],229],[[230,230],230],[[231,231],231],[266,[[47,[234]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[252,155],[252,155],[259,7],[[227,227],7],[[228,228],7],[[229,229],7],[[230,230],7],[[231,231],7],[232,[[47,[235]]]],[232,[[47,[235]]]],[259,13],[[[123,[225]],255,234,[246,[48]],29],[[4,[29,155]]]],[257,29],[237,-1,237],[237,-1,237],[237,[[47,[248]]]],[237,[[47,[248]]]],[259,56],[267,13],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[236,45],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[[123,[225]],[47,[233]]],7],[240,[[4,[7,155]]]],[[227,227],227],[[228,228],228],[[229,229],229],[[230,230],230],[[231,231],231],[225,[[0,[[50,[],[[49,[[7,[226,243]]]]]]]]]],[225,[[0,[[50,[],[[49,[[7,[226,243]]]]]]]]]],[259,45],[260,[[7,[29,29,29]]]],[236,7],[[225,29],7],[[[123,[240]],143,48,29],[[153,[[125,[152]]]]]],[[243,231],7],[[261,228],7],[260,[[47,[115]]]],[227,29],[290,29],[290,29],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[291,45],291],[291,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[291,29],[54,112],[54,[[128,[112]]]],[54,[[292,[7]]]],[291,291],[293,293],[294,294],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[293,293],44],[[294,294],44],[[291,291],45],[54,[[292,[295]]]],[[[123,[296]],293,54],[[292,[[123,[297]]]]]],[[[123,[296]],293,54],[[292,[[123,[297]]]]]],[[291,45],291],[[291,45],291],[[],294],[296,112],0,0,[296,112],[[293,293],45],[[294,294],45],[298,299],[297,[[292,[7]]]],[297,[[292,[7]]]],[295,[[292,[7]]]],[[291,2],[[4,[7,300]]]],[[293,2],3],[[293,2],3],[[294,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[301,293],[302,293],[-1,-1,[]],[-1,-1,[]],[295,[[47,[298]]]],[293,13],[[48,29],7],[303,293],[298,293],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[298,304],[[296,293,54],[[292,[293]]]],[[297,304,294],[[292,[304]]]],[[297,304,294],[[292,[304]]]],[[295,304,294],[[292,[304]]]],[303,298],[54,[[292,[7]]]],[[[123,[296]],293,54],[[292,[7]]]],[[[123,[296]],293,54],[[292,[7]]]],[54,[[292,[7]]]],[[],[[306,[[305,[112,[123,[296]]]]]]]],[303,54],[[],291],[[293,54,298],303],[[293,299,304],298],[13,[[47,[293]]]],[13,293],[307,[[47,[-1]]],[]],[[[123,[296]],293],[[292,[[123,[297]]]]]],[[54,291],[[292,[295]]]],[[293,293],[[47,[44]]]],[[294,294],[[47,[44]]]],[[291,45],291],[[295,[59,[48]]],[[292,[29]]]],[[297,304,[59,[48]]],[[292,[29]]]],[[296,293,29],[[47,[303]]]],[54,[[292,[[0,[[50,[],[[49,[303]]]]]]]]]],[[295,[128,[48]]],[[292,[29]]]],[[54,54],[[292,[7]]]],[[296,293,54,293,54,45],[[292,[7]]]],[[296,293,54,293,54,45],[[292,[7]]]],[296,293],[[291,291,45],7],[[296,293],[[47,[298]]]],[297,[[47,[298]]]],[54,[[292,[298]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,112,[]],[[291,45],291],[[297,304],[[292,[7]]]],[[297,304],[[292,[7]]]],[[295,304],[[292,[7]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[29,[[4,[294,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[54,[[292,[7]]]],[[296,293,54],[[292,[7]]]],[[296,293,54],[[292,[7]]]],[[291,45],291],[[295,[59,[48]]],[[292,[29]]]],[[297,304,[59,[48]]],[[292,[29]]]],[[297,304,[59,[48]]],[[292,[29]]]],[[295,54],3],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[308,112],[308,[[292,[[123,[309]]]]]],[[308,304,[59,[48]]],[[292,[29]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[308,304,[59,[48]]],[[292,[29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[310,112],[310,[[292,[[123,[309]]]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[311,112],[311,[[292,[[123,[309]]]]]],[[311,304,[59,[48]]],[[292,[29]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[312,112],[312,[[292,[[123,[309]]]]]],[[312,304,[59,[48]]],[[292,[29]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[313,313],[302,302],[301,301],[314,314],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[313,313],44],[[302,302],44],[[301,301],44],[[],314],[[],314],[[313,313],45],[[302,302],45],[[301,301],45],0,[[313,2],3],[[302,2],3],[[301,2],3],[[314,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[315,314],[309,314],[[],[[123,[296]]]],[[[123,[315]]],[[4,[301,313]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[309,304,294],[[292,[304]]]],[315,112],[315,[[292,[[123,[309]]]]]],[[313,313],[[47,[44]]]],[[302,302],[[47,[44]]]],[[301,301],[[47,[44]]]],[[309,304,[59,[48]]],[[292,[29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[293,[[4,[302,-1]]],[]],[293,[[4,[301,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[309,304,[59,[48]]],[[292,[29]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[316,[[59,[48]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[317,317],[[-1,-2],7,[],[]],[[317,317],44],[[317,317],45],[[318,317],[[47,[316]]]],[[317,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[316,55],[316,29],[316,317],[53,[[125,[318]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[318,[[0,[[50,[],[[49,[316]]]]]]]],[318,[[47,[112]]]],[318,[[47,[112]]]],[[317,317],[[47,[44]]]],[[316,29],[[47,[54]]]],[316,29],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,29],-1,[]],[[53,319],-1,[]],[53,319],[53,13],[53,29],[[53,29],[[47,[53]]]],[[319,53],-1,[]],[[53,319],-1,[]],[[53,319],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[320,[[4,[7,7]]]],[320,7],[321,321],[53,53],[235,235],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[53,53],44],[[235,235],44],[[322,323,29,29],[[7,[45,29]]]],[[],[[0,[320]]]],[[],[[0,[320]]]],[320,324],[[],53],[53],[29,53],[320,7],[325,7],[320,7],[[53,53],45],[[235,235],45],[[322,323],29],[[322,323,29],45],[[322,323,29],45],[[322,323,-1],[[4,[29,29]]],[[327,[29],[[326,[[47,[29]]]]]]]],[[53,2],3],[[53,2],3],[[235,2],3],[328,[[47,[7]]]],[329,[[47,[7]]]],[[53,29],[[47,[53]]]],[53,319],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[319,53],[235,53],[-1,-1,[]],[-1,-1,[]],[13,53],[29,53],[235,53],[53],[320,325],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[320,330],331],[[320,29,29],331],[320,45],[320,45],[328,7],[329,7],[[53,29],-1,[]],[[53,319],-1,[]],[[],329],[319,53],[53,[[47,[235]]]],[53,235],[320,7],[53,-1,[]],[[53,53],[[47,[44]]]],[[235,235],[[47,[44]]]],[[],[[0,[332]]]],[[],[[0,[332]]]],[[332,71],56],[[332,29],[[4,[[7,[13,55]],7]]]],[320,331],[333,7],[[320,45],7],[320,7],[320,[[0,[333]]]],[[53,53],[[47,[29]]]],[320,331],[[53,29],-1,[]],[[53,53],-1,[]],[[322,323,29],29],[[],[[0,[322]]]],[[],[[0,[322]]]],[[328,-2],-1,[],[[334,[],[[326,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[328,45],[329,45],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[333,7],[320,7],[[332,71,56],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[335,335],[336,336],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[338,[337]]],[[125,[339]]]],[[335,335],44],[[339,[125,[339]]],7],[[[123,[337]],340],[[125,[339]]]],[[[123,[337]],341,336],[[125,[339]]]],[[[123,[337]]],[[125,[339]]]],[337,7],[[335,335],45],[339,[[47,[[125,[339]]]]]],[[335,2],3],[[336,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[342,335],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[339,[[125,[343]]]],[339,45],[339,45],[[],340],[[[128,[[125,[343]]]]],342],[[],[[123,[337]]]],[[[338,[337]],-1],[[125,[339]]],343],[[[338,[337]],344,344],[[125,[339]]]],[[[338,[337]],344],[[125,[339]]]],[[[338,[337]],344],[[125,[339]]]],[[[338,[337]],344],[[125,[339]]]],[[[338,[337]],344,344,344],[[125,[339]]]],[339,29],[[335,335],[[47,[44]]]],[[335,[338,[337]]],7],[340,345],[335,7],[[342,340],340],[[[123,[337]],342],346],[342,7],[[[123,[126]]],7],[[126,29],45],[126,29],[339,[[4,[346,339]]]],[346,7],[339,[[47,[[125,[339]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[335,7],[[126,[59,[48]]],[[47,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[347,[[7,[348,348]]]],[347,[[7,[348,348]]]],[-1,-1,[]],[-1,-2,[],[]],[347,45],[349,347],[347,[[153,[[125,[152]]]]]],[347,[[4,[7,350]]]],[[347,48],7],[[347,45],45],[[347,348,348],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[347,351],7],[[347,54],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[352,353],7],[[354,353],7],[[355,207],[[47,[356]]]],[355,[[0,[[50,[],[[49,[356]]]]]]]],[[356,-1],29,[[327,[357],[[326,[45]]]]]],[357,29],[353,29],[356,29],[356,29],[356,29],[358,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[359,360],[361,55],0,[354,7],[356,7],[356,7],[358,358],[362,362],[363,363],[359,359],[356,356],[357,357],[353,353],[364,364],[365,365],[361,361],[366,366],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[365,365],44],[[366,366],44],[[[123,[[367,[361]]]]],[[47,[365]]]],[[358,358],45],[[361,361],7],0,0,[[],361],[354,29],[354,[[59,[48]]]],[[],362],[[],359],[[],361],[[],368],[[],358],[[],362],[[],356],[[],353],[[],361],[356,[[0,[[50,[],[[49,[357]]]]]]]],[[365,365],45],[[361,361],45],[[366,366],45],[359,360],0,[356,[[0,[[50,[],[[49,[353]]]]]]]],[363,358],[353,369],[[358,2],3],[[362,2],3],[[370,2],3],[[363,2],3],[[359,2],3],[[355,2],3],[[356,2],3],[[357,2],3],[[353,2],3],[[364,2],3],[[365,2],3],[[361,2],3],[[366,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,358],[[353,371],[[47,[357]]]],[355,45],[[],7],[355,29],[356,[[0,[[50,[],[[49,[353]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[363,351],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[363,351],[353,45],[363,45],[353,45],[363,45],[353,45],[353,45],[363,[[47,[363]]]],0,[353,56],[353,56],0,0,[363,372],0,[[[59,[48]],29],352],[[[59,[48]]],354],[[],370],[[373,372,358],363],[[374,360,360],359],[[],355],[[369,375,376,[47,[56]],29],353],[356,[[0,[[50,[],[[49,[353]]]]]]]],[[[59,[48]]],[[4,[355,29]]]],[[[128,[357]],371,369,375,376],7],[[365,365],[[47,[44]]]],[[366,366],[[47,[44]]]],[359,374],[363,7],0,0,[355,[[47,[356]]]],[[368,[377,[-1]]],7,[[67,[348]],220]],[[368,[377,[-1]]],7,[[67,[348]],220]],[[370,362],7],[[352,353],[[4,[56,364]]]],[[352,353],[[4,[56,364]]]],[[352,353],[[4,[378,364]]]],[353,29],[356,[[47,[207]]]],0,[353,29],[363,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[363,373],[356,379],[353,379],[353,379],[353,[[0,[[50,[],[[49,[379]]]]]]]],0,[[354,353,56],[[4,[7,364]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[380,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[48]]],[[4,[381,380]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,[[382,-2,374,383],7,[],[[385,[],[[384,[-1]]]]]],[[386,387,374,383],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[388,388],[[-1,-2],7,[],[]],[[388,388],44],[[382,[59,[48]],389,374,-1],7,[]],[[386,[59,[48]],389,374,-1],7,[]],[[388,388],45],[[382,383,-1],7,[]],[[386,383,-1],7,[]],[[388,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[388,45],[388,45],[382,389],[386,389],[390,386],[382,388],[[388,388],[[47,[44]]]],[382,[[47,[389]]]],[382,29],[382,[[4,[391,391]]]],[386,[[4,[391,391]]]],[382,391],[386,391],[[382,388],[[4,[388,388]]]],[[386,388],[[4,[388,388]]]],[[382,391],[[4,[391,391]]]],[[386,391],[[4,[391,391]]]],[386,389],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,[392,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[392,[[7,[348,348]]]],[393,[[7,[348,348]]]],[392,[[7,[348,348]]]],[393,[[7,[348,348]]]],[[350,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[392,45],[393,45],[[],394],[395,[[153,[[125,[152]]]]]],[393,[[153,[[125,[152]]]]]],[[394,29],[[4,[112,350]]]],[392,[[4,[7,350]]]],[393,[[4,[7,350]]]],[[392,48],7],[[393,48],7],[[392,45],45],[[393,45],45],[[392,348,348],7],[[393,348,348],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[[393,54],3],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[396,396],[[-1,-2],7,[],[]],[[396,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[396,397],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[396,54],[[],[[153,[[125,[152]]]]]],[[],398],[[397,54],396],[[397,54],7],[54,7],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[398,54],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,[[47,[[7,[53]]]]]],[29,[[47,[235]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,45],[64,45],[64,45],[64,64],[399,399],[400,400],[65,65],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[64,64],44],[[64,64],45],0,[[64,2],3],[[399,2],3],[[400,2],3],[[65,2],3],[[],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],29],[65,[[47,[115]]]],0,[401,29],[[64,64],[[47,[44]]]],[402,[[47,[235]]]],[[53,402],7],[[],29],0,[[],[[47,[139]]]],[112,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[402,[[47,[115]]]],[402,[[47,[115]]]],[[[47,[115]],402],[[4,[7,400]]]],0,[[403,402],48],[-1,-2,[],[]],[-1,-2,[],[]],[[403,48,402],7],[-1,-1,[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,[[[404,[-1]]],[[59,[-1]]],[]],[[[404,[-1]]],[[59,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[404,[-1]]],29,[]],[[[404,[-1]]],-2,[],[]],[[[404,[-1]]],-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[404,[-1]]],29,[]],[-1,[[404,[-1]]],220],[[[404,[-1]]],[[47,[-1]]],[]],[[[404,[-1]],-1],[[4,[7,-1]]],[]],[[[404,[-1]],29],7,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,[127,29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[127,127],[[-1,-2],7,[],[]],[[127,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[131,[[47,[127]]]],[[53,29],[[47,[127]]]],[[115,29],127],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,29],55],[[127,29],56],[[127,29],13],[[127,29],48],[405,48],[406,55],[407,56],[408,13],[127,29],[-1,-2,[],[]],[[127,29],-1,202],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[127,29,56],7],[[127,29,13],7],[[127,29,48],7],[[405,48],7],[[406,55],7],[[407,56],7],[[408,13],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[409,115],[410,115],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],409],[115,410],[409,[[47,[[411,[409]]]]]],[410,[[47,[[411,[410]]]]]],[409,29],[410,29],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[397,397],[[-1,-2],7,[],[]],[[397,2],3],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,[397,[[4,[381,380]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[397,[[47,[412]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[330,330],[[-1,-2],7,[],[]],[413,52],[[],414],[[],330],[29,331],[[414,2],3],[[330,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[415,[[4,[-1,204]]],416],0,0,0,[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[417]]],[[47,[418]]]],[[417,[59,[48]]],[[4,[7,7]]]],0,0,[-1,415,[413,416]],[[[125,[413]]],7],[415,7],[417,414],[[419,[59,[48]]],[[47,[[125,[417]]]]]],[[[59,[48]]],[[47,[[125,[417]]]]]],0,0,0,0,[[],[[0,[[50,[],[[49,[112]]]]]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[415,204],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[420,52],[[],421],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[59,[48]]],[[47,[422]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[422]]],[[47,[418]]]],[[422,[59,[48]]],[[4,[7,7]]]],[[],[[125,[423]]]],[421,415],[[[125,[420]]],7],[422,414],[[423,[59,[48]]],[[47,[[125,[417]]]]]],[29,7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[424,425],[[0,[[50,[],[[49,[426]]]]]]]],[425,425],[[-1,-2],7,[],[]],[[425,425],44],[427,52],[[425,425],45],[[424,2],3],[[425,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[428,7],[[[59,[48]]],[[47,[429]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[429]]],[[47,[418]]]],[[429,[59,[48]]],[[4,[7,7]]]],[[424,425],430],[[],[[125,[431]]]],[430,[[47,[-1]]],[]],[[[125,[427]]],7],[429,414],[[425,425],[[47,[44]]]],[[431,[59,[48]]],[[47,[[125,[417]]]]]],[-1,-2,[],[]],[424,[[47,[54]]]],[-1,112,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,[[432,402],[[47,[433]]]],[[432,56,56],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[434,434],[[-1,-2],7,[],[]],[[434,434],44],[435,52],[[432,56,402],7],[[],432],[[434,434],45],[[434,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[436]]],[[47,[418]]]],[[436,[59,[48]]],[[4,[7,7]]]],[[],436],[434,432],[[],[[125,[437]]]],[[[125,[435]]],7],[436,414],[[434,434],[[47,[44]]]],[[437,[59,[48]]],[[47,[[125,[417]]]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[438,[-1]]],[202,439]],[[],[[367,[-1]]],439],[[[440,[-1]]],-2,202,[]],[[[306,[-1]]],-1,202],[[[441,[-1]]],-1,202],[[[440,[-1]]],-2,202,[]],[[[441,[-1]]],-1,202],[[[440,[-1]]],7,202],[[[367,[-1]]],7,202],[[[306,[-1]]],7,202],[[[441,[-1]]],7,202],0,[[[442,[-1]],2],3,[]],[331,-1,[]],[-1,-1,[]],[-1,[[438,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[331,-1,[]],[-1,[[367,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[442,[-1]]],[[443,[-1]]],[]],[-1,-1,[]],[[[438,[-1]]],[[444,[-1]]],202],[[[367,[-1]]],[[444,[-1]]],202],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[438,[-1]]],[[444,[-1]]],[202,202]],[[[367,[-1]]],[[444,[-1]]],[202,202]],[[[367,[-1]]],45,202],[[[438,[-1]]],[[444,[[440,[-1]]]]],202],[-1,[[438,[-1]]],[]],[-1,[[367,[-1]]],[]],[[[367,[-1]]],[[444,[[306,[-1]]]]],202],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[438,[-1]]],[[445,[[440,[-1]]]]],202],[[[367,[-1]]],[[445,[[306,[-1]]]]],202],[[[367,[-1]]],[[445,[[441,[-1]]]]],202],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[[367,[-1]]],[[444,[[441,[-1]]]]],202],0,0,0,0,0,0,0,0,0,[[[446,[-1]]],29,[[67,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[447,448,448,449,449],[[4,[448,448]]]],[[447,448,448,449,449],[[4,[448,448]]]],[[[446,[-1]],-1],45,[[67,[29]]]],[[],[[450,[-1]]],[[67,[29]],439]],[[],[[446,[-1]]],[[67,[29]],439]],[[],[[451,[-1]]],[[67,[48]],439]],[[],[[452,[-1]]],[[67,[55]],439]],[[],[[453,[-1]]],[[67,[56]],439]],[[],[[454,[-1]]],[[67,[13]],439]],[[],447],[[],[[450,[-1]]],[]],[[],[[446,[-1]]],[]],[[],[[451,[-1]]],[]],[[],[[452,[-1]]],[]],[[],[[453,[-1]]],[]],[[],[[454,[-1]]],[]],[[[450,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[456,[],[[326,[]]]]]],[[[446,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[456,[],[[326,[]]]]]],[[[451,[-1]],-1],-1,[220,[67,[48]],[455,[48]],[456,[],[[326,[]]]]]],[[[452,[-1]],-1],-1,[220,[67,[55]],[455,[55]],[456,[],[[326,[]]]]]],[[[453,[-1]],-1],-1,[220,[67,[56]],[455,[56]],[456,[],[[326,[]]]]]],[[[454,[-1]],-1],-1,[220,[67,[13]],[455,[13]],[456,[],[[326,[]]]]]],[[447,448,449],448],[[[450,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[457,[],[[326,[]]]]]],[[[446,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[457,[],[[326,[]]]]]],[[[451,[-1]],-1],-1,[220,[67,[48]],[455,[48]],[457,[],[[326,[]]]]]],[[[452,[-1]],-1],-1,[220,[67,[55]],[455,[55]],[457,[],[[326,[]]]]]],[[[453,[-1]],-1],-1,[220,[67,[56]],[455,[56]],[457,[],[[326,[]]]]]],[[[454,[-1]],-1],-1,[220,[67,[13]],[455,[13]],[457,[],[[326,[]]]]]],[[[450,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[458,[],[[326,[]]]]]],[[[446,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[458,[],[[326,[]]]]]],[[[451,[-1]],-1],-1,[220,[67,[48]],[455,[48]],[458,[],[[326,[]]]]]],[[[452,[-1]],-1],-1,[220,[67,[55]],[455,[55]],[458,[],[[326,[]]]]]],[[[453,[-1]],-1],-1,[220,[67,[56]],[455,[56]],[458,[],[[326,[]]]]]],[[[454,[-1]],-1],-1,[220,[67,[13]],[455,[13]],[458,[],[[326,[]]]]]],[[[446,[-1]],-1],45,[[67,[29]]]],[[[446,[-1]],-1],45,[[67,[29]]]],[[[450,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[459,[],[[326,[]]]]]],[[[446,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[459,[],[[326,[]]]]]],[[[451,[-1]],-1],-1,[220,[67,[48]],[455,[48]],[459,[],[[326,[]]]]]],[[[452,[-1]],-1],-1,[220,[67,[55]],[455,[55]],[459,[],[[326,[]]]]]],[[[453,[-1]],-1],-1,[220,[67,[56]],[455,[56]],[459,[],[[326,[]]]]]],[[[454,[-1]],-1],-1,[220,[67,[13]],[455,[13]],[459,[],[[326,[]]]]]],[[447,448,449],448],[[[450,[-1]],-2],[[4,[-1,-1]]],[[67,[29]],[455,[29]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[[446,[-1]],-2],[[4,[-1,-1]]],[[67,[29]],[455,[29]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[[451,[-1]],-2],[[4,[-1,-1]]],[[67,[48]],[455,[48]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[[452,[-1]],-2],[[4,[-1,-1]]],[[67,[55]],[455,[55]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[[453,[-1]],-2],[[4,[-1,-1]]],[[67,[56]],[455,[56]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[[454,[-1]],-2],[[4,[-1,-1]]],[[67,[13]],[455,[13]]],[[327,[-1],[[326,[[47,[-1]]]]]]]],[[447,449,449,-1],[[4,[448,448]]],[[327,[448],[[326,[[47,[448]]]]]]]],[[[450,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[460,[],[[326,[]]]]]],[[[446,[-1]],-1],-1,[220,[67,[29]],[455,[29]],[460,[],[[326,[]]]]]],[[[451,[-1]],-1],-1,[220,[67,[48]],[455,[48]],[460,[],[[326,[]]]]]],[[[452,[-1]],-1],-1,[220,[67,[55]],[455,[55]],[460,[],[[326,[]]]]]],[[[453,[-1]],-1],-1,[220,[67,[56]],[455,[56]],[460,[],[[326,[]]]]]],[[[454,[-1]],-1],-1,[220,[67,[13]],[455,[13]],[460,[],[[326,[]]]]]],[[[446,[0]],2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[448,447],[[[446,[-1]],-1],7,[[67,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[450,[-1]]],-1,[[455,[29]]]],[[[446,[-1]]],-1,[[455,[29]]]],[[[451,[-1]]],-1,[[455,[48]]]],[[[452,[-1]]],-1,[[455,[55]]]],[[[453,[-1]]],-1,[[455,[56]]]],[[[454,[-1]]],-1,[[455,[13]]]],[447,448],[[[446,[-1]]],45,[[67,[29]]]],[[447,449],448],[-1,[[450,[-1]]],[[67,[29]]]],[-1,[[446,[-1]]],[[67,[29]]]],[-1,[[451,[-1]]],[[67,[48]]]],[-1,[[452,[-1]]],[[67,[55]]]],[-1,[[453,[-1]]],[[67,[56]]]],[-1,[[454,[-1]]],[[67,[13]]]],[448,447],[[[446,[-1]],-1],7,[[67,[29]]]],[[[446,[-1]],-1,45],7,[[67,[29]]]],[[[450,[-1]],-1],7,[[67,[29]]]],[[[446,[-1]],-1],7,[[67,[29]]]],[[[451,[-1]],-1],7,[[67,[48]]]],[[[452,[-1]],-1],7,[[67,[55]]]],[[[453,[-1]],-1],7,[[67,[56]]]],[[[454,[-1]],-1],7,[[67,[13]]]],[[447,448,449],7],[[[450,[-1]],-1],-1,[[67,[29]],[455,[29]]]],[[[446,[-1]],-1],-1,[[67,[29]],[455,[29]]]],[[[451,[-1]],-1],-1,[[67,[48]],[455,[48]]]],[[[452,[-1]],-1],-1,[[67,[55]],[455,[55]]]],[[[453,[-1]],-1],-1,[[67,[56]],[455,[56]]]],[[[454,[-1]],-1],-1,[[67,[13]],[455,[13]]]],[[447,448,449],448],[-1,112,[]],[[[446,[-1]],-1],7,[[67,[29]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[[450,[-1]]],-1,[[455,[29]]]],[[[446,[-1]]],-1,[[455,[29]]]],[[[451,[-1]]],-1,[[455,[48]]]],[[[452,[-1]]],-1,[[455,[55]]]],[[[453,[-1]]],-1,[[455,[56]]]],[[[454,[-1]]],-1,[[455,[13]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[461,[-1]]],[[47,[-1]]],202],[[[461,[-1]]],7,[]],[[[461,[-1]],-1],[[4,[7,-1]]],202],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[462,[-1]]],[[47,[-1]]],[]],[[[463,[-1]]],[[47,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,[[462,[-1]]],[]],[29,[[463,[-1]]],[]],[[[462,[-1]],-1],[[4,[7,-1]]],[]],[[[463,[-1]],-1],[[4,[7,-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[[462,[-1]]],-1,[]],[[[463,[-1]]],[[47,[-1]]],[]],[29,[[461,[-1]]],202],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],464],[465,29],[288,29],[464,[[47,[7]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[464,7],[29,465],[[],464],[29,[[153,[[123,[288]]]]]],[[288,466],45],[[[153,[467]],466],[[468,[-1]]],[]],[[[153,[[469,[-1]]]],466],[[468,[-2]]],[],[]],[465,7],[288,7],[[465,-2],-1,[],[[334,[],[[326,[-1]]]]]],[[464,-2],-1,[],[[334,[],[[326,[-1]]]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[465,45],[464,45],[288,45],[[[153,[-1]],466],468,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[465,7],[[[153,[[123,[288]]]]],[[153,[[125,[152]]]]]],[[[153,[[123,[288]]]]],[[153,[[125,[152]]]]]],[[29,29],[[153,[[123,[288]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[470,[47,[471]],[47,[471]]],[[4,[[47,[471]],[47,[471]]]]]],[[],470],[-1,-1,[]],[-1,-2,[],[]],[[],470],[470,[[47,[7]]]],[470,[[47,[471]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[470,-1],7,[[327,[],[[326,[45]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[472,[-1]]],[202,439]],[[[473,[-1]]],-2,202,[]],[[[473,[-1]]],-2,202,[]],[[[473,[-1]]],7,202],[[[472,[-1]]],7,202],[331,-1,[]],[-1,-1,[]],[-1,[[472,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[472,[-1]]],-1,[]],[[[472,[-1]]],[[473,[-1]]],202],[-1,[[472,[-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[472,[-1]]],[[47,[[473,[-1]]]]],202],[-1,5,[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[47,[474]]]],[[[125,[57]]],7],[475,56],[476,7],[[],477],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[478,478],[475,475],[324,324],[58,58],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[475,475],44],[[324,324],44],[[58,58],44],[[],54],[324,57],[324,[[47,[[125,[57]]]]]],[[],[[0,[[135,[],[[49,[[125,[57]]]]]]]]]],[[],479],[[475,475],45],[[324,324],45],[[58,58],45],[[478,2],3],[[475,2],3],[[475,2],3],[[324,2],3],[[58,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,324],[-1,-1,[]],[-1,-1,[]],[324,[[47,[[125,[57]]]]]],[6,331],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,45],[[],45],[58,45],[58,45],[58,45],[[],394],[[],[[47,[[123,[382]]]]]],[475,29],[479,[[47,[54]]]],[475,29],[479,[[47,[54]]]],[[],54],[[48,48,55,54],475],[[45,45],58],[479,29],[479,29],[479,29],[479,29],[[475,475],[[47,[44]]]],[[324,324],[[47,[44]]]],[[58,58],[[47,[44]]]],[475,29],[479,478],[475,54],[[],[[47,[[123,[386]]]]]],[[[125,[394]]],7],[[],54],[[],[[47,[318]]]],[[],394],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,112,[]],[479,29],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[],475],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[-1,203,[[152,[],[[326,[7]]]]]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],480],[480,331],[[480,203],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[481,481],-1,[]],[482,29],[471,29],[[483,[153,[[123,[288]]]]],484],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[482,482],[483,483],[481,481],[485,485],[418,418],[471,471],[486,486],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[482,482],44],[[481,481],44],[[485,485],44],[[418,418],44],[[471,471],44],[[486,486],44],[487,45],[[],486],[[],[[47,[415]]]],[[],418],[[],482],[[],[[47,[471]]]],[418,112],[[],482],[[],483],[[],481],[[],485],[[],418],[[],483],[[482,482],45],[[483,483],45],[[481,481],45],[[485,485],45],[[418,418],45],[[471,471],45],[[486,486],45],[[],331],[484,7],[[482,2],3],[[483,2],3],[[481,2],3],[[485,2],3],[[418,2],3],[[471,2],3],[[486,2],3],[45,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[485,487],[-1,-1,[]],[29,482],[-1,-1,[]],[29,483],[-1,-1,[]],[201,481],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[488,201],481],[348,483],[29,482],[[[128,[56]]],7],[-1,7,489],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[488,481],201],[483,348],[484,45],[483,45],[[],45],[483,45],[483,45],[483,45],[[],45],[485,45],[[[490,[-1]]],[[4,[-1,7]]],[]],[418,7],[471,7],[488,481],[488,13],[[],201],[471,[[47,[112]]]],[[],491],[48,487],[201,483],[29,[[47,[471]]]],[483,484],[[482,482],[[47,[44]]]],[[483,483],[[47,[44]]]],[[481,481],[[47,[44]]]],[[485,485],[[47,[44]]]],[[418,418],[[47,[44]]]],[[471,471],[[47,[44]]]],[[486,486],[[47,[44]]]],[[],331],[[491,415],491],[-1,7,489],[[486,-2],-1,[],[[334,[],[[326,[-1]]]]]],[[483,-1],7,327],[[],7],[487,7],[484,7],[[418,54],7],[[[125,[488]]],7],[[],7],[201,7],[201,7],[[],7],[[491,-2,54],[[490,[-1]]],492,[[334,[],[[326,[-1]]]],492]],[-1,7,[[152,[],[[326,[7]]]]]],[203,7],[29,331],[[491,29,54],[[47,[471]]]],[[491,29,54],[[47,[418]]]],[[491,324],491],[471,[[47,[324]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[],29],[[],29],[471,7],[[493,29,483],484],[485,491],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[494,348],[349,348],[495,348],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[496,496],[497,497],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[496,496],44],[[494,351,498,374,348,499],7],[[349,351,498,374,348,499],7],[[495,351,498,374,348,499],7],[[497,351,498,374,499],7],[[349,351,374,-1],7,[[334,[[59,[48]],389,374]]]],[497,348],[[496,496],45],[[],349],[[496,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[494,45],[349,45],[495,45],[497,45],[[494,351,351],348],[[349,351,351],348],[[495,351,351],348],[[497,351,351],348],[349,348],[497,348],[[],497],[[29,29,[59,[48]]],349],[[[128,[48]]],[[47,[495]]]],[[496,348],[[47,[497]]]],[[496,496],[[47,[44]]]],[497,348],[[],349],[494,348],[349,348],[495,348],[[],497],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[],497],[349,348],[[494,351],348],[[349,351],348],[[495,351],348],[[497,351],348],0,0,[500,48],[-1,-2,[],[]],[-1,-2,[],[]],[500,[[7,[348,348]]]],[500,[[7,[348,348]]]],[-1,-1,[]],[[493,[47,[501]],497,502,48,[47,[[60,[503]]]]],500],[-1,-2,[],[]],[500,45],[[29,29,497,[47,[[60,[503]]]]],500],[500,[[153,[[125,[152]]]]]],[500,[[4,[7,350]]]],[[500,48],7],[[500,45],45],[[500,348,348],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[500,54],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[504,505],[[506,505],506],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[506,506],[506,506],[506,506],[[504,389,29],389],[[497,54,389,29,507],389],[506,506],[507,507],[505,505],[508,508],[509,509],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[504,499],[[506,499],506],[[],507],[[],505],[[],508],[[504,498,383,29],7],[[498,54,497,383,499,29,507,505,508,499,510],7],0,[[507,507],45],[[505,505],45],[[508,508],45],[[507,2],3],[[505,2],3],[[508,2],3],[[509,2],3],[504,497],[[506,497],506],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[504,507],[[506,507],506],[[497,54,389,29,507],[[128,[509]]]],[506,506],[506,506],[506,506],[[],506],[[],506],[[506,499,510],506],[504,499],[504,510],0,[504,[[511,[54]]]],[[506,54],504],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[506,506],[506,506],[506,506],[506,506],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[504,508],[[506,508],506],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[-1,-1,[]],[-1,-2,[],[]],[[],512],[512,499],[512,499],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],[512,499],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[513,499],513],[493,499],[501,7],[[],514],[[],515],[[],516],[493,29],[493,[[153,[[125,[152]]]]]],[[513,499],513],[493,499],[[514,514],-1,[]],[[515,515],-1,[]],[[516,516],-1,[]],[[514,514],7],[[515,515],7],[[516,516],7],[513,513],[[514,514],-1,[]],[[515,515],-1,[]],[[516,516],-1,[]],[[514,514],7],[[515,515],7],[[516,516],7],[514,29],[515,29],[516,29],[[514,514],-1,[]],[[515,515],-1,[]],[[516,516],-1,[]],[[514,514],7],[[515,515],7],[[516,516],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[513,54],493],[513,513],[514,514],[517,517],[515,515],[516,516],[518,518],[519,519],[493,493],[520,520],[521,521],[522,522],[523,523],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[493,7],[[517,517],44],[[518,518],44],[[493,493],44],[514,514],[515,515],[516,516],[[514,514],45],[[515,515],45],[[516,516],45],[[524,493],45],[493,501],[493,383],[493,389],[[493,29,201],7],[[],493],[[],514],[[],517],[[],515],[[],519],[[],524],[[514,514],514],[[515,515],515],[[516,516],516],[[493,-1],7,[[334,[498]]]],[[493,383,-1],[[4,[7,520]]],[[334,[498]]]],[[493,390,383],7],[[],525],[[],514],[[],515],[[],516],[[514,514],45],[[517,517],45],[[515,515],45],[[516,516],45],[[518,518],45],[[519,519],45],[[493,493],45],[[518,2],3],[[519,2],3],[[493,2],3],[[520,2],3],[[521,2],3],[[522,2],3],[[523,2],3],[[513,383],513],[493,383],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,514],[-1,-1,[]],[-1,-1,[]],[29,515],[-1,-1,[]],[-1,-1,[]],[29,516],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,514],[29,515],[29,516],[29,514],[29,515],[29,516],[513,513],[524,[[47,[493]]]],[112,7],[[493,522],7],[493,7],[[],7],[[513,499],513],[493,499],[[[123,[382]]],7],[[514,514],7],[[515,515],7],[[516,516],7],[[514,514],514],[[515,515],515],[[516,516],516],[[514,514],45],[[515,515],45],[[516,516],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[493,383],7],[383,7],[493,45],[525,45],[514,45],[515,45],[516,45],[514,45],[515,45],[516,45],[[],45],[524,45],[[],45],[[],45],[524,45],[493,[[47,[493]]]],[493,45],[[513,518],513],[[],383],[493,7],[[524,-2],[[47,[-1]]],[],[[334,[493],[[326,[-1]]]]]],[[493,510],7],[[493,374],7],[[],513],[[344,344,201],525],[29,[[47,[493]]]],[[[47,[493]]],524],[514,-1,[]],[515,-1,[]],[516,-1,[]],[513,513],[[513,374],513],[[517,517],[[47,[44]]]],[[518,518],[[47,[44]]]],[[493,493],[[47,[44]]]],[[493,466],[[468,[[47,[522]]]]]],[[493,522],[[4,[7,521]]]],[368,7],[363,7],[368,7],[525,344],[493,[[47,[522]]]],[493,7],[[514,514],7],[[515,515],7],[[516,516],7],[524,7],[[493,389],7],[[390,383],7],[[],501],[[514,514,45],7],[[515,515,45],7],[[516,516,45],7],[[524,493],7],[[493,45],7],[502,7],[[493,499],7],[[493,45],7],[526,7],[499,7],[[493,383],7],[493,7],[45,45],[[],7],[[45,45,45],7],[45,45],[[493,54],7],[493,7],[[513,389],513],[[513,515],513],[[513,515],513],[[513,515],513],[[514,514],514],[[515,515],515],[[516,516],516],[[514,514],7],[[515,515],7],[[516,516],7],[[524,[47,[493]]],[[47,[493]]]],[[514,514],514],[[515,515],515],[[516,516],516],[513,513],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[514,514],7],[[515,515],7],[[516,516],7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[[514,514],514],[[515,515],515],[[516,516],516],[[],383],[493,[[47,[522]]]],[-2,-1,[],[[334,[],[[326,[-1]]]]]],[[513,56],513],[[524,[47,[493]]],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],7],[45,7],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]]],"c":[],"p":[[5,"HexDump",0],[5,"Formatter",8616],[8,"Result",8616],[6,"Result",8617],[5,"TypeId",8618],[5,"BootInfo",8619],[1,"tuple"],[5,"SystemTime",8620],[5,"MtrrIndex",45],[5,"MSR",45],[5,"Rflags",45],[10,"AsDescriptorEntry",45],[1,"u64"],[5,"Limit16",45],[5,"Limit32",45],[5,"Selector",45],[6,"PrivilegeLevel",45],[6,"DescriptorType",45],[6,"DefaultSize",45],[6,"InterruptStackTable",45],[5,"TaskStateSegment",45],[5,"DescriptorPair",45],[5,"Offset32",45],[5,"Offset64",45],[5,"Linear32",45],[5,"Linear64",45],[6,"ExceptionType",45],[5,"InterruptVector",45],[1,"usize"],[5,"DescriptorEntry",45],[6,"Feature",45],[6,"F01D",45],[6,"F01C",45],[6,"F070B",45],[6,"F070C",45],[6,"F070D",45],[6,"F81D",45],[6,"F81C",45],[6,"NativeModelCoreType",45],[5,"EaxAndEdx",45],[6,"Mtrr",45],[5,"MtrrItem",45],[6,"PAT",45],[6,"Ordering",8621],[1,"bool"],[5,"GlobalDescriptorTable",45],[6,"Option",8622],[1,"u8"],[17,"Item"],[10,"Iterator",8623],[5,"CpuContextData",45],[6,"c_void",8624],[5,"PhysicalAddress",5806],[1,"str"],[1,"u16"],[1,"u32"],[5,"Cpu",45],[6,"ProcessorCoreType",7511],[1,"slice"],[1,"array"],[5,"PageErrorCode",948],[5,"PageAttribute",948],[6,"PageErrorKind",948],[6,"MProtect",6601],[6,"MemoryMapRequest",6601],[5,"Nid",1099],[10,"Into",8625],[5,"Node",1099],[5,"WidgetAddress",1099],[5,"HdAudioController",1099],[5,"PciConfigAddress",2439],[5,"GlobalControl",1099],[5,"GlobalStatus",1099],[5,"InterruptControl",1099],[5,"CorbControl",1099],[5,"CorbStatus",1099],[5,"RirbControl",1099],[5,"RirbStatus",1099],[5,"ImmediateCommandStatus",1099],[5,"StreamDescriptorControl",1099],[5,"StreamDescriptorStatus",1099],[5,"BufferDescriptorFlag",1099],[5,"AudioWidgetCapabilities",1099],[5,"SupportedPCMFormat",1099],[5,"Cad",1099],[6,"Verb",1099],[5,"Response",1099],[5,"StreamId",1099],[5,"Command",1099],[5,"PinWidgetControl",1099],[5,"ConfigurationDefault",1099],[5,"PcmFormat",1099],[5,"AmplifierGainMuteGetPayload",1099],[5,"AmplifierGainMuteSetPayload",1099],[5,"AmplifierCapabilities",1099],[6,"Bits",1099],[5,"Corb",1099],[5,"GlobalRegisterSet",1099],[5,"GlobalCapabilities",1099],[5,"StreamDescriptorRegisterSet",1099],[6,"ControllerError",1099],[6,"ParameterId",1099],[6,"WidgetType",1099],[6,"DefaultDevice",1099],[6,"PortConnectivity",1099],[6,"GrossLocation",1099],[6,"GeometricLocation",1099],[6,"Color",1099],[6,"SampleRate",1099],[5,"ImmediateCommandRegisterSet",1099],[8,"Result",1099],[5,"String",8626],[5,"BufferDescriptor",1099],[5,"CorbRegisterSet",1099],[5,"NonZeroUsize",8627],[5,"RirbRegisterSet",1099],[6,"CommandBuffer",1099],[5,"StreamDescriptor",1099],[5,"Rirb",1099],[5,"HdaDriverRegistrar",1099],[5,"PciDevice",2439],[10,"PciDriver",2439],[5,"Arc",8628],[10,"PciDriverRegistrar",2439],[5,"Box",8629],[10,"AudioDriver",5951],[5,"MmioSlice",6728],[5,"Vec",8630],[5,"HdaSoundDriver",1099],[5,"PciCommand",2439],[5,"PciBar",2439],[5,"PciBarIndex",2439],[6,"PciBarType",2439],[5,"PciCapabilityId",2439],[10,"ExactSizeIterator",8631],[5,"PciClass",2439],[5,"PciVendorId",2439],[5,"PciDeviceId",2439],[5,"NonZeroU8",8627],[5,"UsbDevice",2699],[5,"UsbAddress",2699],[5,"UsbEndpoint",2699],[5,"UsbEndpointAddress",2699],[5,"UsbInterface",2699],[5,"UsbAlternateSettingNumber",2699],[5,"UsbInterfaceDescriptor",2699],[5,"UsbRouteString",2699],[5,"UsbHubPortNumber",2699],[5,"UsbWord",2699],[10,"UsbHostInterface",2699],[6,"PSIV",2699],[10,"Future",8632],[5,"Pin",8633],[5,"UsbDeviceContext",2699],[6,"UsbError",2699],[5,"UsbClass",2699],[5,"UsbBaseClass",2699],[5,"UsbBinaryObjectStore",2699],[10,"UsbDeviceCapabilityDescriptor",2699],[6,"UsbDeviceCapabilityType",2699],[5,"Usb2HubDescriptor",2699],[5,"Usb2HubCharacterisrics",2699],[5,"Usb3HubDescriptor",2699],[5,"Usb3HubCharacterisrics",2699],[5,"UsbHidClassDescriptor",2699],[6,"UsbDescriptorType",2699],[5,"UsbDeviceDescriptor",2699],[5,"UsbDeviceQualifierDescriptor",2699],[5,"InterfaceAssociationDescriptor",2699],[6,"UsbDeviceFeatureSel",2699],[5,"UsbVersion",2699],[5,"UsbVendorId",2699],[5,"UsbProductId",2699],[5,"UsbSubClass",2699],[5,"UsbProtocolCode",2699],[5,"UsbConfigurationValue",2699],[5,"UsbInterfaceNumber",2699],[5,"UsbConfigurationDescriptor",2699],[5,"UsbStringDescriptor",2699],[5,"UsbLangId",2699],[5,"UsbEndpointDescriptor",2699],[5,"UsbBinaryObjectStoreDescriptor",2699],[5,"UsbSsDeviceCapability",2699],[5,"UsbContainerIdCapability",2699],[5,"UsbControlSetupData",2699],[5,"UsbControlRequestBitmap",2699],[6,"UsbControlRequestType",2699],[6,"UsbControlRequestTarget",2699],[5,"UsbControlRequest",2699],[6,"Usb3LinkState",2699],[5,"Usb3ExitLatencyValues",2699],[6,"UsbEndpointType",2699],[5,"UsbConfiguration",2699],[5,"UsbDeviceIterResult",2699],[10,"UsbDescriptor",2699],[5,"UsbDeviceFocusedScope",2699],[6,"TrbCompletionCode",4301],[10,"UsbClassDriverStarter",2699],[10,"UsbInterfaceDriverStarter",2699],[5,"UsbDeviceIter",2699],[5,"Duration",8634],[10,"Sized",8635],[5,"Task",7636],[5,"Uuid",8636],[5,"UsbAudioStarter",3856],[6,"HidReportType",8637],[5,"HidReportId",8637],[5,"UsbHidStarter",3874],[5,"UsbHub2PortStatusBit",3895],[5,"UsbHub2PortChangeBit",3895],[5,"UsbHub3PortStatusBit",3895],[5,"UsbHub3PortChangeBit",3895],[5,"UsbHub2PortStatus",3895],[5,"UsbHub3PortStatus",3895],[5,"UsbHub2Driver",3895],[5,"UsbHub3Driver",3895],[6,"UsbHubFeatureSel",3895],[6,"UsbHub2PortFeatureSel",3895],[6,"UsbHub3PortFeatureSel",3895],[10,"Copy",8635],[5,"UsbHubStarter",3895],[5,"UsbMsdStarter",4247],[5,"XInputMsg14",4266],[5,"XInputStarter",4266],[5,"Xhci",4301],[5,"PortId",4301],[5,"HccParams1",4301],[5,"UsbCmd",4301],[5,"UsbSts",4301],[5,"DeviceNotificationBitmap",4301],[5,"PortSc",4301],[5,"EpRingContext",4301],[5,"SlotId",4301],[5,"DCI",4301],[5,"NonNullPhysicalAddress",5806],[5,"CommandRequestBlock",4301],[10,"TrbBase",4301],[6,"TrbEvent",4301],[5,"Trb",4301],[5,"HciContext",4301],[5,"EventRingSegmentTableEntry",4301],[5,"InputControlContext",4301],[5,"PortRegisters",4301],[5,"ScheduledTrb",4301],[6,"RequestState",4301],[6,"TransferDirection",4301],[10,"Clone",8638],[6,"TrbType",4301],[6,"EpType",4301],[6,"TrbTranfserType",4301],[5,"XhciSupportedProtocolCapability",4301],[10,"TrbCC",4301],[5,"SlotContext",4301],[5,"InputContext",4301],[5,"HciDeviceContext",4301],[5,"TrbCommandCompletionEvent",4301],[5,"TrbTransferEvent",4301],[5,"TrbDeviceNotificationEvent",4301],[5,"CycleBit",4301],[5,"CapabilityRegisters",4301],[5,"OperationalRegisters",4301],[10,"TrbDci",4301],[5,"InterrupterRegisterSet",4301],[5,"EpRingScopeGuard",4301],[10,"TrbDir",4301],[5,"DoorbellRegister",4301],[5,"EndpointContext",4301],[1,"i64"],[10,"TrbIDt",4301],[5,"XhciRegistrar",4301],[10,"TrbIoC",4301],[5,"RuntimeRegisters",4301],[10,"TrbIsp",4301],[5,"TrbLink",4301],[5,"TrbNop",4301],[5,"TrbNormal",4301],[5,"TrbSetupStage",4301],[5,"TrbDataStage",4301],[5,"TrbStatusStage",4301],[5,"TrbAddressDeviceCommand",4301],[5,"TrbConfigureEndpointCommand",4301],[5,"TrbEvaluateContextCommand",4301],[5,"TrbResetEndpointCommand",4301],[10,"TrbPortId",4301],[10,"TrbPtr",4301],[8,"TrbRawData",4301],[5,"TrbPortStatusChangeEvent",4301],[5,"AsyncSemaphore",7405],[10,"TrbSlotId",4301],[10,"TrbXferLen",4301],[5,"OpenOptions",5399],[8,"Result",8639],[5,"INodeType",5399],[6,"Whence",5399],[5,"FsRawFileControlBlock",5399],[10,"FsDriver",5399],[10,"FsAccessToken",5399],[5,"FsRawMetaData",5399],[6,"FileType",8640],[5,"Error",8616],[5,"MinorDevNo",5624],[5,"MajorDevNo",5624],[5,"FsRawDirEntry",5399],[8,"OffsetType",5399],[5,"BTreeMap",8641],[5,"RwLockReadGuard",7111],[5,"FsRawReadDir",5399],[5,"Full",5576],[10,"DeviceAccessToken",5624],[5,"Null",5589],[5,"Random",5600],[5,"Zero",5612],[6,"InstallDeviceError",5624],[5,"DeviceCharacteristics",5624],[10,"DeviceFileDriver",5624],[5,"SmBiosHeader",5709],[5,"HeaderType",5709],[5,"SmBios",5709],[8,"PhysicalAddressRepr",5806],[10,"HalCpu",5806],[5,"Hal",5806],[10,"HalSync",5806],[5,"AtomicUsize",8642],[5,"ProcessorIndex",7511],[5,"InterruptGuard",5806],[17,"Output"],[10,"FnMut",8643],[10,"HalSpinlock",5806],[5,"Spinlock",5806],[5,"LegacyAppContext",6853],[1,"never"],[10,"HalPci",5806],[10,"HalSpinLoopWait",5806],[10,"FnOnce",8643],[5,"AudioContextHandle",5951],[6,"OscType",5951],[5,"AudioContext",5951],[5,"Weak",8628],[5,"AudioNode",5951],[8,"SampleType",5951],[8,"FreqType",5951],[5,"AudioEmitter",5951],[25,"AudioNodeFilter",5951],[1,"f64"],[1,"i16"],[5,"NoteControl",5951],[5,"EmConsole",6108],[1,"isize"],[5,"FixedFontDriver",7905],[6,"TtyError",6519],[1,"char"],[5,"HidBitStreamReader",6127],[5,"ParsedReportMainItem",6127],[5,"HidBitStreamWriter",6127],[5,"HidParsedReport",6127],[5,"ParsedReportApplication",6127],[6,"ParsedReportEntry",6127],[5,"KeyEventFlags",6127],[5,"MouseEvent",6127],[5,"MouseButton",8637],[5,"GameInput",6127],[5,"KeyReportRaw",6127],[5,"KeyEvent",6127],[6,"HidBitStreamError",6127],[5,"GameInputHandle",6127],[6,"GameInputButtonType",6127],[5,"RwLock",7111],[5,"MouseState",6127],[5,"HidReportMainFlag",8637],[5,"KeyboardState",6127],[6,"HidReportItemTag",8637],[5,"Modifier",8637],[5,"Usage",8637],[5,"Point",8644],[5,"HidReportGlobalState",8637],[5,"HidReportLocalState",8637],[5,"MouseReport",8637],[1,"i32"],[5,"HidUsage",8637],[6,"DecodeError",6447],[5,"OwnedBitmap32",8645],[10,"Screen",6470],[5,"Rect",8644],[17,"ColorType"],[10,"Drawable",8646],[5,"BitmapScreen",6470],[5,"BitmapRef32",8645],[6,"ScreenOrientation",6470],[5,"Size",8644],[5,"BitmapRefMut32",8645],[6,"Rotation",8646],[10,"TtyWrite",6519],[5,"NullTty",6519],[10,"Tty",6519],[10,"TtyRead",6519],[5,"SimpleMessagePayload",6565],[6,"Icons",6817],[5,"Log",6565],[6,"AllocationError",6601],[6,"DeallocationError",6601],[5,"MemoryManager",6601],[5,"Layout",8647],[5,"CustomAlloc",6700],[5,"FixedVec",6710],[5,"MmioRegU8",6728],[5,"MmioRegU16",6728],[5,"MmioRegU32",6728],[5,"MmioRegU64",6728],[5,"Node16",6793],[5,"AtomicNode",6793],[5,"NonNull",8648],[5,"OperationalBitmap",8645],[10,"Personality",6853],[5,"LoadedImageOption",6853],[5,"PersonalityContext",6853],[10,"Identify",8636],[10,"BinaryLoader",6853],[5,"ProcessId",7658],[10,"BinaryRecognizer",6853],[5,"ArleContext",6922],[5,"LaunchOption",6922],[5,"ArleLoader",6922],[5,"ArleRecognizer",6922],[5,"JisString",6965],[6,"HoeLangMode",6965],[6,"JisChar",6965],[5,"Hoe",6965],[5,"LegacySyscallContext",45],[5,"HrbBinaryLoader",6965],[5,"JisChars",6965],[5,"HrbRecognizer",6965],[5,"SimpleAllocator",7049],[5,"NonZeroU32",8627],[6,"AllocationStrategy",7049],[5,"MyosRuntime",7049],[5,"MyosBinaryLoader",7049],[5,"WasmRecognizer",7049],[5,"Mutex",7111],[10,"Default",8649],[5,"MutexGuard",7111],[5,"RwLockWriteGuard",7111],[5,"PoisonError",7111],[6,"TryLockError",7111],[8,"LockResult",7111],[8,"TryLockResult",7111],[5,"AtomicFlags",7210],[5,"AtomicFloat",7210],[8,"FloatType",7210],[6,"Ordering",8642],[5,"AtomicWrapper",7210],[5,"AtomicWrapperU8",7210],[5,"AtomicWrapperU16",7210],[5,"AtomicWrapperU32",7210],[5,"AtomicWrapperU64",7210],[10,"From",8625],[10,"Add",8650],[10,"BitAnd",8651],[10,"BitOr",8651],[10,"Sub",8650],[10,"BitXor",8651],[5,"ConcurrentFifo",7369],[5,"EventQueue",7369],[5,"AsyncEventQueue",7369],[5,"BinarySemaphore",7405],[5,"Semaphore",7405],[5,"Context",8652],[5,"AsyncSemaphoreObserver",7405],[6,"Poll",8653],[5,"AsyncSemaphoreResultObserver",7405],[5,"SignallingObject",7470],[5,"ThreadHandle",7658],[5,"SpinMutex",7484],[5,"SpinMutexGuard",7484],[5,"Xsdt",8654],[5,"Version",7511],[5,"AtomicBool",8642],[5,"BootFlags",8619],[6,"ProcessorSystemType",7511],[5,"DeviceInfo",7511],[5,"Executor",7647],[5,"TimeSpec",7658],[6,"SchedulerState",7658],[5,"Timer",7658],[5,"TimerEvent",7658],[6,"Priority",7658],[6,"Irql",7658],[5,"Quantum",7658],[10,"TimerSource",7658],[10,"Write",8616],[5,"JoinHandle",7658],[5,"SpawnOption",7658],[10,"Send",8635],[5,"WindowHandle",8185],[10,"FontDriver",7905],[5,"TrueTypeFont",7905],[6,"FontFamily",7905],[5,"FontDescriptor",7905],[6,"BitmapRefMut",8645],[6,"Color",8655],[5,"Terminal",8000],[5,"EdgeInsets",8644],[5,"Alpha8",8655],[8,"TrueColor",8655],[5,"AttributedString",8021],[6,"TextAlignment",8021],[5,"AttributeSet",8021],[6,"LineBreakMode",8021],[6,"VerticalAlignment",8021],[5,"LineStatus",8021],[5,"Movement",8644],[6,"Cow",8656],[5,"Theme",8148],[5,"RawWindowBuilder",8185],[5,"WindowManagerAttributes",8185],[5,"WindowStyle",8185],[5,"WindowAttributes",8185],[6,"ViewActionState",8185],[5,"WindowLevel",8185],[6,"BitmapStrategy",8185],[6,"WindowDrawingError",8185],[6,"WindowPostError",8185],[6,"WindowMessage",8185],[6,"WindowSystemEvent",8185],[5,"AtomicWindowHandle",8185],[5,"AnimatedProp",8185],[6,"BitmapRef",8645],[5,"Arch",32],[5,"InterruptDescriptorTable",45],[5,"PageManager",948],[5,"Pci",2439],[5,"UsbHidReportDescriptor",2699],[5,"UsbManager",2699],[5,"UsbAudioDriver",3856],[5,"UsbHidDriver",3874],[5,"UsbHubCommon",3895],[5,"UsbMsdDriver",4247],[5,"XInputDriver",4266],[5,"FileManager",5399],[5,"DevFs",5624],[5,"SmBiosEntryV1",5709],[10,"HalTrait",5806],[5,"AudioManager",5951],[5,"PulseWaveOscillator",5951],[5,"SineWaveOscillator",5951],[5,"SawtoothWaveOscillator",5951],[5,"TriangleWaveOscillator",5951],[5,"NoteOnParams",5951],[5,"HidManager",6127],[5,"GameInputManager",6127],[5,"ImageLoader",6447],[8,"TtyReadResult",6519],[5,"EventManager",6565],[5,"IconManager",6843],[5,"RuntimeEnvironment",6853],[5,"System",7511],[5,"Scheduler",7658],[5,"FontManager",7905],[5,"TextProcessing",8021],[5,"WindowManager",8185],[5,"UserEnv",8606]],"b":[[398,"impl-DefaultSize"],[399,"impl-AsDescriptorEntry-for-DefaultSize"],[1038,"impl-From%3Cu64%3E-for-PageAttribute"],[1040,"impl-From%3CMProtect%3E-for-PageAttribute"],[5468,"impl-Display-for-INodeType"],[5469,"impl-Debug-for-INodeType"],[5477,"impl-From%3CMinorDevNo%3E-for-INodeType"],[5478,"impl-From%3CMajorDevNo%3E-for-INodeType"],[5654,"impl-Default-for-DeviceCharacteristics"],[5655,"impl-DeviceCharacteristics"],[5820,"impl-Add%3Cusize%3E-for-PhysicalAddress"],[5821,"impl-Add%3Cu64%3E-for-PhysicalAddress"],[5865,"impl-Debug-for-PhysicalAddress"],[5866,"impl-LowerHex-for-PhysicalAddress"],[5875,"impl-From%3Cu64%3E-for-PhysicalAddress"],[5876,"impl-From%3CNonNullPhysicalAddress%3E-for-PhysicalAddress"],[5895,"impl-Mul%3Cusize%3E-for-PhysicalAddress"],[5896,"impl-Mul%3Cu64%3E-for-PhysicalAddress"],[5916,"impl-Sub%3Cusize%3E-for-PhysicalAddress"],[5917,"impl-Sub-for-PhysicalAddress"],[7562,"impl-Debug-for-Version%3C\'a%3E"],[7563,"impl-Display-for-Version%3C\'_%3E"]]},\
"meggl":{"doc":"MEG-OS Standard Graphics Drawing Library","t":"PPFFFPPPPPPTTTTTTTTTTTTGFFFFFGFFFFFKKTTTTTPGPPPPPPPPPPPPPPPPFFGRKFPTTTTPFKKKFTTTTKPPPPFGFTKTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGFKTFPFGFFFFFTTTTTTTTFKFKTTTTFFPFPKFGKFTKPIPTTTTTTTPPTTTTKPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNMNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMNNNNNNNNNNMNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOONNNNNNOONNNNNNNNMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNOOMNNN","n":["ABGR","ARGB","ARGB8888","AllPixels","Alpha8","Argb32","Argb32","Argb32","Argb32","BGRA","BGRX","BLACK","BLACK","BLACK","BLACK","BLUE","BLUE","BLUE","BLUE","BROWN","BROWN","BROWN","BROWN","BitmapRef","BitmapRef1","BitmapRef16","BitmapRef32","BitmapRef4","BitmapRef8","BitmapRefMut","BitmapRefMut1","BitmapRefMut16","BitmapRefMut32","BitmapRefMut4","BitmapRefMut8","Blt","BltConvert","COLOR_PALETTE","CYAN","CYAN","CYAN","CYAN","ClockWise","Color","Color0000","Color0001","Color0010","Color0011","Color0100","Color0101","Color0110","Color0111","Color1000","Color1001","Color1010","Color1011","Color1100","Color1101","Color1110","Color1111","ColorComponents","ColorComponentsRGBA","ColorFormat","ColorType","Contains","Coordinates","CounterClockWise","DARK_GRAY","DARK_GRAY","DARK_GRAY","DARK_GRAY","Default","Distance2","DrawGlyph","DrawRect","Drawable","EdgeInsets","GREEN","GREEN","GREEN","GREEN","GetPixel","Indexed","Indexed","Indexed","Indexed","IndexedColor","IndexedColor4","IndexedColorPair44","KEY_COLOR","KeyColor","LIGHT_BLUE","LIGHT_BLUE","LIGHT_BLUE","LIGHT_BLUE","LIGHT_CYAN","LIGHT_CYAN","LIGHT_CYAN","LIGHT_CYAN","LIGHT_GRAY","LIGHT_GRAY","LIGHT_GRAY","LIGHT_GRAY","LIGHT_GREEN","LIGHT_GREEN","LIGHT_GREEN","LIGHT_GREEN","LIGHT_MAGENTA","LIGHT_MAGENTA","LIGHT_MAGENTA","LIGHT_MAGENTA","LIGHT_RED","LIGHT_RED","LIGHT_RED","LIGHT_RED","MAGENTA","MAGENTA","MAGENTA","MAGENTA","MAX","MIN","Monochrome","Movement","MutableRasterImage","OPAQUE","Octet","One","OperationalBitmap","OwnedBitmap","OwnedBitmap1","OwnedBitmap16","OwnedBitmap32","OwnedBitmap4","OwnedBitmap8","PRIMARY_BLACK","PRIMARY_BLUE","PRIMARY_CYAN","PRIMARY_GREEN","PRIMARY_MAGENTA","PRIMARY_RED","PRIMARY_WHITE","PRIMARY_YELLOW","PackedColor","PixelColor","Point","PrimaryColor","RED","RED","RED","RED","RGB555","RGB565","RGBA","RGBA8888","RGBX","RasterImage","Rect","Rotation","SetPixel","Size","TRANSPARENT","Translucent","Transparent","TrueColor","UpsideDown","VOID","VOID","WHITE","WHITE","WHITE","WHITE","WHITE","XBGR","XRGB","YELLOW","YELLOW","YELLOW","YELLOW","Zero","Zero","a","a","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","all_pixels","all_pixels","argb","as_argb","as_color","as_const","as_const","as_const","as_const","as_const","as_const","as_const","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_rgb","as_true_color","as_true_color","as_true_color","as_u8","b","b","blend_draw","blend_rect","blending","blending","blt","blt","blt","blt","blt","blt","blt","blt32","blt8","blt_blend","blt_convert","blt_convert","blt_convert_opt","blt_convert_opt","blt_cw","blt_from","blt_shadow","blt_to","blt_transparent","blt_transparent","blt_with_key","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bounds","bounds","bounds","bounds","brightness","brightness","brightness","center","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_mut","clone_mut","clone_mut","clone_mut","clone_mut","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color_mode","components","components","components","components","contains","contains","contains","copy","copy","copy","copy","copy_from","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","distance2","distance2","div","div","div_assign","div_assign","draw_circle","draw_circle","draw_glyph","draw_glyph","draw_glyph","draw_glyph_cw","draw_glyph_cw","draw_glyph_cw","draw_hline","draw_hline","draw_hline","draw_hline","draw_hline","draw_line","draw_line","draw_line","draw_line_anti_aliasing_f","draw_line_anti_aliasing_i","draw_rect","draw_rect","draw_round_rect","draw_round_rect","draw_to","draw_vline","draw_vline","draw_vline","draw_vline","draw_vline","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fill","fill_circle","fill_circle","fill_rect","fill_rect","fill_rect","fill_rect","fill_rect","fill_round_rect","fill_round_rect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_argb","from_argb","from_argb","from_array","from_bool","from_boxed_slice","from_boxed_slice","from_boxed_slice","from_boxed_slice","from_boxed_slice","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_rgb","from_bytes_rgba","from_color","from_components","from_components","from_coordinates","from_diagonal","from_diagonal","from_f32","from_f64","from_gray","from_gray","from_indexed","from_pair","from_pixels","from_rect","from_rect_unchecked","from_rgb","from_rgb","from_rgb","from_rgb","from_rgb","from_rgba","from_rgba","from_safe_rgb","from_scalar","from_size","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_static","from_static","from_static","from_static","from_static","from_true_color","from_true_color","from_true_color","from_true_color","from_u8","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec_rgba","g","g","get","get_pixel","get_pixel","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","get_pixel_unchecked","height","height","height","height","height","insets_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_array","into_bitmap","into_bool","into_const","into_const","into_const","into_const","into_const","into_f32","into_f64","into_indexed","into_indexed","into_iter","into_pair","into_rgba","into_true_color","into_true_color","into_true_color","into_u8","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_transparent","is_valid","is_zero","is_zero","is_zero","is_zero","iter","left","left","left_bottom","left_top","lhs","line_to","map_argb32","map_indexed","max_x","max_y","merge","merged","mid_x","mid_y","min_x","min_y","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","opacity","opacity","origin","origin","overlaps","padding_each","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","process_pixel_unchecked","process_pixel_unchecked","r","r","replace","replace_lhs","replace_rhs","reset","rgb","rhs","right","right","right_bottom","right_top","same_format","saturating_add","saturating_sub","set","set_pixel","set_pixel","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_pixel_unchecked","set_zero","set_zero","shadowed","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride","stride_for","stride_for","stride_for","stride_for","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","succ","swap","swap","swap","swapped","swapped","swapped","to_operational","to_operational","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","trim","trimmed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view","void","void","width","width","width","width","width","with_opacity","x","x","x","x","y","y","y","y","zero","zero","zero","zero"],"q":[[0,"meggl"],[1233,"core::ops::function"],[1234,"core::ops::function"],[1235,"core::cmp"],[1236,"core::convert"],[1237,"core::fmt"],[1238,"core::fmt"],[1239,"core::marker"],[1240,"core::result"],[1241,"core::num::nonzero"],[1242,"alloc::vec"],[1243,"core::iter::traits::iterator"],[1244,"core::ops::function"]],"d":["","","32bit TrueColor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","90 degree","A type that represents a generic color.","","","","","","","","","","","","","","","","","","Color components (R8 G8 B8 A8)","","","","","270 degree","","","","","0 degree","Type of Squared Distance","","","","","","","","","","","","","","","4bit indexed color","Pair of 4bit indexed color (44)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A special bitmap type that can be used for operations such …","","","","","","","RGB (0, 0, 0)","RGB (0, 0, 1)","RGB (0, 1, 1)","RGB (0, 1, 0)","RGB (1, 0, 1)","RGB (1, 0, 0)","RGB (1, 1, 1)","RGB (1, 1, 0)","A color type that packed into 32 bits","Common color trait","","","","","","","15bit High Color (RGB 555)","16bit High Color (RGB 565)","","32bit Color (RGBA 8888)","","","","","","","","","","","180 degree","","","","","","","","","","","","","","Defines an additive identity element for <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that enumerates all pixels of the …","Returns an iterator that enumerates all pixels of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like box linear filterraws a straight line at high speed using Bresenham’s …","Draws an anti-aliased line using Xiaolin Wu’s algorithm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Safety","Safety","Safety","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This value is used to calculate the address of a raster …","This value is used to calculate the address of a raster …eturns a subset of the specified range of bitmaps. The …","","","","","","","","","","","","","","","","","","","","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","",""],"i":[85,85,0,0,0,18,20,19,17,85,85,15,13,17,16,15,13,17,16,15,13,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,13,17,16,61,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,43,0,0,61,15,13,17,16,61,0,0,0,0,0,15,13,17,16,0,18,20,19,17,0,0,0,86,0,15,13,17,16,15,13,17,16,15,13,17,16,15,13,17,16,15,13,17,16,15,13,17,16,15,13,17,16,15,15,0,0,0,1,0,59,0,0,0,0,0,0,0,87,87,87,87,87,87,87,87,0,0,0,0,15,13,17,16,0,0,85,0,85,0,0,0,0,0,78,0,17,0,61,8,9,15,13,55,17,16,85,85,15,13,17,16,0,59,41,56,1,1,3,3,4,6,6,8,8,8,9,7,1,1,3,3,4,6,6,8,8,8,9,7,11,11,13,15,16,18,20,21,23,25,27,29,18,20,21,31,23,32,25,33,27,34,29,35,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,15,15,36,37,38,41,56,13,25,13,41,42,18,18,18,21,23,25,21,25,25,45,45,45,45,25,51,51,51,18,25,21,51,18,20,51,85,12,22,21,21,31,31,31,24,23,23,32,32,32,26,25,25,33,33,33,19,28,27,27,34,34,34,30,29,29,35,35,35,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,18,20,51,85,12,22,21,31,31,24,23,32,32,26,25,33,33,19,28,27,34,34,30,29,35,35,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,9,7,43,43,6,8,15,13,17,8,54,54,22,24,26,19,28,30,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,19,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,21,23,25,27,29,15,1,36,37,57,59,60,61,18,13,55,36,37,63,8,8,18,21,23,25,27,15,1,13,55,17,16,36,37,57,59,38,3,4,6,8,9,7,61,3,4,6,6,6,6,54,54,66,66,18,66,66,18,54,18,21,23,25,54,54,51,51,51,54,54,54,54,51,54,18,21,23,25,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,51,54,54,54,18,21,23,25,54,54,15,1,13,55,17,16,57,59,38,3,4,60,6,8,9,7,61,18,18,18,20,20,20,51,85,12,22,21,31,24,23,32,26,25,33,19,19,19,19,19,28,27,34,30,29,35,15,15,15,15,1,1,1,1,13,13,13,13,13,13,13,41,41,41,55,55,55,56,56,56,56,56,17,17,17,17,17,17,16,16,16,16,36,36,36,37,37,37,57,57,58,59,59,59,38,3,3,4,4,60,60,6,8,8,8,8,9,9,7,61,61,13,17,16,38,59,31,32,33,34,35,22,21,24,23,26,25,28,27,30,29,33,33,16,36,37,8,8,9,1,1,13,55,16,58,51,9,9,15,13,41,56,17,41,56,16,60,9,51,22,21,24,23,26,25,28,27,30,29,21,23,25,27,29,41,16,36,37,57,51,31,32,33,34,35,33,41,56,38,11,11,11,18,51,22,21,31,24,23,32,26,25,33,19,28,27,30,43,43,6,8,6,8,18,20,51,85,12,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,15,1,13,41,41,55,56,17,17,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,38,20,59,21,23,25,27,29,1,1,17,16,12,58,56,41,17,16,57,78,1,1,13,13,41,55,56,17,16,78,1,1,13,13,41,55,56,17,16,9,79,4,6,7,38,9,7,9,9,58,3,18,18,8,8,9,9,8,8,8,8,6,6,6,8,8,6,6,6,8,8,20,51,12,31,32,33,59,38,3,4,6,8,9,7,12,13,55,8,8,8,7,15,1,36,37,57,59,60,61,83,83,41,56,58,58,58,51,13,58,9,7,9,9,20,1,1,38,52,52,52,18,51,21,31,23,32,25,33,27,79,79,13,43,18,20,51,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,8,9,8,48,51,22,21,31,24,23,32,26,25,33,30,29,83,51,21,31,23,32,25,33,29,51,48,48,22,21,31,24,23,32,26,25,33,28,27,30,29,46,46,57,59,1,1,3,3,3,4,6,6,8,8,8,7,1,1,3,3,4,6,6,8,8,8,7,61,3,4,6,3,4,6,11,11,21,23,25,19,27,29,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,9,7,9,9,18,20,51,85,12,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,9,7,61,18,20,51,85,12,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,18,20,51,85,12,22,21,31,24,23,32,26,25,33,19,28,27,34,30,29,35,15,1,13,41,55,56,17,16,36,37,57,58,59,38,3,4,60,6,8,9,7,61,18,21,23,25,8,9,43,43,6,8,6,13,3,4,3,4,3,4,3,4,79,4,6,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],-1,[]],[[1,1],-1,[]],[[3,4],-1,[]],[[3,5],3],[[4,4],4],[[6,7],6],[[6,6],6],[[8,7],-1,[]],[[8,4],-1,[]],[[8,6],-1,[]],[[9,9],-1,[]],[[7,7],7],[[1,1],10],[[1,2],10],[[3,5],10],[[3,4],10],[[4,4],10],[[6,7],10],[[6,6],10],[[8,6],10],[[8,7],10],[[8,4],10],[[9,9],10],[[7,7],10],[11,[[12,[11]]]],[11,[[12,[11]]]],[13,14],[15,14],[16,17],[18,19],[20,19],[21,22],[23,24],[25,26],[27,28],[29,30],[18,18],[20,18],[21,21],[31,21],[23,23],[32,23],[25,25],[33,25],[27,27],[34,27],[29,29],[35,29],[22,22],[21,22],[31,22],[24,24],[23,24],[32,24],[26,26],[25,26],[33,26],[19,19],[28,28],[27,28],[34,28],[30,30],[29,30],[35,30],[15,14],[15,13],[36,13],[37,13],[38,2],0,0,[[13,13],13],[[25,8,13],10],[[13,13,-1,-2],13,[[40,[2,2],[[39,[2]]]]],[[40,[1,1],[[39,[1]]]]]],[[41,41,-1,-2],41,[[40,[2,2],[[39,[2]]]]],[[40,[1,1],[[39,[1]]]]]],[[42,-1,3,8],10,43],[[18,19,3,8],10],[[18,26,3,8],10],[[18,22,3,8],10],[[21,22,3,8],10],[[23,24,3,8],10],[[25,26,3,8],10],[[21,26,3,8],10],[[25,22,3,8,[44,[14]]],10],[[25,26,3,8,1],10],[[45,-2,3,8,-4],10,46,[[48,[],[[47,[-1]]]]],[],[[49,[-1],[[39,[-3]]]]]],[[45,-2,3,8,-4],10,46,[[48,[],[[47,[-1]]]]],[],[[49,[-1],[[39,[-3]]]]]],[[45,-2,3,8,-4],10,46,[[48,[],[[47,[-1]]]]],[],[[49,[-1],[[39,[[50,[-3]]]]]]]],[[45,-2,3,8,-4],10,46,[[48,[],[[47,[-1]]]]],[],[[49,[-1],[[39,[[50,[-3]]]]]]]],[[25,26,3,8],10],[[51,-1,3,8,-2],10,11,[[49,[2],[[39,[2]]]]]],[[51,25,3,8],10],[[51,-1,3,8,-2],10,[43,11,52],[[49,[2],[[39,[]]]]]],[[18,19,3,8,15],10],[[25,19,3,8,15],10],[[21,22,3,8,-1],10,[]],[[51,5,53],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,22],[-1,-2,[],[]],[31,22],[31,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,24],[32,24],[-1,-2,[],[]],[32,23],[-1,-2,[],[]],[-1,-2,[],[]],[25,26],[33,26],[-1,-2,[],[]],[33,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,28],[34,28],[-1,-2,[],[]],[34,27],[-1,-2,[],[]],[-1,-2,[],[]],[29,30],[35,30],[35,29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[43,[],[[47,[-1]]]]],8,[]],[[[43,[],[[47,[-1]]]]],8,[]],[6,8],[8,8],[15,[[50,[2]]]],[13,[[50,[2]]]],[17,[[50,[2]]]],[8,3],[54,10],[54,10],[22,22],[24,24],[26,26],[19,19],[28,28],[30,30],[15,15],[1,1],[13,13],[41,41],[55,55],[56,56],[17,17],[16,16],[36,36],[37,37],[57,57],[58,58],[59,59],[38,38],[3,3],[4,4],[60,60],[6,6],[8,8],[9,9],[7,7],[61,61],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[21,21],[23,23],[25,25],[27,27],[29,29],[[15,15],62],[[1,1],62],[[36,36],62],[[37,37],62],[[57,57],62],[[59,59],62],[[60,60],62],[[61,61],62],[18,53],[13,41],[55,56],[36,[[10,[2,2,2]]]],[37,[[10,[2,2,2]]]],[[63,-1],64,[]],[[8,8],64],[[8,3],64],[[18,3,8],10],[[21,3,8],10],[[23,3,8],10],[[25,3,8],10],[[27,-1],10,[[65,[28]]]],[[],15],[[],1],[[],13],[[],55],[[],17],[[],16],[[],36],[[],37],[[],57],[[],59],[[],38],[[],3],[[],4],[[],6],[[],8],[[],9],[[],7],[[],61],[[3,3],60],[4,60],[[6,5],-1,[]],[[6,53],-1,[]],[[6,53],10],[[6,5],10],[[54,3,5,-1],10,[]],[[54,3,5,-1],10,[]],[[66,[67,[2]],6,3,-1],10,[]],[[66,[67,[2]],6,3,-1],10,[]],[[18,[67,[2]],6,3,-1],10,[]],[[66,[67,[2]],6,3,-1],10,[]],[[66,[67,[2]],6,3,-1],10,[]],[[18,[67,[2]],6,3,-1],10,[]],[[54,3,5,-1],10,[]],[[18,3,5,-1],10,[]],[[21,3,5,-1],10,[]],[[23,3,5,-1],10,[]],[[25,3,5,-1],10,[]],[[54,3,3,-1],10,[]],[[54,3,3,-1],10,[]],[[51,3,3,-1],10,[[49,[51,3]]]],[[51,3,3,-1],10,[[49,[51,3,68]]]],[[51,3,3,5,-1],10,[[49,[51,3,2]]]],[[54,8,-1],10,[]],[[54,8,-1],10,[]],[[54,8,5,-1],10,[]],[[54,8,5,-1],10,[]],[[51,18,3,8,17],10],[[54,3,5,-1],10,[]],[[18,3,5,-1],10,[]],[[21,3,5,-1],10,[]],[[23,3,5,-1],10,[]],[[25,3,5,-1],10,[]],[[15,15],64],[[1,1],64],[[13,13],64],[[41,41],64],[[55,55],64],[[56,56],64],[[17,17],64],[[16,16],64],[[36,36],64],[[37,37],64],[[57,57],64],[[58,58],64],[[59,59],64],[[38,38],64],[[3,3],64],[[4,4],64],[[60,60],64],[[6,6],64],[[8,8],64],[[9,9],64],[[7,7],64],[[61,61],64],[[51,2],10],[[54,3,5,-1],10,[]],[[54,3,5,-1],10,[]],[[54,8,-1],10,[]],[[18,8,-1],10,[]],[[21,8,-1],10,[]],[[23,8,-1],10,[]],[[25,8,-1],10,[]],[[54,8,5,-1],10,[]],[[54,8,5,-1],10,[]],[[15,69],70],[[1,69],70],[[13,69],70],[[55,69],70],[[17,69],70],[[16,69],70],[[57,69],70],[[59,69],70],[[38,69],70],[[3,69],70],[[4,69],70],[[60,69],70],[[6,69],70],[[8,69],70],[[9,69],70],[[7,69],70],[[61,69],70],[-1,-1,[]],[21,18],[25,18],[-1,-1,[]],[33,20],[31,20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,19],[26,19],[25,19],[22,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,15],[57,15],[-1,-1,[]],[13,15],[71,1],[-1,-1,[]],[2,1],[68,1],[37,13],[55,13],[14,13],[-1,-1,[]],[41,13],[15,13],[36,13],[56,41],[13,41],[-1,-1,[]],[13,55],[56,55],[-1,-1,[]],[41,56],[-1,-1,[]],[55,56],[[[44,[2]]],56],[[[44,[2]]],56],[13,17],[15,17],[36,17],[-1,-1,[]],[16,17],[37,17],[-1,-1,[]],[15,16],[17,16],[13,16],[-1,-1,[]],[17,36],[13,36],[17,37],[-1,-1,[]],[13,37],[-1,-1,[]],[15,57],[-1,-1,[]],[-1,-1,[]],[64,59],[2,59],[-1,-1,[]],[4,3],[-1,-1,[]],[3,4],[-1,-1,[]],[4,60],[-1,-1,[]],[-1,-1,[]],[6,8],[9,8],[[[10,[3,6]]],8],[-1,-1,[]],[6,9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[53,61],[14,13],[14,17],[14,16],[[[67,[59]]],38],[64,59],[[[72,[[67,[15]]]],6],31],[[[72,[[67,[37]]]],6],32],[[[72,[[67,[13]]]],6],33],[[[72,[[67,[38]]]],6],34],[[[72,[[67,[58]]]],6],35],[[[67,[2]],6],22],[[[67,[2]],6],21],[[[67,[73]],6],24],[[[67,[73]],6],23],[[[67,[14]],6],26],[[[67,[14]],6],25],[[[67,[2]],6],28],[[[67,[2]],6],27],[[[67,[2]],6],30],[[[67,[2]],6],29],[[[67,[2]],6],[[50,[33]]]],[[[67,[2]],6],[[50,[33]]]],[17,16],[[2,2,2],36],[[2,2,2],37],[9,8],[[3,3],8],[[3,3],9],[71,1],[68,1],[[2,1],13],[[2,1],55],[15,16],[[[10,[57,57]]],58],[[-1,-2],51,[11,74],[[49,[],[[39,[2]]]]]],[8,[[75,[9,10]]]],[8,9],[14,15],[14,13],[[2,2,2],41],[[2,2,2],56],[14,17],[[2,2,2,1],41],[[2,2,2,1],56],[14,16],[5,60],[6,9],[[[67,[2]],6],51],[[[67,[15]],6,[50,[76]]],22],[[[67,[15]],6,[50,[76]]],21],[[[67,[37]],6,[50,[76]]],24],[[[67,[37]],6,[50,[76]]],23],[[[67,[13]],6,[50,[76]]],26],[[[67,[13]],6,[50,[76]]],25],[[[67,[38]],6,[50,[76]]],28],[[[67,[38]],6,[50,[76]]],27],[[[67,[58]],6,[50,[76]]],30],[[[67,[58]],6,[50,[76]]],29],[[15,6,53],21],[[37,6,53],23],[[13,6,53],25],[[38,6,53],27],[[58,6,53],29],[13,41],[13,16],[13,36],[13,37],[2,57],[[[77,[2]],6],51],[[[77,[15]],6],31],[[[77,[37]],6],32],[[[77,[13]],6],33],[[[77,[38]],6],34],[[[77,[58]],6],35],[[[77,[2]],6],33],0,0,[[38,53],59],[[11,3],[[50,[-1]]],[]],[[11,3],[[50,[-1]]],[]],[[11,3],-1,[]],[[18,3],-1,[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[-1,3],[],[]],[[19,3],-1,[]],[[28,3],-1,[]],[[27,3],-1,[]],[[30,3],-1,[]],[[[43,[],[[47,[-1]]]]],53,[]],[[[43,[],[[47,[-1]]]]],53,[]],[6,5],[8,5],0,[[8,7],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,15],[17,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[44,[59]]]],[20,18],[59,64],[21,22],[23,24],[25,26],[27,28],[29,30],[1,71],[1,68],[17,15],[16,15],[-1,-2,[],[]],[58,[[10,[57,57]]]],[56,55],[41,13],[17,13],[16,13],[57,2],[78,64],[1,64],[1,64],[13,64],[13,64],[41,64],[55,64],[56,64],[17,64],[16,64],[78,64],[1,64],[1,64],[13,64],[13,64],[41,64],[55,64],[56,64],[17,64],[16,64],[9,64],[79,64],[4,64],[6,64],[7,64],[38,[[0,[[81,[],[[80,[59]]]]]]]],0,0,[9,3],[9,3],[58,57],[[3,3,-1],10,[[49,[3]]]],[[18,-2],[[50,[-1]]],[],[[82,[25],[[39,[-1]]]]]],[[18,-2],[[50,[-1]]],[],[[82,[21],[[39,[-1]]]]]],[8,5],[8,5],[[9,9],10],[[9,9],9],[8,5],[8,5],[8,5],[8,5],[[6,6],-1,[]],[[6,53],-1,[]],[[6,5],-1,[]],[[8,5],-1,[]],[[8,53],-1,[]],[[6,6],10],[[6,5],10],[[6,53],10],[[8,53],10],[[8,5],10],[[-1,6,17],20,[[65,[19]]]],[6,51],[-1,[[12,[-1]]],[11,74]],[[6,-1],31,[]],[[6,-1],32,[]],[[6,-1],33,[]],[2,59],[2,38],[[5,5],3],[[5,5],4],[[5,5],6],[[5,5,5,5],8],[[5,5,5,5],9],[[5,5,5,5],7],[[[12,[-1]]],[[50,[-2]]],[11,74],[]],[13,1],[55,1],[8,3],0,[[8,8],64],[5,7],[[15,15],[[50,[62]]]],[[1,1],[[50,[62]]]],[[36,36],[[50,[62]]]],[[37,37],[[50,[62]]]],[[57,57],[[50,[62]]]],[[59,59],[[50,[62]]]],[[60,60],[[50,[62]]]],[[61,61],[[50,[62]]]],[[83,3,-2],10,[],[[82,[-1],[[39,[-1]]]]]],[[83,3,-2],10,[],[[82,[-1],[[39,[-1]]]]]],0,0,[[58,-1],10,[[82,[[10,[57,57]]],[[39,[[10,[57,57]]]]]]]],[[58,57],10],[[58,57],10],[51,10],[13,14],[58,57],0,0,[9,3],[9,3],[[20,6,17],20],[[1,1],1],[[1,1],1],[[38,53,59],10],[[52,3,-1],10,[]],[[52,3,-1],10,[]],[[52,3,-1],10,[]],[[18,3,-1],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[-1,3],10,[]],[[27,3,-1],10,[]],[79,10],[79,10],[[13,2],13],[[[43,[],[[47,[-1]]]]],6,[]],[18,6],[20,6],[51,6],[22,6],[21,6],[31,6],[24,6],[23,6],[32,6],[26,6],[25,6],[33,6],[19,6],[28,6],[27,6],[34,6],[30,6],[29,6],[35,6],[8,6],[9,6],0,[48,[[67,[-1]]],[]],[51,[[67,[-1]]],[]],[22,[[67,[-1]]],[]],[21,[[67,[-1]]],[]],[31,[[67,[-1]]],[]],[24,[[67,[-1]]],[]],[23,[[67,[-1]]],[]],[32,[[67,[-1]]],[]],[26,[[67,[-1]]],[]],[25,[[67,[-1]]],[]],[33,[[67,[-1]]],[]],[30,[[67,[58]]]],[29,[[67,[58]]]],[83,[[67,[-1]]],[]],[51,[[67,[-1]]],[]],[21,[[67,[-1]]],[]],[31,[[67,[-1]]],[]],[23,[[67,[-1]]],[]],[32,[[67,[-1]]],[]],[25,[[67,[-1]]],[]],[33,[[67,[-1]]],[]],[29,[[67,[58]]]],[51,53],[48,53],[48,53],[22,53],[21,53],[31,53],[24,53],[23,53],[32,53],[26,53],[25,53],[33,53],[28,53],[27,53],[30,53],[29,53],[5,53],[5,53],[5,53],[5,53],[[1,1],-1,[]],[[1,2],-1,[]],[[3,4],-1,[]],[[3,5],3],[[3,3],4],[[4,4],4],[[6,6],6],[[6,7],6],[[8,4],-1,[]],[[8,6],-1,[]],[[8,7],-1,[]],[[7,7],7],[[1,2],10],[[1,1],10],[[3,5],10],[[3,4],10],[[4,4],10],[[6,7],10],[[6,6],10],[[8,4],10],[[8,6],10],[[8,7],10],[[7,7],10],[61,61],[3,10],[4,10],[6,10],[3,3],[4,4],[6,6],[[11,-2],51,[],[[49,[-1],[[39,[2]]]]]],[[11,-2],51,[],[[49,[-1],[[39,[2]]]]]],[21,-1,[]],[23,-1,[]],[25,-1,[]],[-1,-2,[],[]],[27,-1,[]],[29,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[9,9],10],[[9,9],9],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[8,[[75,[9,-1]]],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[-1,84,[]],[[18,8],[[50,[18]]]],[[21,8],[[50,[21]]]],[[23,8],[[50,[23]]]],[[25,8],[[50,[25]]]],[[],8],[[],9],[[[43,[],[[47,[-1]]]]],53,[]],[[[43,[],[[47,[-1]]]]],53,[]],[6,5],[8,5],0,[[13,1],13],[3,5],[4,5],0,0,[3,5],[4,5],0,0,[[],79],[[],4],[[],6],[[],7]],"c":[515],"p":[[5,"Alpha8",0],[1,"u8"],[5,"Point",0],[5,"Movement",0],[1,"isize"],[5,"Size",0],[5,"EdgeInsets",0],[5,"Rect",0],[5,"Coordinates",0],[1,"tuple"],[10,"GetPixel",0],[5,"AllPixels",0],[5,"ARGB8888",0],[1,"u32"],[5,"IndexedColor",0],[5,"PackedColor",0],[6,"Color",0],[6,"BitmapRefMut",0],[6,"BitmapRef",0],[6,"OwnedBitmap",0],[5,"BitmapRefMut8",0],[5,"BitmapRef8",0],[5,"BitmapRefMut16",0],[5,"BitmapRef16",0],[5,"BitmapRefMut32",0],[5,"BitmapRef32",0],[5,"BitmapRefMut1",0],[5,"BitmapRef1",0],[5,"BitmapRefMut4",0],[5,"BitmapRef4",0],[5,"OwnedBitmap8",0],[5,"OwnedBitmap16",0],[5,"OwnedBitmap32",0],[5,"OwnedBitmap1",0],[5,"OwnedBitmap4",0],[5,"RGB555",0],[5,"RGB565",0],[5,"Octet",0],[17,"Output"],[10,"Fn",1233],[5,"ColorComponents",0],[10,"Blt",0],[10,"Drawable",0],[1,"array"],[10,"BltConvert",0],[10,"PixelColor",0],[17,"ColorType"],[10,"RasterImage",0],[10,"FnMut",1233],[6,"Option",1234],[5,"OperationalBitmap",0],[10,"SetPixel",0],[1,"usize"],[10,"DrawRect",0],[5,"RGBA8888",0],[5,"ColorComponentsRGBA",0],[6,"IndexedColor4",0],[5,"IndexedColorPair44",0],[6,"Monochrome",0],[5,"Distance2",0],[6,"Rotation",0],[6,"Ordering",1235],[10,"Contains",0],[1,"bool"],[10,"AsRef",1236],[10,"DrawGlyph",0],[1,"slice"],[1,"f64"],[5,"Formatter",1237],[8,"Result",1237],[1,"f32"],[5,"Box",1238],[1,"u16"],[10,"Sized",1239],[6,"Result",1240],[5,"NonZeroUsize",1241],[5,"Vec",1242],[10,"Translucent",0],[10,"Zero",0],[17,"Item"],[10,"Iterator",1243],[10,"FnOnce",1233],[10,"MutableRasterImage",0],[5,"TypeId",1244],[6,"ColorFormat",0],[10,"KeyColor",0],[10,"PrimaryColor",0]],"b":[[182,"impl-Add%3Cu8%3E-for-Alpha8"],[183,"impl-Add-for-Alpha8"],[184,"impl-Add%3CMovement%3E-for-Point"],[185,"impl-Add%3Cisize%3E-for-Point"],[187,"impl-Add%3CEdgeInsets%3E-for-Size"],[188,"impl-Add-for-Size"],[189,"impl-Add%3CEdgeInsets%3E-for-Rect"],[190,"impl-Add%3CMovement%3E-for-Rect"],[191,"impl-Add%3CSize%3E-for-Rect"],[194,"impl-AddAssign-for-Alpha8"],[195,"impl-AddAssign%3Cu8%3E-for-Alpha8"],[196,"impl-AddAssign%3Cisize%3E-for-Point"],[197,"impl-AddAssign%3CMovement%3E-for-Point"],[199,"impl-AddAssign%3CEdgeInsets%3E-for-Size"],[200,"impl-AddAssign-for-Size"],[201,"impl-AddAssign%3CSize%3E-for-Rect"],[202,"impl-AddAssign%3CEdgeInsets%3E-for-Rect"],[203,"impl-AddAssign%3CMovement%3E-for-Rect"],[258,"impl-Blt%3CBitmapRef%3C\'b%3E%3E-for-BitmapRefMut%3C\'a%3E"],[259,"impl-Blt%3CBitmapRef32%3C\'b%3E%3E-for-BitmapRefMut%3C\'a%3E"],[260,"impl-Blt%3CBitmapRef8%3C\'b%3E%3E-for-BitmapRefMut%3C\'a%3E"],[287,"impl-Borrow%3CBitmapRef8%3C\'a%3E%3E-for-OwnedBitmap8"],[288,"impl-Borrow%3CBitmapRefMut8%3C\'a%3E%3E-for-OwnedBitmap8"],[293,"impl-Borrow%3CBitmapRef16%3C\'a%3E%3E-for-OwnedBitmap16"],[295,"impl-Borrow%3CBitmapRefMut16%3C\'a%3E%3E-for-OwnedBitmap16"],[299,"impl-Borrow%3CBitmapRef32%3C\'a%3E%3E-for-OwnedBitmap32"],[301,"impl-Borrow%3CBitmapRefMut32%3C\'a%3E%3E-for-OwnedBitmap32"],[306,"impl-Borrow%3CBitmapRef1%3C\'a%3E%3E-for-OwnedBitmap1"],[308,"impl-Borrow%3CBitmapRefMut1%3C\'a%3E%3E-for-OwnedBitmap1"],[312,"impl-Borrow%3CBitmapRef4%3C\'a%3E%3E-for-OwnedBitmap4"],[313,"impl-Borrow%3CBitmapRefMut4%3C\'a%3E%3E-for-OwnedBitmap4"],[467,"impl-Contains%3CRect%3E-for-Rect"],[468,"impl-Contains%3CPoint%3E-for-Rect"],[494,"impl-Div%3Cisize%3E-for-Size"],[495,"impl-Div%3Cusize%3E-for-Size"],[496,"impl-DivAssign%3Cusize%3E-for-Size"],[497,"impl-DivAssign%3Cisize%3E-for-Size"],[576,"impl-From%3CBitmapRefMut8%3C\'a%3E%3E-for-BitmapRefMut%3C\'a%3E"],[577,"impl-From%3CBitmapRefMut32%3C\'a%3E%3E-for-BitmapRefMut%3C\'a%3E"],[579,"impl-From%3COwnedBitmap32%3E-for-OwnedBitmap"],[580,"impl-From%3COwnedBitmap8%3E-for-OwnedBitmap"],[593,"impl-From%3C%26BitmapRefMut8%3C\'a%3E%3E-for-BitmapRef%3C\'a%3E"],[594,"impl-From%3C%26BitmapRef32%3C\'a%3E%3E-for-BitmapRef%3C\'a%3E"],[595,"impl-From%3C%26BitmapRefMut32%3C\'a%3E%3E-for-BitmapRef%3C\'a%3E"],[596,"impl-From%3C%26BitmapRef8%3C\'a%3E%3E-for-BitmapRef%3C\'a%3E"],[604,"impl-From%3Cu8%3E-for-IndexedColor"],[605,"impl-From%3CIndexedColor4%3E-for-IndexedColor"],[607,"impl-From%3CARGB8888%3E-for-IndexedColor"],[608,"impl-From%3Cf32%3E-for-Alpha8"],[610,"impl-From%3Cu8%3E-for-Alpha8"],[611,"impl-From%3Cf64%3E-for-Alpha8"],[612,"impl-From%3CRGB565%3E-for-ARGB8888"],[613,"impl-From%3CRGBA8888%3E-for-ARGB8888"],[614,"impl-From%3Cu32%3E-for-ARGB8888"],[616,"impl-From%3CColorComponents%3E-for-ARGB8888"],[617,"impl-From%3CIndexedColor%3E-for-ARGB8888"],[618,"impl-From%3CRGB555%3E-for-ARGB8888"],[619,"impl-From%3CColorComponentsRGBA%3E-for-ColorComponents"],[620,"impl-From%3CARGB8888%3E-for-ColorComponents"],[622,"impl-From%3CARGB8888%3E-for-RGBA8888"],[623,"impl-From%3CColorComponentsRGBA%3E-for-RGBA8888"],[625,"impl-From%3CColorComponents%3E-for-ColorComponentsRGBA"],[627,"impl-From%3CRGBA8888%3E-for-ColorComponentsRGBA"],[628,"impl-From%3C%5Bu8;+4%5D%3E-for-ColorComponentsRGBA"],[629,"impl-From%3C%26%5Bu8;+4%5D%3E-for-ColorComponentsRGBA"],[630,"impl-From%3CARGB8888%3E-for-Color"],[631,"impl-From%3CIndexedColor%3E-for-Color"],[632,"impl-From%3CRGB555%3E-for-Color"],[634,"impl-From%3CPackedColor%3E-for-Color"],[635,"impl-From%3CRGB565%3E-for-Color"],[637,"impl-From%3CIndexedColor%3E-for-PackedColor"],[638,"impl-From%3CColor%3E-for-PackedColor"],[639,"impl-From%3CARGB8888%3E-for-PackedColor"],[641,"impl-From%3CColor%3E-for-RGB555"],[642,"impl-From%3CARGB8888%3E-for-RGB555"],[643,"impl-From%3CColor%3E-for-RGB565"],[645,"impl-From%3CARGB8888%3E-for-RGB565"],[650,"impl-From%3Cbool%3E-for-Monochrome"],[651,"impl-From%3Cu8%3E-for-Monochrome"],[660,"impl-From%3CSize%3E-for-Rect"],[661,"impl-From%3CCoordinates%3E-for-Rect"],[662,"impl-From%3C(Point,+Size)%3E-for-Rect"],[800,"impl-Into%3CIndexedColor%3E-for-Color"],[801,"impl-Into%3CARGB8888%3E-for-Color"],[837,"impl-Translucent-for-Alpha8"],[838,"impl-Alpha8"],[839,"impl-Translucent-for-ARGB8888"],[840,"impl-ARGB8888"],[847,"impl-Alpha8"],[848,"impl-Translucent-for-Alpha8"],[849,"impl-Translucent-for-ARGB8888"],[850,"impl-ARGB8888"],[878,"impl-Mul-for-Size"],[879,"impl-Mul%3Cusize%3E-for-Size"],[880,"impl-Mul%3Cisize%3E-for-Size"],[881,"impl-Mul%3Cisize%3E-for-Rect"],[882,"impl-Mul%3Cusize%3E-for-Rect"],[883,"impl-MulAssign-for-Size"],[884,"impl-MulAssign%3Cisize%3E-for-Size"],[885,"impl-MulAssign%3Cusize%3E-for-Size"],[886,"impl-MulAssign%3Cusize%3E-for-Rect"],[887,"impl-MulAssign%3Cisize%3E-for-Rect"],[1015,"impl-Sub-for-Alpha8"],[1016,"impl-Sub%3Cu8%3E-for-Alpha8"],[1017,"impl-Sub%3CMovement%3E-for-Point"],[1018,"impl-Sub%3Cisize%3E-for-Point"],[1019,"impl-Sub-for-Point"],[1021,"impl-Sub-for-Size"],[1022,"impl-Sub%3CEdgeInsets%3E-for-Size"],[1023,"impl-Sub%3CMovement%3E-for-Rect"],[1024,"impl-Sub%3CSize%3E-for-Rect"],[1025,"impl-Sub%3CEdgeInsets%3E-for-Rect"],[1027,"impl-SubAssign%3Cu8%3E-for-Alpha8"],[1028,"impl-SubAssign-for-Alpha8"],[1029,"impl-SubAssign%3Cisize%3E-for-Point"],[1030,"impl-SubAssign%3CMovement%3E-for-Point"],[1032,"impl-SubAssign%3CEdgeInsets%3E-for-Size"],[1033,"impl-SubAssign-for-Size"],[1034,"impl-SubAssign%3CMovement%3E-for-Rect"],[1035,"impl-SubAssign%3CSize%3E-for-Rect"],[1036,"impl-SubAssign%3CEdgeInsets%3E-for-Rect"]]},\
"megstd":{"doc":"MEG-OS standard library like <code>std</code>","t":"FFFRFFKKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNCCMNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNKPPPFPFPGFFFFPPNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPFPPPFGPPPPPPPPPPPPPPPPPPPPKPPIPPPPPPPKPNNNNNNNNNNMNNNNNNNNNNNCNNNNNNNNNMMNNNNNNNNNNMTTTTTTTTPTTTTTTTTTTTTTTTTTPTTTTTTTTTTTTTTTTTTTTTTTTTTTPTTTTTTTTTTTTTTTTTTTTTTTTTTPPPPPGTTTTPTTTTTPPTTTTTPTTGFFGGFFFGGFGFTTTTTTTTTTPPTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTPPPPTTTTTTTTTPFPFFPTTTTTTTTTTTTTTTTTTTTTTTPPPTTTTTTTTTTTTTTTPPPPPTTTTTTTTTTTTTTTTTPPPPPTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTPPPPTTTTTTTTPPFPPPPFPPTTTTTTTTTTTTTTTTTTTPTPPPTTPPTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOONOOOOCFKNNNNNNMNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFPPPPPFFGPFPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKKFFNNNNNNNNNNNNMNNMNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNCCCCCSSSSSSSSSSTTFTFFFFTFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSCCPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNSSSSSFNNNNNNNOONNNNKTTFGPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Arc","BTreeMap","Box","Owned","Rc","String","ToOwned","ToString","Vec","Weak","add","add_assign","allocator","allocator","allocator","allocator","append","append","as_bytes","as_mut","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_mut_vec","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_str","assume_init","assume_init","assume_init","assume_init","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_mut","call_once","capacity","capacity","cause","cause","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_from","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","contains_key","decrement_strong_count","decrement_strong_count","decrement_strong_count_in","decrement_strong_count_in","dedup","dedup_by","dedup_by_key","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","description","downcast","downcast","downcast","downcast","downcast","downcast_unchecked","downcast_unchecked","downcast_unchecked","downcast_unchecked","downcast_unchecked","downgrade","downgrade","drain","drain","drawing","drop","drop","drop","drop","drop","drop","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_within","extend_from_within","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","extend_reserve","extend_reserve","extract_if","extract_if","finish","first_entry","first_key_value","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_in","from_raw_in","from_raw_in","from_raw_in","from_raw_parts","from_raw_parts","from_raw_parts_in","from_str","from_utf16","from_utf16_lossy","from_utf16be","from_utf16be_lossy","from_utf16le","from_utf16le_lossy","from_utf8","from_utf8_lossy","from_utf8_unchecked","fs","game","ge","ge","ge","get","get_key_value","get_mut","get_mut","get_mut","get_mut_unchecked","get_mut_unchecked","gt","gt","gt","hash","hash","hash","hash","hash","hash","increment_strong_count","increment_strong_count","increment_strong_count_in","increment_strong_count_in","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert_str","into","into","into","into","into","into","into","into_boxed_slice","into_boxed_slice","into_boxed_str","into_bytes","into_flattened","into_future","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_pin","into_raw","into_raw","into_raw","into_raw","into_raw_parts","into_raw_parts","into_raw_parts_with_alloc","into_raw_with_allocator","into_searcher","into_searcher","into_values","io","is_contained_in","is_contained_in","is_empty","is_empty","is_empty","is_empty","is_prefix_of","is_prefix_of","is_suffix_of","is_suffix_of","iter","iter_mut","keys","last","last_entry","last_key_value","le","le","le","leak","leak","leak","len","len","len","len","lower_bound","lower_bound_mut","lt","lt","lt","make_mut","make_mut","mem","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new_cyclic","new_cyclic","new_in","new_in","new_in","new_in","new_in","new_in","new_uninit","new_uninit","new_uninit","new_uninit_in","new_uninit_in","new_uninit_in","new_uninit_slice","new_uninit_slice","new_uninit_slice","new_uninit_slice_in","new_uninit_slice_in","new_uninit_slice_in","new_zeroed","new_zeroed","new_zeroed","new_zeroed_in","new_zeroed_in","new_zeroed_in","new_zeroed_slice","new_zeroed_slice","new_zeroed_slice","new_zeroed_slice_in","new_zeroed_slice_in","new_zeroed_slice_in","next","next_back","nth","nth_back","osstr","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","pin","pin","pin","pin_in","pin_in","pin_in","poll","poll_next","pop","pop","pop_first","pop_last","provide","provide","ptr_eq","ptr_eq","ptr_eq","push","push","push_str","push_within_capacity","rand","range","range_mut","remove","remove","remove","remove_entry","remove_matches","replace_range","reserve","reserve","reserve_exact","reserve_exact","resize","resize_with","resume","retain","retain","retain","retain_mut","set_len","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","size_hint","size_hint","source","source","spare_capacity_mut","splice","split_at_spare_mut","split_off","split_off","split_off","string","strip_prefix_of","strip_prefix_of","strip_suffix_of","strip_suffix_of","strong_count","strong_count","strong_count","swap_remove","sys","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","try_new_in","try_new_in","try_new_in","try_new_uninit","try_new_uninit","try_new_uninit","try_new_uninit_in","try_new_uninit_in","try_new_uninit_in","try_new_uninit_slice","try_new_zeroed","try_new_zeroed","try_new_zeroed","try_new_zeroed_in","try_new_zeroed_in","try_new_zeroed_in","try_new_zeroed_slice","try_pin","try_pin_in","try_reserve","try_reserve","try_reserve_exact","try_reserve_exact","try_unwrap","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","unwrap_or_clone","upgrade","upper_bound","upper_bound_mut","uuid","values","values_mut","weak_count","weak_count","weak_count","with_capacity","with_capacity","with_capacity_in","write","write","write_char","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_length_prefix","write_str","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","Error","BlockDev","CharDev","Dir","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","Symlink","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create","create","create_new","eq","eq","file_name","file_type","file_type","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_socket","is_symlink","len","metadata","new","next","open","open","partial_cmp","path","permissions","read","read","read_dir","read_to_end","readonly","set_len","set_permissions","set_readonly","sync_all","sync_data","to_owned","to_owned","to_owned","truncate","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","AddrInUse","AddrNotAvailable","AlreadyExists","ArgumentListTooLong","BrokenPipe","ConnectionAborted","ConnectionRefused","ConnectionReset","CrossesDevices","Custom","Deadlock","DirectoryNotEmpty","Err","Error","ErrorKind","ExecutableFileBusy","FileTooLarge","FilenameTooLong","FilesystemLoop","FilesystemQuotaExceeded","HostUnreachable","Interrupted","InvalidData","InvalidInput","IsADirectory","NetworkDown","NetworkUnreachable","NotADirectory","NotConnected","NotFound","NotSeekable","Ok","Other","OutOfMemory","PermissionDenied","Read","ReadOnlyFilesystem","ResourceBusy","Result","StaleNetworkFileHandle","StorageFull","TimedOut","TooManyLinks","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","flush","fmt","fmt","fmt","from","from","from","from","from_raw_os_error","get_mut","get_ref","hash","hid","into","into","into","into_inner","kind","last_os_error","new","partial_cmp","raw_os_error","read","read_to_end","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","ALPHABET_MAX","ALPHABET_MIN","APPLICATION_BREAK","APPLICATION_DEBUGGER_BREAK","APPLICATION_LAUNCH_BUTTONS","ARMATURE","ARTICULATED_ARM","ASSISTIVE_CONTROL","Application","BUFFERED_BYTES","BUTTON","BUTTON4","BUTTON5","BUTTON6","BUTTON7","BUTTON8","BUTTON_1","BUTTON_2","BUTTON_3","BUTTON_4","BUTTON_5","BUTTON_6","BUTTON_7","BUTTON_8","BUTTON_SWITCH","BYTE_COUNT","Byte","CAPACTIVE_HEAT_MAP_DIGITIZER","CAPS_LOCK","CHANNEL_CENTER","CHANNEL_CENTER_FRONT","CHANNEL_FRONT","CHANNEL_LEFT","CHANNEL_LOW_FREQUENCY_ENHANCEMENT","CHANNEL_RIGHT","CHANNEL_SIDE","CHANNEL_SURROUND","CHANNEL_TOP","CHANNEL_UNKNOWN","CHARACTER_GESTURE","CHASSIS_ENCLOSURE","COMPOSE","COMPUTER_CHASSIS_DEVICE","CONSTANT","CONSUMER","CONSUMER_CONTROL","CONTACT_COUNT","CONTACT_COUNT_MAXIMUM","CONTROL_ENABLE","COOLANT_CRITICAL_LEVEL","COOLANT_LEVEL","COOLANT_PUMP","COORDINATE_MEASURING_MACHINE","COUNTED_BUFFER","Collection","DELETE","DEVICE_CONFIGURATION","DEVICE_DOCK","DEVICE_MODE","DEVICE_SETTINGS","DEVICE_SUPPORTED_PROTOCOLS","DIAL","DIGITIZER","DIGITIZERS","DIGITIZER_DIAGNOSTIC","DIGITIZER_ERROR","DISPLAY_BRIGHTNESS_DECREMENT","DISPLAY_BRIGHTNESS_INCREMENT","DOCKABLE_DEVICE","DOCKABLE_DEVICE_DISPLAY_OCCULUSION","DOCKABLE_DEVICE_DOCKING_STATE","DOCKABLE_DEVICE_OBJECT_TYPE","DOCKABLE_DEVICE_PRIMARY_USAGE_ID","DOCKABLE_DEVICE_PRIMARY_USAGE_PAGE","DOCKABLE_DEVICE_UNIQUE_ID","DOCKABLE_DEVICE_VENDOR_ID","DO_NOT_DISTURB","DPAD_DOWN","DPAD_LEFT","DPAD_RIGHT","DPAD_UP","DWord","Delimiter","DesignatorIndex","DesignatorMaximum","DesignatorMinimum","DeviceMode","EJECT","ERR_POST_FAIL","ERR_ROLL_OVER","ERR_UNDEFINED","EndCollection","FAST_FORWARD","FEATURE_NOTIFICATION","FINGER","FREE_SPACE_WAND","FUNCTION_BUTTONS","Feature","Feature","GAMEPAD","GENERIC_DESKTOP","GENERIC_GUI_APPLICATION_CONTROLS","GESTURE_CHARACTER_ENCODING","GRAPHIC_EQUALIZER","Global","HAT_SWITCH","HEADPHONE","HidReportCollectionType","HidReportGlobalState","HidReportId","HidReportItemTag","HidReportItemType","HidReportLeadByte","HidReportLocalState","HidReportMainFlag","HidReportType","HidReportValue","HidReporteReader","HidTrailBytes","HidUsage","INDEX_TRIGGER","INTERNATIONAL_1","INTERNATIONAL_2","INTERNATIONAL_3","INTERNATIONAL_4","INTERNATIONAL_5","INTERNATIONAL_6","INTERNATIONAL_7","INTERNATIONAL_8","INTERNATIONAL_9","Input","Input","JOYSTICK","KANA","KEYBOARD","KEYBOARD","KEYPAD","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_BASKSPACE","KEY_C","KEY_D","KEY_DOWN_ARROW","KEY_E","KEY_ENTER","KEY_ESCAPE","KEY_F","KEY_F1","KEY_F10","KEY_F11","KEY_F12","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_LEFT_ALT","KEY_LEFT_ARROW","KEY_LEFT_CONTROL","KEY_LEFT_GUI","KEY_LEFT_SHIFT","KEY_M","KEY_N","KEY_NUM_LOCK","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_RIGHT_ALT","KEY_RIGHT_ARROW","KEY_RIGHT_CONTROL","KEY_RIGHT_GUI","KEY_RIGHT_SHIFT","KEY_S","KEY_SPACE","KEY_T","KEY_TAB","KEY_U","KEY_UP_ARROW","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","LANG_1","LANG_2","LANG_3","LANG_4","LANG_5","LANG_6","LANG_7","LANG_8","LANG_9","LED","LEFT_ALT","LEFT_CTRL","LEFT_GUI","LEFT_SHIFT","LIGHT_PEN","Local","Logical","LogicalMaximum","LogicalMinimum","MEDIA_SELECTION","MICROPHONE","MOD_MAX","MOD_MIN","MOTION_WAKEUP","MOUSE","MULTIPLE_POINT_DIGITIZER","MULTI_AXIS_CONTROLLER","MUTE","Main","Modifier","Mouse","MouseButton","MouseReport","MultiInputDevice","NONE","NONE","NON_ALPHABET_MAX","NON_ALPHABET_MIN","NON_LINEAR","NO_PREFERRED","NULL_STATE","NUMBER_MAX","NUMBER_MIN","NUMERIC_KEY_PAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MAX","NUMPAD_MIN","NUM_LOCK","NamedArray","Output","Output","PAD_TYPE","PALM_TRIGGER","PAUSE","PEN","PLAY","PLAYBACK_SPEED","PLAY_PAUSE","POINTER","PORTABLE_DEVICE","POWER","PREFERRED_LINE_STYLE","PRIMARY","PROGRAMMABLE_BUTTONS","PROGRAM_CHANGE_KEYS","PUCK","Physical","PhysicalMaximum","PhysicalMinimum","Pop","Push","QW","QX","QY","QZ","RANDOM_PLAY","RECORD","RELATIVE","RESOLUTION_MULTIPLIER","REWIND","RIGHT_ALT","RIGHT_CTRL","RIGHT_GUI","RIGHT_SHIFT","RPM","RX","RY","RZ","Report","ReportCount","ReportId","ReportSize","Reserved","SCAN_NEXT_TRACK","SCAN_PREVIOUS_TRACK","SCROLL_LOCK","SECONDARY","SELECT","SELECTION","SELECT_DISC","SENSOR_ZONE","SHIFT","SLIDER","SPATIAL_CONTROLLER","SPEAKER_SYSTEM","START","STEREO_PLOTTER","STOP","STYLUS","SUPPORTED_REPORT_RATES","SURFACE_SWITCH","SYSTEM_APP_MENU","SYSTEM_BREAK","SYSTEM_COLD_RESTART","SYSTEM_CONTEXT_MENU","SYSTEM_CONTROL","SYSTEM_DEBUGGER_BREAK","SYSTEM_DISMISS_NOTIFICATION","SYSTEM_DISPLAY_BOTH","SYSTEM_DISPLAY_DUAL","SYSTEM_DISPLAY_EXTERNAL","SYSTEM_DISPLAY_INTERNAL","SYSTEM_DISPLAY_INVERT","SYSTEM_DISPLAY_ROTATION_LOCK_BUTTON","SYSTEM_DISPLAY_ROTATION_SLIDER_SWITCH","SYSTEM_DISPLAY_SWAP_PRIMARY_SECONDARY","SYSTEM_DISPLAY_TOGGLE_INT_EXT_MODE","SYSTEM_DISPLAY_TOGGLE_LCD_AUTOSCALE","SYSTEM_DOCK","SYSTEM_DO_NOT_DISTURB","SYSTEM_FUNCTION_SHIFT","SYSTEM_FUNCTION_SHIFT_LOCK","SYSTEM_FUNCTION_SHIFT_LOCK_INDICATOR","SYSTEM_HIBERNATE","SYSTEM_MAIN_MENU","SYSTEM_MENU_DOWN","SYSTEM_MENU_EXIT","SYSTEM_MENU_HELP","SYSTEM_MENU_LEFT","SYSTEM_MENU_RIGHT","SYSTEM_MENU_SELECT","SYSTEM_MENU_UP","SYSTEM_MULTI_AXIS_CONTROLLER","SYSTEM_POWER_DOWN","SYSTEM_SETUP","SYSTEM_SLEEP","SYSTEM_SPEAKER_MUTE","SYSTEM_UNDOCK","SYSTEM_WAKEUP","SYSTEM_WARM_RESTART","SingleInputDevice","StringIndex","StringMaximum","StringMinimum","TABLET_FUNCTION_KEYS","TABLET_SYSTEM_CONTROLS","TERTIARY","THUMB_STICK","TOUCH_PAD","TOUCH_SCREEN","TRANSDUCER_SOFTWARE_INFO","TRANSDUCER_SUPPORTED_PROTOCOLS","Unit","UnitExponent","Usage","Usage","UsageMaximum","UsageMinimum","UsageModifier","UsagePage","UsagePage","UsageSwitch","VARIABLE","VBRX","VBRY","VBRZ","VNO","VOLATILE","VOLUME_DECREMENT","VOLUME_INCREMENT","VX","VY","VZ","WATER_COOLING_SYSTEM","WHEEL","WHITEBOARD","WIRELESS_RADIO_BUTTON","WIRELESS_RADIO_CONTROLS","WIRELESS_RADIO_LED","WIRELESS_RADIO_SLIDER_SWITCH","WRAP","Word","X","X16","X32","X8","Y","Z","Zero","Zero","_3D_DIGITIZER","as_i32","as_isize","as_u32","as_u8","as_usize","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","buttons","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","consumer","contains","contains","contains","default","default","default","default","delimiter","digitizers","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits_retain","from_bits_retain","from_bits_retain","from_i64","from_i64","from_u64","from_u64","from_u8","from_u8","full_qualified_usage","generic","has_alt","has_ctrl","has_shift","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_array","is_const","is_empty","is_empty","is_long_item","is_relative","is_variable","item_tag","led","logical_maximum","logical_minimum","new","new","new","new","new","next","normalize","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","physical_maximum","physical_minimum","position","read_param","report_count","report_id","report_size","report_type","reset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trail_bytes","trail_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","unit_exponent","usage","usage","usage_maximum","usage_minimum","usage_page","usage_page","wheel","x","y","dispose","DisposableRef","DisposeRef","as_mut","as_ref","borrow","borrow_mut","deref","deref_mut","dispose_ref","drop","from","into","new","try_from","try_into","type_id","Buf","OsStr","OsString","Slice","as_mut_slice","as_os_str","as_ref","as_ref","as_ref","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","deref","deref_mut","empty_box","eq","eq","eq","eq_ignore_ascii_case","fmt","fmt","fmt","from","from","from","from_box","from_str","from_string","ge","gt","hash","index","index_mut","inner","inner","into","into","into_arc","into_arc","into_box","into_box","into_boxed_os_str","into_os_string","into_rc","into_rc","into_string","is_ascii","is_empty","le","len","lt","make_ascii_lowercase","make_ascii_uppercase","new","new","partial_cmp","partial_cmp","push","push_slice","reserve","reserve","reserve_exact","reserve_exact","shrink_to","shrink_to_fit","shrink_to_fit","to_ascii_lowercase","to_ascii_uppercase","to_os_string","to_owned","to_owned","to_owned","to_str","to_str","to_string_lossy","try_from","try_from","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","with_capacity","Ancestors","Component","Components","CurDir","DeviceNS","Disk","Normal","ParentDir","Path","PathBuf","Prefix","Prefix","PrefixComponent","RootDir","UNC","Verbatim","VerbatimDisk","VerbatimUNC","ancestors","as_os_str","as_os_str","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","components","deref","ends_with","eq","eq","eq","extension","file_name","file_stem","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has_root","hash","hash","hash","into","into","into","into","into","into","into_boxed_path","into_iter","into_iter","into_os_string","is_absolute","is_relative","is_verbatim","join","kind","new","new","next","next","parent","partial_cmp","partial_cmp","partial_cmp","pop","push","reserve","reserve_exact","set_extension","set_file_name","shrink_to_fit","starts_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_str","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_extension","with_file_name","Output","Output","Prng","Rng","XorShift32","XorShift64","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","into","into","new","new","next","next","next","rand","rand","rand","try_from","try_from","try_into","try_into","type_id","type_id","Sb255","as_ref","as_str","as_str_unchecked","backspace","borrow","borrow_mut","clear","clone","clone_into","cmp","eq","from","into","len","new","partial_cmp","to_owned","try_from","try_into","type_id","write_str","fcntl","fs_imp","megos","path","prelude","O_ACCMODE","O_APPEND","O_CREAT","O_EXCL","O_NOCTTY","O_NONBLOCK","O_RDONLY","O_RDWR","O_TRUNC","O_WRONLY","APPEND","CREAT","DirEntry","EXCL","File","Metadata","OpenOptions","Permissions","READ","ReadDir","TRUNC","WRITE","append","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","contains","create","create_new","eq","file_name","file_type","file_type","flush","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","len","metadata","new","next","open","path","permissions","read","read","readonly","set","set_readonly","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","OPTION_CHAR_NONE","svc","window","Alloc","BeginDraw","BlendRect","Blt1","Blt32","Blt8","ChDir","Close","CloseWindow","Dealloc","DrawLine","DrawRect","DrawShape","DrawString","EndDraw","Exit","FillRect","Function","GetSystemInfo","IoCtl","LSeek","MkDir","Monotonic","NewWindow","Open","OpenDir","PrintString","Rand","Read","ReadChar","ReadDir","RmDir","Srand","Time","Unlink","Usleep","WaitChar","Write","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","into","partial_cmp","to_owned","try_from","try_into","type_id","FULLSCREEN","OPAQUE_CONTENT","THIN_FRAME","USE_BITMAP32","MAIN_SEP_STR","SystemTime","borrow","borrow_mut","clone","clone_into","fmt","from","into","nanos","secs","to_owned","try_from","try_into","type_id","Identify","NULL","UUID","Uuid","UuidVersion","V1","V2","V3","V4","V5","V6","V7","V8","a","as_slice","as_u128","b","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","cmp","cmp","d","e","e_u48","eq","eq","fmt","fmt","from","from","from_i64","from_parts","from_raw","from_slice","from_u64","into","into","into_raw","is_null","null","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version"],"q":[[0,"megstd"],[668,"megstd::error"],[669,"megstd::fs"],[790,"megstd::io"],[883,"megstd::io::hid"],[1627,"megstd::mem"],[1628,"megstd::mem::dispose"],[1644,"megstd::osstr"],[1749,"megstd::path"],[1893,"megstd::rand"],[1923,"megstd::string"],[1945,"megstd::sys"],[1950,"megstd::sys::fcntl"],[1960,"megstd::sys::fs_imp"],[2053,"megstd::sys::megos"],[2056,"megstd::sys::megos::svc"],[2108,"megstd::sys::megos::window"],[2112,"megstd::sys::path"],[2113,"megstd::time"],[2127,"megstd::uuid"],[2185,"core::marker"],[2186,"core::alloc"],[2187,"core::cmp"],[2188,"core::clone"],[2189,"core::mem::maybe_uninit"],[2190,"core::marker"],[2191,"core::ops::function"],[2192,"core::option"],[2193,"core::ffi::c_str"],[2194,"core::borrow"],[2195,"core::cmp"],[2196,"core::any"],[2197,"core::result"],[2198,"core::marker"],[2199,"alloc::vec::drain"],[2200,"core::ops::range"],[2201,"alloc::string"],[2202,"alloc::collections::btree::map::entry"],[2203,"alloc::borrow"],[2204,"core::iter::traits::collect"],[2205,"core::marker"],[2206,"alloc::vec::extract_if"],[2207,"core::hash"],[2208,"alloc::collections::btree::map::entry"],[2209,"core::fmt"],[2210,"alloc::collections::vec_deque"],[2211,"alloc::collections::binary_heap"],[2212,"alloc::string"],[2213,"core::ops::range"],[2214,"core::str::pattern"],[2215,"alloc::collections::btree::map"],[2216,"alloc::collections::btree::map"],[2217,"core::ops::range"],[2218,"core::task::wake"],[2219,"core::task::poll"],[2220,"core::future::future"],[2221,"core::marker"],[2222,"core::error"],[2223,"core::ops::coroutine"],[2224,"alloc::collections::btree::map::entry"],[2225,"core::any"],[2226,"core::fmt"],[2227,"core::num::nonzero"]],"d":["A thread-safe reference-counting pointer. ‘Arc’ stands …","An ordered map based on a B-Tree.","A pointer type that uniquely owns a heap allocation of …","The resulting type after obtaining ownership.","A single-threaded reference-counting pointer. ‘Rc’ …","A UTF-8–encoded, growable string.","A generalization of <code>Clone</code> to borrowed data.","A trait for converting a value to a <code>String</code>.","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference …","","","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","Returns a byte slice of this <code>String</code>’s contents.","","","","","Returns an unsafe mutable pointer to the vector’s …","Extracts a mutable slice of the entire vector.","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","Provides a raw pointer to the data.","Provides a raw pointer to the data.","Returns a raw pointer to the object <code>T</code> pointed to by this …","Returns a raw pointer to the vector’s buffer, or a …","","","","","","","","","Extracts a slice containing the entire vector.","Extracts a string slice containing the entire <code>String</code>.","Converts to <code>Box&lt;T, A&gt;</code>.","Converts to <code>Box&lt;[T], A&gt;</code>.","Converts to <code>Rc&lt;[T]&gt;</code>.","Converts to <code>Rc&lt;T&gt;</code>.","Converts to <code>Arc&lt;T&gt;</code>.","Converts to <code>Arc&lt;[T]&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of elements the vector can hold …","Returns this <code>String</code>’s capacity, in bytes.","","","Clears the map, removing all elements.","Clears the vector, removing all values.","Truncates this <code>String</code>, removing all contents.","","","Returns a new box with a <code>clone()</code> of this box’s contents.","","","Makes a clone of the <code>Rc</code> pointer.","Makes a clone of the <code>Arc</code> pointer.","Makes a clone of the <code>Weak</code> pointer that points to the same …","","","","Copies <code>source</code>’s contents into <code>self</code> without creating a …","","","","Uses borrowed data to replace owned data, usually by …","Uses borrowed data to replace owned data, usually by …","","","","","","","","","Comparison for two <code>Rc</code>s.","Comparison for two <code>Arc</code>s.","","","Returns <code>true</code> if the map contains a value for the specified …","Decrements the strong reference count on the <code>Rc&lt;T&gt;</code> …","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","Decrements the strong reference count on the <code>Rc&lt;T&gt;</code> …","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","","","","Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.","Creates an empty <code>BTreeMap</code>.","Creates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating memory. …","Creates an empty <code>Vec&lt;T&gt;</code>.","Creates an empty <code>String</code>.","","","","","","","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.","Attempt to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.","Downcasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …","Creates a new <code>Weak</code> pointer to this allocation.","Creates a new <code>Weak</code> pointer to this allocation.","Removes the specified range from the vector in bulk, …","Removes the specified range from the string in bulk, …","","","","Drops the <code>Rc</code>.","Drops the <code>Arc</code>.","Drops the <code>Weak</code> pointer.","","Gets the given key’s corresponding entry in the map for …","","","Equality for two <code>Rc</code>s.","Equality for two <code>Arc</code>s.","","","","","","","","","","","","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","Copies elements from <code>src</code> range to the end of the string.","","","","","","","","","","","","","","Creates an iterator that visits all elements (key-value …","Creates an iterator which uses a closure to determine if …","","Returns the first entry in the map for in-place …","Returns the first key-value pair in the map. The key in …","","","","","","","","","","","","","","","Creates a <code>String</code> using interpolation of runtime …","Converts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …","Converts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …","","Returns the argument unchanged.","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …","Converts a <code>String</code> into a box of dyn <code>Error</code>.","Converts a <code>Cow</code> into a box of dyn <code>Error</code>.","Converts a type of <code>Error</code> into a box of dyn <code>Error</code>.","Converts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …","Converts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>T</code> into a <code>Box&lt;T&gt;</code>","Converts a <code>str</code> into a box of dyn <code>Error</code>.","Converts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …","Converts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>","Convert a vector into a boxed slice.","Converts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>","Returns the argument unchanged.","Converts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;(K, V)&gt;</code>.","Create a reference-counted pointer from a clone-on-write …","Returns the argument unchanged.","","Converts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.","Allocate a reference-counted string slice and copy <code>v</code> into …","Converts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>","Allocate a reference-counted string slice and copy <code>v</code> into …","Allocate a reference-counted slice and move <code>v</code>’s items …","Converts a reference-counted string slice into a byte …","Converts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents …","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Converts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> …","Move a boxed object to a new, reference counted, …","Move a boxed object to a new, reference-counted allocation.","","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Converts an atomically reference-counted string slice into …","Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code>","Converts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …","Converts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.","Converts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …","Returns the argument unchanged.","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Allocate a reference-counted slice and move <code>v</code>’s items …","Create an atomically reference-counted pointer from a …","Returns the argument unchanged.","Converts a <code>CString</code> into a Vec&lt;u8&gt;.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;T&gt;</code> and move <code>s</code>’s items into it.","Convert a boxed slice into a vector by transferring …","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Returns the argument unchanged.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Convert a clone-on-write slice into a vector.","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …","Converts a <code>&amp;str</code> into a <code>String</code>.","Allocates an owned <code>String</code> from a single character.","Converts a <code>&amp;String</code> into a <code>String</code>.","Converts a <code>&amp;mut str</code> into a <code>String</code>.","Returns the argument unchanged.","Converts a clone-on-write string to an owned instance of …","","","Takes each element in the <code>Iterator</code> and collects it into an …","Takes each element in the <code>Iterator</code> and collects it into an …","","","","","","","","Constructs a box from a raw pointer.","Constructs an <code>Rc&lt;T&gt;</code> from a raw pointer.","Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.","Converts a raw pointer previously created by <code>into_raw</code> back …","Constructs a box from a raw pointer in the given allocator.","Constructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided …","Constructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.","Converts a raw pointer previously created by <code>into_raw</code> back …","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a new <code>String</code> from a length, capacity, and pointer.","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing …","Decode a UTF-16BE–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16BE–encoded slice <code>v</code> into a <code>String</code>, …","Decode a UTF-16LE–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16LE–encoded slice <code>v</code> into a <code>String</code>, …","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","","","","‘Greater than or equal to’ comparison for two <code>Rc</code>s.","‘Greater than or equal to’ comparison for two <code>Arc</code>s.","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference into the given <code>Rc</code>, if there are","Returns a mutable reference into the given <code>Arc</code>, if there …","Returns a mutable reference into the given <code>Rc</code>, without any …","Returns a mutable reference into the given <code>Arc</code>, without …","","Greater-than comparison for two <code>Rc</code>s.","Greater-than comparison for two <code>Arc</code>s.","","","","","","","Increments the strong reference count on the <code>Rc&lt;T&gt;</code> …","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","Increments the strong reference count on the <code>Rc&lt;T&gt;</code> …","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","Returns a reference to the value corresponding to the …","","","","","","","","","","","","","","","Inserts a key-value pair into the map.","Inserts an element at position <code>index</code> within the vector, …","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>","Converts the vector into <code>Box&lt;[T]&gt;</code>.","Converts this <code>String</code> into a Box&lt;str&gt;.","Converts a <code>String</code> into a byte vector.","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","","Consumes the <code>Box</code>, returning the wrapped value.","Returns the inner value, if the <code>Rc</code> has exactly one strong …","Returns the inner value, if the <code>Arc</code> has exactly one strong …","","","","","Creates a consuming iterator, that is, one that moves each …","","","Creates a consuming iterator visiting all the keys, in …","Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …","Consumes the <code>Box</code>, returning a wrapped raw pointer.","Consumes the <code>Rc</code>, returning the wrapped pointer.","Consumes the <code>Arc</code>, returning the wrapped pointer.","Consumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>String</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …","","","Creates a consuming iterator visiting all the values, in …","","","","","Returns <code>true</code> if the map contains no elements.","Returns <code>true</code> if the vector contains no elements.","Returns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…","","","","","Gets an iterator over the entries of the map, sorted by …","Gets a mutable iterator over the entries of the map, …","Gets an iterator over the keys of the map, in sorted order.","","Returns the last entry in the map for in-place …","Returns the last key-value pair in the map. The key in …","","‘Less than or equal to’ comparison for two <code>Rc</code>s.","‘Less than or equal to’ comparison for two <code>Arc</code>s.","Consumes and leaks the <code>Box</code>, returning a mutable reference, …","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","Consumes and leaks the <code>String</code>, returning a mutable …","","Returns the number of elements in the map.","Returns the number of elements in the vector, also …","Returns the length of this <code>String</code>, in bytes, not <code>char</code>s or …","Returns a <code>Cursor</code> pointing at the first element that is …","Returns a <code>CursorMut</code> pointing at the first element that is …","","Less-than comparison for two <code>Rc</code>s.","Less-than comparison for two <code>Arc</code>s.","Makes a mutable reference into the given <code>Rc</code>.","Makes a mutable reference into the given <code>Arc</code>.","","","Inequality for two <code>Rc</code>s.","Inequality for two <code>Arc</code>s.","","","","","","","","","","Allocates memory on the heap and then places <code>x</code> into it.","Makes a new, empty <code>BTreeMap</code>.","Constructs a new <code>Rc&lt;T&gt;</code>.","Constructs a new <code>Arc&lt;T&gt;</code>.","Constructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Creates a new empty <code>String</code>.","Constructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Allocates memory in the given allocator then places <code>x</code> into …","Makes a new empty BTreeMap with a reasonable choice for B.","Constructs a new <code>Rc</code> in the provided allocator.","Constructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.","Constructs a new <code>Weak&lt;T, A&gt;</code>, without allocating any …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","Constructs a new box with uninitialized contents.","Constructs a new <code>Rc</code> with uninitialized contents.","Constructs a new <code>Arc</code> with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new <code>Rc</code> with uninitialized contents in the …","Constructs a new <code>Arc</code> with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new boxed slice with uninitialized contents …","Constructs a new reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new boxed slice with uninitialized contents …","Constructs a new reference-counted slice with …","Constructs a new atomically reference-counted slice with …","","","","","","","","Partial comparison for two <code>Rc</code>s.","Partial comparison for two <code>Arc</code>s.","","","","Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …","Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>…","Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …","","","Removes the last element from a vector and returns it, or …","Removes the last character from the string buffer and …","Removes and returns the first element in the map. The key …","Removes and returns the last element in the map. The key …","","","Returns <code>true</code> if the two <code>Rc</code>s point to the same allocation …","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …","Returns <code>true</code> if the two <code>Weak</code>s point to the same allocation …","Appends an element to the back of a collection.","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","Appends an element if there is sufficient spare capacity, …","","Constructs a double-ended iterator over a sub-range of …","Constructs a mutable double-ended iterator over a …","Removes a key from the map, returning the value at the key …","Removes and returns the element at position <code>index</code> within …","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Removes a key from the map, returning the stored key and …","Remove all matches of pattern <code>pat</code> in the <code>String</code>.","Removes the specified range in the string, and replaces it …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves capacity for at least <code>additional</code> bytes more than …","Reserves the minimum capacity for at least <code>additional</code> more …","Reserves the minimum capacity for at least <code>additional</code> …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the characters specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of this <code>String</code> with a lower bound.","Shrinks the capacity of the vector as much as possible.","Shrinks the capacity of this <code>String</code> to match its length.","","","","","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given key. Returns …","Splits the collection into two at the given index.","Splits the string into two at the given byte index.","","","","","","Gets the number of strong (<code>Rc</code>) pointers to this allocation.","Gets the number of strong (<code>Arc</code>) pointers to this …","Gets the number of strong (<code>Arc</code>) pointers pointing to this …","Removes an element from the vector and returns it.","","","Creates owned data from borrowed data, usually by cloning.","","","","","","","","Converts the given value to a <code>String</code>.","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>String</code> to the specified length.","","Attempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","Attempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","Allocates memory on the heap then places <code>x</code> into it, …","Constructs a new <code>Rc&lt;T&gt;</code>, returning an error if the …","Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, …","Constructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …","Constructs a new box with uninitialized contents on the …","Constructs a new <code>Rc</code> with uninitialized contents, returning …","Constructs a new <code>Arc</code> with uninitialized contents, …","Constructs a new box with uninitialized contents in the …","Constructs a new <code>Rc</code> with uninitialized contents, in the …","Constructs a new <code>Arc</code> with uninitialized contents, in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Rc</code> with uninitialized contents, with the …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …","Constructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> bytes …","Tries to reserve the minimum capacity for at least …","Tries to reserve the minimum capacity for at least …","Returns the inner value, if the <code>Rc</code> has exactly one strong …","Returns the inner value, if the <code>Arc</code> has exactly one strong …","","","","","","","","If we have the only reference to <code>T</code> then unwrap it. …","If we have the only reference to <code>T</code> then unwrap it. …","Attempts to upgrade the <code>Weak</code> pointer to an <code>Arc</code>, delaying …","Returns a <code>Cursor</code> pointing at the last element that is …","Returns a <code>CursorMut</code> pointing at the last element that is …","","Gets an iterator over the values of the map, in order by …","Gets a mutable iterator over the values of the map, in …","Gets the number of <code>Weak</code> pointers to this allocation.","Gets the number of <code>Weak</code> pointers to this allocation.","Gets an approximation of the number of <code>Weak</code> pointers …","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Creates a new empty <code>String</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …","Writes the value and converts to <code>Box&lt;T, A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","An entity already exists, often a file.","Program argument list too long.","The operation failed because a pipe was closed.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Cross-device or cross-filesystem (hard) link or rename.","","Deadlock (avoided).","A non-empty directory was specified where an empty …","Contains the error value","","","Executable file is busy.","File larger than allowed or supported.","Filename too long.","Loop in the filesystem or IO subsystem; often, too many …","Filesystem quota was exceeded.","The remote host is not reachable.","This operation was interrupted.","Data not valid for the operation were encountered.","A parameter was incorrect.","The filesystem object is, unexpectedly, a directory.","The system’s networking is down.","The network containing the remote host is not reachable.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","An entity was not found, often a file.","Seek on unseekable file.","Contains the success value","A custom error that does not fall under any other I/O …","An operation could not be completed, because it failed to …","The operation lacked the necessary privileges to complete.","","The filesystem or storage medium is read-only, but a write …","Resource is busy.","","Stale network file handle.","The underlying storage (typically, a filesystem) is full.","The I/O operation’s timeout expired, causing it to be …","Too many (hard) links to the same filesystem object.","An error returned when an operation could not be completed …","This operation is unsupported on this platform.","The operation needs to block to complete, but the blocking …","","An error returned when an operation could not be completed …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Human Interface Device Manager","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bit field / Buffered Bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data / Constant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modifier keys as defined by the HID specification.","","Mouse buttons as defined by the HID specification.","","","","","","","Linear / Non Linear","Preferred State / No Preferred","No Null Position / Null State","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Primary Button","","","","","","","","","","","","","","","Absolute / Relative","","","","","","","","","","","","","","","","","","","Secondary Button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tertiary Button","","","","","","","","Usage ID of the keyboard as defined in the HID …","","","","","","","","Array / Variable","","","","","Non volatile / Volatile","","","","","","","","","","","","","No Wrap / Wrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the mouse report in a canonical format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dispose","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Device namespace prefix, e.g., <code>\\\\\\\\.\\\\COM42</code>.","Prefix <code>C:</code> for the given disk drive.","","","","","Unusable in meg-os","","","","Prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. …","Verbatim prefix, e.g., <code>\\\\\\\\?\\\\cat_pics</code>.","Verbatim disk prefix, e.g., <code>\\\\\\\\?\\\\C:</code>.","Verbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,","","","","Returns the raw <code>OsStr</code> slice for this prefix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the parsed prefix data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pseudo Random Number Generator","Random Number Generator","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Small String Buffer","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invalid character representation in Rust","","","Allocates memory blocks with a simple allocator","Create a drawing context","Blend (test)","Draw a bitmap in a window","Draw a bitmap in a window","Draw a bitmap in a window","","","Close a window","Frees an allocated memory block","Draw a line in a window","Draw a rectangle in a window","Draw a shape in a window","Draw a string in a window","Discard the drawing context and reflect it to the screen","Terminate the process normally","Fill a rectangle in a window","MEG-OS Maystorm System Call Function Numbers","Get the system information","","","","Get the value of the monotonic timer in microseconds","Create a new window","","","Display a string","Returns a simple pseudo-random number","","Read a char event","","","Set the seed of the random number","Perform the time service","","Blocks a thread for the specified microseconds","Wait for char event","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Full Screen","Content is opaque","Thin frame","Use 32bit bitmap in window","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Universally Unique Identifier (RFC 4122)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,27,0,0,0,0,0,0,1,1,4,7,8,9,10,9,1,4,9,9,1,9,9,1,1,7,8,15,9,4,7,8,9,9,1,1,1,9,1,4,4,7,7,8,8,4,4,10,7,7,8,8,15,9,9,1,1,4,4,10,7,8,15,9,9,1,1,4,4,4,9,1,4,8,10,9,1,4,4,4,4,10,7,8,15,9,1,4,4,9,1,4,27,27,10,7,8,15,9,1,4,10,7,8,9,1,10,7,8,7,8,9,9,9,4,4,4,4,10,7,8,15,9,1,4,7,8,9,1,4,9,1,4,8,4,4,4,7,8,4,4,4,7,8,7,8,9,1,0,4,10,7,8,15,9,10,4,10,7,8,9,9,9,9,9,9,1,1,1,1,0,10,10,9,9,1,1,1,1,1,1,9,9,1,10,10,9,9,1,1,1,1,1,9,9,1,1,10,9,4,10,10,4,4,4,10,7,7,7,8,8,8,15,9,1,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,10,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,15,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,1,1,1,1,1,4,10,7,8,9,1,1,1,1,1,1,4,7,8,15,4,7,8,15,9,1,9,1,1,1,1,1,1,1,1,1,1,0,0,4,7,8,10,10,10,7,8,7,8,4,7,8,4,10,7,8,9,1,7,8,7,8,10,9,1,1,1,1,1,1,9,1,1,1,1,1,1,10,9,1,1,4,10,7,8,15,9,1,4,9,1,1,9,4,4,7,8,4,10,10,10,9,9,9,10,4,4,7,8,15,9,1,9,4,4,1,10,0,4,1,4,10,9,1,4,1,4,1,10,10,10,4,10,10,4,7,8,4,9,1,4,10,9,1,10,10,4,7,8,7,8,0,4,7,8,9,9,9,9,9,9,1,1,1,4,10,7,8,15,9,1,7,8,4,10,7,8,15,9,4,7,8,4,7,8,4,7,8,4,7,8,4,7,8,4,7,8,4,7,8,4,7,8,4,4,4,4,0,4,10,7,8,9,1,0,4,7,8,4,7,8,4,4,9,1,10,10,4,8,7,8,15,9,1,1,9,0,10,10,10,9,1,10,1,1,9,1,9,1,9,9,4,10,9,1,9,9,9,1,9,1,4,4,4,8,9,9,9,10,9,1,0,4,1,4,1,7,8,15,9,0,0,27,4,10,7,8,15,9,1,100,4,7,8,1,9,1,4,4,4,10,7,7,8,8,15,9,1,10,4,10,7,8,15,9,1,4,7,8,4,7,8,4,7,8,4,7,8,4,4,7,8,4,7,8,4,8,8,9,1,9,1,7,8,4,10,7,8,15,9,1,7,8,15,10,10,0,10,10,7,8,15,9,1,9,4,4,1,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4,0,121,121,121,0,121,0,121,0,0,0,0,0,121,121,115,123,115,127,124,120,121,122,123,115,127,124,120,121,122,0,120,121,122,120,121,122,121,123,115,115,121,122,124,124,120,123,120,121,122,123,115,127,124,120,121,122,121,123,115,127,124,120,121,122,127,121,121,120,121,121,120,121,121,121,120,124,115,127,123,115,121,124,120,123,115,0,123,122,123,123,122,123,123,120,121,122,115,123,123,115,127,124,120,121,122,123,115,127,124,120,121,122,123,115,127,124,120,121,122,123,115,128,128,128,128,128,128,128,128,128,0,128,128,117,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,117,128,128,128,0,128,128,0,128,128,128,128,128,128,128,0,128,130,128,131,130,128,131,128,128,128,128,129,130,128,131,130,130,128,131,130,130,130,128,0,130,128,131,130,130,130,130,128,130,134,134,128,130,128,131,130,128,131,130,128,131,129,142,142,140,140,140,140,140,140,149,139,141,137,137,137,137,137,140,140,140,140,140,140,140,140,140,140,146,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,139,141,140,140,140,140,140,140,140,140,140,148,142,140,140,140,140,140,140,140,141,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,146,148,148,148,148,0,140,142,142,142,148,140,140,140,140,140,144,148,140,141,140,140,140,147,140,140,0,0,0,0,0,0,0,0,0,0,0,0,0,140,142,142,142,142,142,142,142,142,142,144,148,140,140,141,140,140,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,141,138,138,138,138,140,147,149,148,148,140,140,142,142,140,140,140,140,140,147,0,151,0,0,151,140,142,142,142,139,139,139,142,142,140,142,142,142,142,142,142,142,142,142,142,142,142,140,149,144,148,140,140,140,140,140,140,140,140,140,140,140,137,140,140,140,149,148,148,148,148,140,140,140,140,140,140,139,140,140,138,138,138,138,140,140,140,140,149,148,148,148,147,140,140,140,137,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,151,148,148,148,140,140,137,140,140,140,140,140,148,148,0,148,148,148,149,0,148,149,139,140,140,140,140,139,140,140,140,140,140,140,140,140,140,140,140,140,139,146,140,135,135,135,140,140,146,135,140,135,135,135,136,135,137,137,137,137,138,137,139,137,137,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,140,143,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,151,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,151,141,140,142,136,144,145,146,147,148,149,152,151,140,138,137,139,142,138,143,137,152,140,138,137,139,141,140,142,136,144,145,146,147,148,149,152,151,141,140,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,153,141,140,140,142,138,138,143,137,137,137,136,144,145,146,147,148,139,149,135,135,135,135,150,152,151,138,137,139,148,149,148,149,146,147,142,140,138,138,138,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,153,139,139,138,137,145,139,139,145,140,150,150,153,140,136,150,152,153,143,141,140,142,136,144,145,146,147,148,149,152,151,150,150,153,153,150,150,150,145,152,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,151,140,145,146,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,153,141,140,142,138,143,137,136,144,145,146,147,148,139,149,135,150,152,151,150,150,140,152,152,152,140,150,143,143,143,0,0,0,154,154,154,154,154,154,155,154,154,154,154,154,154,154,0,0,0,0,156,125,16,16,125,156,16,157,125,156,16,157,125,156,125,156,125,156,125,156,157,125,156,16,16,125,125,125,157,16,16,156,157,16,125,156,125,125,156,156,157,156,16,16,16,125,125,157,156,125,156,157,156,157,156,125,16,157,156,156,157,16,16,16,16,157,157,16,125,16,16,125,156,125,156,125,156,156,125,156,157,157,16,157,125,156,16,157,157,125,156,125,156,156,156,16,157,125,156,125,156,0,0,0,159,162,162,159,159,0,0,0,159,0,159,162,162,162,162,118,118,159,160,161,116,118,118,161,161,116,116,118,161,116,158,159,160,162,118,161,116,158,159,160,162,116,116,116,158,159,160,162,116,158,159,160,162,159,160,162,118,116,118,159,160,162,118,118,118,118,158,159,160,162,161,116,116,158,159,160,162,118,159,160,162,161,116,158,159,160,162,116,161,158,116,118,118,162,118,160,118,116,161,158,118,159,160,162,116,116,116,116,116,116,116,118,116,158,159,160,162,118,118,161,116,158,159,160,162,161,116,158,159,160,162,118,161,116,158,159,160,162,116,118,118,168,167,0,0,0,0,163,164,163,164,163,164,163,164,163,164,163,164,167,163,164,168,163,164,163,164,163,164,163,164,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,170,0,0,0,0,170,0,170,170,170,170,174,175,173,170,171,172,174,175,173,170,171,172,170,170,171,172,170,171,172,170,170,170,172,173,173,171,174,170,171,172,174,175,173,170,171,172,174,175,173,170,171,172,175,171,173,170,175,174,173,171,174,170,172,170,172,170,171,172,170,174,175,173,170,171,172,174,175,173,170,171,172,174,175,173,170,171,172,174,170,0,0,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,0,0,0,0,0,0,177,177,177,177,177,177,177,177,177,177,177,177,177,0,178,180,0,0,179,179,179,179,179,179,179,179,178,178,178,178,178,179,178,179,178,178,179,178,179,178,179,178,178,178,178,179,178,179,178,179,179,178,178,178,179,178,179,178,178,178,178,179,178,179,178,179,178,179,178,179,178],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[1,2],3],[[[4,[-1,-2]]],-2,5,6],[[[7,[-1,-2]]],-2,[],6],[[[8,[-1,-2]]],-2,[],6],[[[9,[-1,-2]]],-2,[],6],[[[10,[-1,-2,-3]],[10,[-1,-2,-3]]],3,11,[],[12,6,12]],[[[9,[-1,-2]],[9,[-1,-2]]],3,[],6],[1,[[14,[13]]]],[[[4,[-1,-2]]],-1,5,6],[[[9,[-1,-2]]],[[9,[-1,-2]]],[],6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[[[9,[-1,-2]]],[],[],6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[1,[[9,[13]]]],[[[7,[-1,-2]]],[],5,6],[[[8,[-1,-2]]],[],5,6],[[[15,[-1,-2]]],[],5,6],[[[9,[-1,-2]]],[],[],6],[[[4,[-1,-2]]],-1,5,6],[[[7,[-1,-2]]],-1,5,6],[[[8,[-1,-2]]],-1,5,6],[[[9,[-1,-2]]],[[9,[-1,-2]]],[],6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[1,16],[1,[[14,[13]]]],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[[[4,[[17,[-1]],-2]]],[[4,[-1,-2]]],[],6],[[[4,[[14,[[17,[-1]]]],-2]]],[[4,[[14,[-1]],-2]]],[],6],[[[7,[[14,[[17,[-1]]]],-2]]],[[7,[[14,[-1]],-2]]],[],[12,6]],[[[7,[[17,[-1]],-2]]],[[7,[-1,-2]]],[],[12,6]],[[[8,[[17,[-1]],-2]]],[[8,[-1,-2]]],[],[12,6]],[[[8,[[14,[[17,[-1]]]],-2]]],[[8,[[14,[-1]],-2]]],[],[12,6]],[-1,-2,[],[]],[[[4,[-1,-2]]],-1,5,6],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1,-2]]],-1,5,6],[-1,-2,[],[]],[[[8,[-1,-2]]],-1,5,6],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[-1,-2,[],[]],[[[4,[-1,-2]]],-1,5,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[-1,-2,[],[]],[1,2],[-1,-2,[],[]],[[[4,[-2,-3]],-1],[],18,[[19,[-1]],5],6],[[[4,[-2,-3]],-1],[],18,[[20,[-1]],5],6],[[[4,[-2,-3]],-1],[],18,[[21,[-1]],5],6],[[[9,[-1,-2]]],22,[],6],[1,22],[[[4,[-1]]],[[24,[23]]],23],[[[8,[-1]]],[[24,[23]]],[23,5]],[[[10,[-1,-2,-3]]],3,[],[],[6,12]],[[[9,[-1,-2]]],3,[],6],[1,3],[[[4,[[14,[-1]],-2]]],[[4,[[14,[-1]],-2]]],12,[6,12]],[[[4,[2]]],[[4,[2]]]],[[[4,[-1,-2]]],[[4,[-1,-2]]],12,[6,12]],[[[4,[25]]],[[4,[25]]]],[[[10,[-1,-2,-3]]],[[10,[-1,-2,-3]]],12,12,[6,12]],[[[7,[-1,-2]]],[[7,[-1,-2]]],5,[6,12]],[[[8,[-1,-2]]],[[8,[-1,-2]]],5,[6,12]],[[[15,[-1,-2]]],[[15,[-1,-2]]],5,[6,12]],[[[9,[-1,-2]]],[[9,[-1,-2]]],12,[6,12]],[1,1],[[[4,[[14,[-1]],-2]],[4,[[14,[-1]],-2]]],3,12,[6,12]],[[[4,[-1,-2]],[4,[-1,-2]]],3,12,[6,12]],[[[9,[-1,-2]],[9,[-1,-2]]],3,12,[6,12]],[[1,1],3],[[-1,-2],3,[],[]],[[[27,[],[[26,[-1]]]],-1],3,28],[[[27,[],[[26,[-1]]]],-1],3,28],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[4,[-1,-2]],[4,[-1,-2]]],29,[11,5],6],[[[10,[-1,-2,-3]],[10,[-1,-2,-3]]],29,11,11,[6,12]],[[[7,[-1,-2]],[7,[-1,-2]]],29,[11,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],29,[11,5],6],[[[9,[-1,-2]],[9,[-1,-2]]],29,11,6],[[1,1],29],[[[10,[-2,-3,-4]],-1],30,[11,5],[[28,[-1]],11],[],[6,12]],[[],3],[[],3],[-1,3,6],[-1,3,6],[[[9,[-1,-2]]],3,31,6],[[[9,[-1,-2]],-3],3,[],6,[[20,[-1,-1],[[32,[30]]]]]],[[[9,[-1,-2]],-4],3,[],6,31,[[20,[-1],[[32,[-3]]]]]],[[],[[4,[[14,[-1]]]]],[]],[[],[[4,[2]]]],[[],[[4,[25]]]],[[],[[4,[-1]]],33],[[],[[10,[-1,-2]]],[],[]],[[],[[7,[-1]]],33],[[],[[8,[-1]]],33],[[],[[15,[-1]]],[]],[[],[[9,[-1]]],[]],[[],1],[[[4,[-1,-2]]],-1,5,6],[[[7,[-1,-2]]],-1,5,6],[[[8,[-1,-2]]],-1,5,6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[[[4,[-1,-2]]],-1,5,6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[[[4,[-1]]],2,23],[[[8,[-1]]],2,[23,5]],[[[4,[34,-1]]],[[35,[[4,[-2,-1]],[4,[34,-1]]]]],6,34],[[[4,[34,-1]]],[[35,[[4,[-2,-1]],[4,[34,-1]]]]],6,34],[[[4,[34,-1]]],[[35,[[4,[-2,-1]],[4,[34,-1]]]]],6,34],[[[7,[34,-1]]],[[35,[[7,[-2,-1]],[7,[34,-1]]]]],[6,12],34],[[[8,[34,-1]]],[[35,[[8,[-2,-1]],[8,[34,-1]]]]],[6,12],[34,36,37]],[[[4,[34,-1]]],[[4,[-2,-1]]],6,34],[[[4,[34,-1]]],[[4,[-2,-1]]],6,34],[[[4,[34,-1]]],[[4,[-2,-1]]],6,34],[[[7,[34,-1]]],[[7,[-2,-1]]],[6,12],34],[[[8,[34,-1]]],[[8,[-2,-1]]],[6,12],[34,36,37]],[[[7,[-1,-2]]],[[38,[-1,-2]]],5,[12,6]],[[[8,[-1,-2]]],[[15,[-1,-2]]],5,[12,6]],[[[9,[-1,-2]],-3],[[39,[-1,-2]]],[],6,[[40,[22]]]],[[1,-1],41,[[40,[22]]]],0,[[[4,[-1,-2]]],3,5,6],[[[10,[-1,-2,-3]]],3,[],[],[6,12]],[[[7,[-1,-2]]],3,5,6],[[[8,[-1,-2]]],3,5,6],[[[15,[-1,-2]]],3,5,6],[[[9,[-1,-2]]],3,[],6],[[[10,[-1,-2,-3]],-1],[[42,[-1,-2,-3]]],11,[],[6,12]],[[[4,[-1,-2]],[4,[-1,-2]]],30,[31,5],6],[[[10,[-1,-2,-3]],[10,[-1,-2,-3]]],30,31,31,[6,12]],[[[7,[-1,-2]],[7,[-1,-2]]],30,[31,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[31,5],6],[[[9,[-2,-3]],[9,[-1,-4]]],30,[],[[31,[-1]]],6,6],[[[9,[-2,-3]],[43,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[43,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[1,2],30],[[1,2],30],[[1,[44,[2]]],30],[[1,1],30],0,[[[10,[-1,-2,-3]],-4],3,11,[],[6,12],[[46,[],[[45,[[3,[-1,-2]]]]]]]],[[[10,[-1,-2,-3]],-4],3,[11,47],47,[6,12],[[46,[],[[45,[[3,[-1,-2]]]]]]]],[[[9,[-1,-2]],-3],3,[],6,[[46,[],[[45,[-1]]]]]],[[[9,[-1,-2]],-3],3,47,6,[[46,[],[[45,[-1]]]]]],[[1,-1],3,[[46,[],[[45,[48]]]]]],[[1,-1],3,[[46,[],[[45,[48]]]]]],[[1,-1],3,[[46,[],[[45,[[4,[2]]]]]]]],[[1,-1],3,[[46,[],[[45,[[44,[2]]]]]]]],[[1,-1],3,[[46,[],[[45,[2]]]]]],[[1,-1],3,[[46,[],[[45,[1]]]]]],[[[9,[-1,-2]],[14,[-1]]],3,12,6],[[[9,[-1,-2]],-3],3,12,6,[[40,[22]]]],[[1,-1],3,[[40,[22]]]],[[[10,[-1,-2,-3]],[3,[-1,-2]]],3,[11,47],47,[6,12]],[[[10,[-1,-2,-3]],[3,[-1,-2]]],3,11,[],[6,12]],[[[9,[-1,-2]],-1],3,[],6],[[[9,[-1,-2]],-1],3,47,6],[[1,1],3],[[1,[44,[2]]],3],[[1,48],3],[[1,48],3],[[1,2],3],[[[9,[-1,-2]],22],3,[],6],[[[9,[-1,-2]],22],3,47,6],[[1,22],3],[[1,22],3],[[[10,[-1,-2,-3]],-4],[[49,[-1,-2,-4,-3]]],11,[],[6,12],[[20,[-1,-2],[[32,[30]]]]]],[[[9,[-1,-2]],-3],[[50,[-1,-3,-2]]],[],6,[[20,[-1],[[32,[30]]]]]],[[[4,[-1,-2]]],51,[52,5],6],[[[10,[-1,-2,-3]]],[[24,[[53,[-1,-2,-3]]]]],11,[],[6,12]],[[[10,[-1,-2,-3]]],[[24,[[3,[-1,-2]]]]],11,[],[6,12]],[[[4,[-1,-2]],54],[[35,[3,55]]],[56,5],6],[[[4,[-1,-2]],54],[[35,[3,55]]],[57,5],6],[[[4,[-1,-2]],54],[[35,[3,55]]],5,6],[[[10,[-1,-2,-3]],54],[[35,[3,55]]],57,57,[6,12]],[[[7,[-1,-2]],54],[[35,[3,55]]],5,6],[[[7,[-1,-2]],54],[[35,[3,55]]],[56,5],6],[[[7,[-1,-2]],54],[[35,[3,55]]],[57,5],6],[[[8,[-1,-2]],54],[[35,[3,55]]],[56,5],6],[[[8,[-1,-2]],54],[[35,[3,55]]],5,6],[[[8,[-1,-2]],54],[[35,[3,55]]],[57,5],6],[[[15,[-1]],54],[[35,[3,55]]],5],[[[9,[-1,-2]],54],[[35,[3,55]]],57,6],[[1,54],[[35,[3,55]]]],[[1,54],[[35,[3,55]]]],0,[[[44,[[14,[-1]]]]],[[4,[[14,[-1]]]]],12],[25,[[4,[25]]]],[[[4,[2,-1]]],[[4,[[14,[13]],-1]]],6],[1,[[4,[2]]]],[58,-1,[]],[-1,-1,[]],[[[44,[25]]],[[4,[25]]]],[1,[[4,[23]]]],[[[44,[2]]],[[4,[23]]]],[-1,[[4,[23]]],23],[59,[[4,[25]]]],[[[14,[-1]]],[[4,[[14,[-1]]]]],12],[[[43,[-1]]],[[4,[[14,[-1]]]]],[]],[1,[[4,[23]]]],[-1,[[4,[-1]]],[]],[2,[[4,[23]]]],[-1,[[4,[23]]],[23,36,37]],[2,[[4,[23]]]],[[[44,[2]]],[[4,[2]]]],[[[9,[-1,-2]]],[[4,[[14,[-1]],-2]]],[],6],[[[44,[2]]],[[4,[23]]]],[2,[[4,[2]]]],[-1,-1,[]],[[[43,[[3,[-1,-2]]]]],[[10,[-1,-2]]],11,[]],[[[44,[-1]]],[[7,[-1]]],[27,5]],[-1,-1,[]],[58,-1,[]],[[[43,[-1]]],[[7,[[14,[-1]]]]],[]],[1,[[7,[2]]]],[-1,[[7,[-1]]],[]],[2,[[7,[2]]]],[[[9,[-1,-2]]],[[7,[[14,[-1]],-2]]],[],6],[[[7,[2]]],[[7,[[14,[13]]]]]],[25,[[7,[25]]]],[[[14,[-1]]],[[7,[[14,[-1]]]]],12],[59,[[7,[25]]]],[[[4,[-1,-2]]],[[7,[-1,-2]]],5,6],[[[4,[-1,-2]]],[[8,[-1,-2]]],5,6],[58,-1,[]],[1,[[8,[2]]]],[[[8,[2]]],[[8,[[14,[13]]]]]],[-1,[[8,[-1]]],[]],[25,[[8,[25]]]],[[[43,[-1]]],[[8,[[14,[-1]]]]],[]],[59,[[8,[25]]]],[-1,-1,[]],[[[14,[-1]]],[[8,[[14,[-1]]]]],12],[2,[[8,[2]]]],[[[9,[-1,-2]]],[[8,[[14,[-1]],-2]]],[],[6,12]],[[[44,[-1]]],[[8,[-1]]],[27,5]],[-1,-1,[]],[59,[[9,[13]]]],[2,[[9,[13]]]],[[[43,[-1]]],[[9,[-1]]],12],[[[43,[-1]]],[[9,[-1]]],[]],[[[4,[[14,[-1]],-2]]],[[9,[-1,-2]]],[],6],[[[43,[-1]]],[[9,[-1]]],12],[1,[[9,[13]]]],[[[60,[-1,-2]]],[[9,[-1,-2]]],[],6],[[[14,[-1]]],[[9,[-1]]],12],[-1,-1,[]],[[[14,[-1]]],[[9,[-1]]],12],[[[44,[[14,[-1]]]]],[[9,[-1]]],[]],[[[61,[-1,-2]]],[[9,[-1,-2]]],[],6],[[[4,[2]]],1],[2,1],[48,1],[1,1],[2,1],[-1,-1,[]],[[[44,[2]]],1],[-2,[[4,[[14,[-1]]]]],[],[[46,[],[[45,[-1]]]]]],[-3,[[10,[-1,-2]]],11,[],[[46,[],[[45,[[3,[-1,-2]]]]]]]],[-2,[[7,[[14,[-1]]]]],[],[[46,[],[[45,[-1]]]]]],[-2,[[8,[[14,[-1]]]]],[],[[46,[],[[45,[-1]]]]]],[-2,[[9,[-1]]],[],[[46,[],[[45,[-1]]]]]],[-1,1,[[46,[],[[45,[2]]]]]],[-1,1,[[46,[],[[45,[[44,[2]]]]]]]],[-1,1,[[46,[],[[45,[[4,[2]]]]]]]],[-1,1,[[46,[],[[45,[48]]]]]],[-1,1,[[46,[],[[45,[48]]]]]],[-1,1,[[46,[],[[45,[1]]]]]],[[],[[4,[-1]]],5],[[],[[7,[-1]]],5],[[],[[8,[-1]]],5],[[],[[15,[-1]]],5],[-1,[[4,[-2,-1]]],6,5],[-1,[[7,[-2,-1]]],6,5],[-1,[[8,[-2,-1]]],6,5],[-1,[[15,[-2,-1]]],6,5],[[22,22],[[9,[-1]]],[]],[[13,22,22],1],[[22,22,-1],[[9,[-2,-1]]],6,[]],[2,[[35,[1]]]],[[[14,[62]]],[[35,[1,63]]]],[[[14,[62]]],1],[[[14,[13]]],[[35,[1,63]]]],[[[14,[13]]],1],[[[14,[13]]],[[35,[1,63]]]],[[[14,[13]]],1],[[[9,[13]]],[[35,[1,64]]]],[[[14,[13]]],[[44,[2]]]],[[[9,[13]]],1],0,0,[[[4,[-1,-2]],[4,[-1,-2]]],30,[65,5],6],[[[7,[-1,-2]],[7,[-1,-2]]],30,[65,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[65,5],6],[[[10,[-2,-3,-4]],-1],[[24,[-3]]],[11,5],[[28,[-1]],11],[],[6,12]],[[[10,[-2,-3,-4]],-1],[[24,[[3,[-2,-3]]]]],[11,5],[[28,[-1]],11],[],[6,12]],[[[10,[-2,-3,-4]],-1],[[24,[-3]]],[11,5],[[28,[-1]],11],[],[6,12]],[[[7,[-1,-2]]],[[24,[-1]]],5,6],[[[8,[-1,-2]]],[[24,[-1]]],5,6],[[[7,[-1,-2]]],-1,5,6],[[[8,[-1,-2]]],-1,5,6],[[[4,[-1,-2]],[4,[-1,-2]]],30,[65,5],6],[[[7,[-1,-2]],[7,[-1,-2]]],30,[65,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[65,5],6],[[[4,[-1,-2]],-3],3,[66,5],6,52],[[[10,[-1,-2,-3]],-4],3,66,66,[6,12],52],[[[7,[-1,-2]],-3],3,[66,5],6,52],[[[8,[-1,-2]],-3],3,[66,5],6,52],[[[9,[-1,-2]],-3],3,66,6,52],[[1,-1],3,52],[[],3],[[],3],[-1,3,[12,6]],[-1,3,[12,6]],[[[10,[-2,-3,-4]],-1],-3,[11,5],[[28,[-1]],11],[],[6,12]],[[[9,[-1,-2]],-3],[],[],6,[[67,[[14,[-1]]]]]],[[1,68],2],[[1,[69,[22]]],2],[[1,[70,[22]]],2],[[1,[71,[22]]],2],[[1,[72,[22]]],2],[[1,[73,[22]]],2],[[[9,[-1,-2]],-3],[],[],6,[[67,[[14,[-1]]]]]],[[1,[72,[22]]],2],[[1,[71,[22]]],2],[[1,[73,[22]]],2],[[1,[69,[22]]],2],[[1,[70,[22]]],2],[[1,68],2],[[[10,[-1,-2,-3]],-1,-2],[[24,[-2]]],11,[],[6,12]],[[[9,[-1,-2]],22,-1],3,[],6],[[1,22,48],3],[[1,22,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1,-2]]],[[4,[[14,[-1]],-2]]],[],6],[[[9,[-1,-2]]],[[4,[[14,[-1]],-2]]],[],6],[1,[[4,[2]]]],[1,[[9,[13]]]],[[[9,[[43,[-1]],-2]]],[[9,[-1,-2]]],[],6],[-1,[],[]],[[[4,[-1,-2]]],-1,[],6],[[[7,[-1,-2]]],[[24,[-1]]],[],6],[[[8,[-1,-2]]],[[24,[-1]]],[],6],[-1,-2,[],[]],[[[10,[-1,-2,-3]]],[[74,[-1,-2]]],[],[],[6,12]],[[[10,[-1,-2,-3]]],[[75,[-1,-2]]],[],[],[6,12]],[[[10,[-1,-2,-3]]],[[76,[-1,-2,-3]]],[],[],[6,12]],[[[9,[-1,-2]]],[],[],6],[[[9,[-1,-2]]],[],[],6],[[[9,[-1,-2]]],[],[],6],[[[10,[-1,-2,-3]]],[[77,[-1,-2,-3]]],[],[],[6,12]],[[[4,[-1,-2]]],[[78,[[4,[-1,-2]]]]],5,6],[[[4,[-1,-2]]],[],5,6],[[[7,[-1,-2]]],[],5,6],[[[8,[-1,-2]]],[],5,6],[[[15,[-1,-2]]],[],5,6],[[[9,[-1,-2]]],[[3,[22,22]]],[],6],[1,[[3,[13,22,22]]]],[[[9,[-1,-2]]],[[3,[22,22,-2]]],[],6],[[[4,[-1,-2]]],[[3,[-2]]],5,6],[[-1,2],[[79,[-2]]],[],[]],[[1,2]],[[[10,[-1,-2,-3]]],[[80,[-1,-2,-3]]],[],[],[6,12]],0,[[-1,2],30,[]],[[1,2],30],[[[4,[-1,-2]]],30,[81,5],6],[[[10,[-1,-2,-3]]],30,[],[],[6,12]],[[[9,[-1,-2]]],30,[],6],[1,30],[[-1,2],30,[]],[[1,2],30],[[-1,2],30,[]],[[1,2],30],[[[10,[-1,-2,-3]]],[[74,[-1,-2]]],[],[],[6,12]],[[[10,[-1,-2,-3]]],[[75,[-1,-2]]],[],[],[6,12]],[[[10,[-1,-2,-3]]],[[82,[-1,-2]]],[],[],[6,12]],[[[4,[-1,-2]]],24,[83,5],6],[[[10,[-1,-2,-3]]],[[24,[[53,[-1,-2,-3]]]]],11,[],[6,12]],[[[10,[-1,-2,-3]]],[[24,[[3,[-1,-2]]]]],11,[],[6,12]],[[[4,[-1,-2]],[4,[-1,-2]]],30,[65,5],6],[[[7,[-1,-2]],[7,[-1,-2]]],30,[65,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[65,5],6],[[[4,[-1,-2]]],-1,5,6],[[[9,[-1,-2]]],[[14,[-1]]],[],6],[1,2],[[[4,[-1,-2]]],22,[81,5],6],[[[10,[-1,-2,-3]]],22,[],[],[6,12]],[[[9,[-1,-2]]],22,[],6],[1,22],[[[10,[-2,-3,-4]],[84,[-1]]],[[85,[-2,-3]]],11,[[28,[-1]],11],[],[6,12]],[[[10,[-2,-3,-4]],[84,[-1]]],[[86,[-2,-3,-4]]],11,[[28,[-1]],11],[],[6,12]],[[[4,[-1,-2]],[4,[-1,-2]]],30,[65,5],6],[[[7,[-1,-2]],[7,[-1,-2]]],30,[65,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[65,5],6],[[[7,[-1,-2]]],-1,12,[6,12]],[[[8,[-1,-2]]],-1,12,[6,12]],0,[[[4,[-1,-2]],[4,[-1,-2]]],30,[31,5],6],[[[7,[-1,-2]],[7,[-1,-2]]],30,[31,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],30,[31,5],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[43,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[43,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[14,[-1]]],30,[],[[31,[-1]]],6],[[[9,[-2,-3]],[9,[-1,-4]]],30,[],[[31,[-1]]],6,6],[[1,2],30],[[1,[44,[2]]],30],[[1,2],30],[-1,[[4,[-1]]],[]],[[],[[10,[-1,-2]]],[],[]],[-1,[[7,[-1]]],[]],[-1,[[8,[-1]]],[]],[[],[[15,[-1]]],[]],[[],[[9,[-1]]],[]],[[],1],[-2,[[7,[-1]]],[],[[21,[[38,[-1]]],[[32,[-1]]]]]],[-2,[[8,[-1]]],[],[[21,[[15,[-1]]],[[32,[-1]]]]]],[[-1,-2],[[4,[-1,-2]]],[],[6,6]],[-1,[[10,[-2,-3,-1]]],[6,12],[],[]],[[-1,-2],[[7,[-1,-2]]],[],6],[[-1,-2],[[8,[-1,-2]]],[],6],[-1,[[15,[-2,-1]]],6,[]],[-1,[[9,[-2,-1]]],6,[]],[[],[[4,[[17,[-1]]]]],[]],[[],[[7,[[17,[-1]]]]],[]],[[],[[8,[[17,[-1]]]]],[]],[-1,[[4,[[17,[-2]],-1]]],[6,6],[]],[-1,[[7,[[17,[-2]],-1]]],6,[]],[-1,[[8,[[17,[-2]],-1]]],6,[]],[22,[[4,[[14,[[17,[-1]]]]]]],[]],[22,[[7,[[14,[[17,[-1]]]]]]],[]],[22,[[8,[[14,[[17,[-1]]]]]]],[]],[[22,-1],[[4,[[14,[[17,[-2]]]],-1]]],6,[]],[[22,-1],[[7,[[14,[[17,[-2]]]],-1]]],6,[]],[[22,-1],[[8,[[14,[[17,[-2]]]],-1]]],6,[]],[[],[[4,[[17,[-1]]]]],[]],[[],[[7,[[17,[-1]]]]],[]],[[],[[8,[[17,[-1]]]]],[]],[-1,[[4,[[17,[-2]],-1]]],[6,6],[]],[-1,[[7,[[17,[-2]],-1]]],6,[]],[-1,[[8,[[17,[-2]],-1]]],6,[]],[22,[[4,[[14,[[17,[-1]]]]]]],[]],[22,[[7,[[14,[[17,[-1]]]]]]],[]],[22,[[8,[[14,[[17,[-1]]]]]]],[]],[[22,-1],[[4,[[14,[[17,[-2]]]],-1]]],6,[]],[[22,-1],[[7,[[14,[[17,[-2]]]],-1]]],6,[]],[[22,-1],[[8,[[14,[[17,[-2]]]],-1]]],6,[]],[[[4,[-1,-2]]],24,[83,5],6],[[[4,[-1,-2]]],24,[87,5],6],[[[4,[-1,-2]],22],24,[83,5],6],[[[4,[-1,-2]],22],24,[87,5],6],0,[[[4,[-1,-2]],[4,[-1,-2]]],[[24,[29]]],[65,5],6],[[[10,[-1,-2,-3]],[10,[-1,-2,-3]]],[[24,[29]]],65,65,[6,12]],[[[7,[-1,-2]],[7,[-1,-2]]],[[24,[29]]],[65,5],6],[[[8,[-1,-2]],[8,[-1,-2]]],[[24,[29]]],[65,5],6],[[[9,[-1,-2]],[9,[-1,-3]]],[[24,[29]]],65,6,6],[[1,1],[[24,[29]]]],0,[-1,[[78,[[4,[-1]]]]],[]],[-1,[[78,[[7,[-1]]]]],[]],[-1,[[78,[[8,[-1]]]]],[]],[[-1,-2],[[78,[[4,[-1,-2]]]]],[],[6,6]],[[-1,-2],[[78,[[7,[-1,-2]]]]],[],6],[[-1,-2],[[78,[[8,[-1,-2]]]]],[],6],[[[78,[[4,[-1,-2]]]],88],89,[90,91,5],6],[[[78,[[4,[-1]]]],88],[[89,[24]]],[92,91,5]],[[[9,[-1,-2]]],[[24,[-1]]],[],6],[1,[[24,[48]]]],[[[10,[-1,-2,-3]]],[[24,[[3,[-1,-2]]]]],11,[],[6,12]],[[[10,[-1,-2,-3]]],[[24,[[3,[-1,-2]]]]],11,[],[6,12]],[[[4,[-1]],93],3,23],[[[8,[-1]],93],3,[23,5]],[[[7,[-1,-2]],[7,[-1,-2]]],30,5,6],[[[8,[-1,-2]],[8,[-1,-2]]],30,5,6],[[[15,[-1,-2]],[15,[-1,-2]]],30,5,6],[[[9,[-1,-2]],-1],3,[],6],[[1,48],3],[[1,2],3],[[[9,[-1,-2]],-1],[[35,[3,-1]]],[],6],0,[[[10,[-2,-3,-4]],-5],[[94,[-2,-3]]],[11,5],[[28,[-1]],11],[],[6,12],[[40,[-1]]]],[[[10,[-2,-3,-4]],-5],[[95,[-2,-3]]],[11,5],[[28,[-1]],11],[],[6,12],[[40,[-1]]]],[[[10,[-2,-3,-4]],-1],[[24,[-3]]],[11,5],[[28,[-1]],11],[],[6,12]],[[[9,[-1,-2]],22],-1,[],6],[[1,22],48],[[[10,[-2,-3,-4]],-1],[[24,[[3,[-2,-3]]]]],[11,5],[[28,[-1]],11],[],[6,12]],[[1,-1],3,96],[[1,-1,2],3,[[40,[22]]]],[[[9,[-1,-2]],22],3,[],6],[[1,22],3],[[[9,[-1,-2]],22],3,[],6],[[1,22],3],[[[9,[-1,-2]],22,-1],3,12,6],[[[9,[-1,-2]],22,-3],3,[],6,[[20,[],[[32,[-1]]]]]],[[[78,[[4,[-2,-3]]]],-1],97,[],[[98,[-1]],91,5],6],[[[10,[-1,-2,-3]],-4],3,11,[],[6,12],[[20,[-1,-2],[[32,[30]]]]]],[[[9,[-1,-2]],-3],3,[],6,[[20,[-1],[[32,[30]]]]]],[[1,-1],3,[[20,[48],[[32,[30]]]]]],[[[9,[-1,-2]],-3],3,[],6,[[20,[-1],[[32,[30]]]]]],[[[9,[-1,-2]],22],3,[],6],[[[9,[-1,-2]],22],3,[],6],[[1,22],3],[[[9,[-1,-2]]],3,[],6],[1,3],[[[4,[-1,-2]]],[[3,[22,[24,[22]]]]],[83,5],6],[[[4,[-1]]],[[3,[22,[24,[22]]]]],[92,91,5]],[[[4,[-1]]],[[24,[23]]],23],[[[8,[-1]]],[[24,[23]]],[23,5]],[[[9,[-1,-2]]],[[14,[[17,[-1]]]]],[],6],[[[9,[-1,-2]],-3,-4],[[99,[-2]]],[],6,[[40,[22]]],[[46,[],[[45,[-1]]]]]],[[[9,[-1,-2]]],[[3,[[14,[-1]],[14,[[17,[-1]]]]]]],[],6],[[[10,[-2,-3,-4]],-1],[[10,[-2,-3,-4]]],[11,5],[[28,[-1]],11],[],[12,6,12]],[[[9,[-1,-2]],22],[[9,[-1,-2]]],[],[12,6]],[[1,22],1],0,[[-1,2],[[24,[2]]],[]],[[1,2],[[24,[2]]]],[[-1,2],[[24,[2]]],[]],[[1,2],[[24,[2]]]],[[[7,[-1,-2]]],22,5,6],[[[8,[-1,-2]]],22,5,6],[[[15,[-1,-2]]],22,5,6],[[[9,[-1,-2]],22],-1,[],6],0,0,[[[27,[],[[26,[-1]]]]],-1,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,1],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[9,[-1,-2]],22],3,[],6],[[1,22],3],[-1,[[35,[-2]]],[],[]],[[[4,[[14,[-1]]]]],[[35,[[4,[[43,[-1]]]]]]],[]],[[[9,[-1]]],[[35,[[4,[[43,[-1]]]]]]],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[[[7,[[14,[-1]]]]],[[35,[[7,[[43,[-1]]]]]]],[]],[-1,[[35,[-2]]],[],[]],[[[8,[[14,[-1]],-2]]],[[35,[[8,[[43,[-1]],-2]]]]],[],[6,12]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[[[10,[-1,-2,-3]],-1,-2],[[35,[-2,[101,[-1,-2,-3]]]]],11,[],[6,12]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[[4,[-1]],102]]],[]],[-1,[[35,[[7,[-1]],102]]],[]],[-1,[[35,[[8,[-1]],102]]],[]],[[-1,-2],[[35,[[4,[-1,-2]],102]]],[],[6,6]],[[-1,-2],[[35,[[7,[-1,-2]],102]]],[],6],[[-1,-2],[[35,[[8,[-1,-2]],102]]],[],6],[[],[[35,[[4,[[17,[-1]]]],102]]],[]],[[],[[35,[[7,[[17,[-1]]]],102]]],[]],[[],[[35,[[8,[[17,[-1]]]],102]]],[]],[-1,[[35,[[4,[[17,[-2]],-1]],102]]],[6,6],[]],[-1,[[35,[[7,[[17,[-2]],-1]],102]]],6,[]],[-1,[[35,[[8,[[17,[-2]],-1]],102]]],6,[]],[22,[[35,[[4,[[14,[[17,[-1]]]]]],102]]],[]],[[],[[35,[[4,[[17,[-1]]]],102]]],[]],[[],[[35,[[7,[[17,[-1]]]],102]]],[]],[[],[[35,[[8,[[17,[-1]]]],102]]],[]],[-1,[[35,[[4,[[17,[-2]],-1]],102]]],[6,6],[]],[-1,[[35,[[7,[[17,[-2]],-1]],102]]],6,[]],[-1,[[35,[[8,[[17,[-2]],-1]],102]]],6,[]],[22,[[35,[[4,[[14,[[17,[-1]]]]]],102]]],[]],[-1,[[35,[[78,[[8,[-1]]]],102]]],[]],[[-1,-2],[[35,[[78,[[8,[-1,-2]]]],102]]],[],6],[[[9,[-1,-2]],22],[[35,[3,103]]],[],6],[[1,22],[[35,[3,103]]]],[[[9,[-1,-2]],22],[[35,[3,103]]],[],6],[[1,22],[[35,[3,103]]]],[[[7,[-1,-2]]],[[35,[-1,[7,[-1,-2]]]]],[],6],[[[8,[-1,-2]]],[[35,[-1,[8,[-1,-2]]]]],[],6],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[[[7,[-1,-2]]],-1,12,[6,12]],[[[8,[-1,-2]]],-1,12,[6,12]],[[[15,[-1,-2]]],[[24,[[8,[-1,-2]]]]],5,[12,6]],[[[10,[-2,-3,-4]],[84,[-1]]],[[85,[-2,-3]]],11,[[28,[-1]],11],[],[6,12]],[[[10,[-2,-3,-4]],[84,[-1]]],[[86,[-2,-3,-4]]],11,[[28,[-1]],11],[],[6,12]],0,[[[10,[-1,-2,-3]]],[[105,[-1,-2]]],[],[],[6,12]],[[[10,[-1,-2,-3]]],[[106,[-1,-2]]],[],[],[6,12]],[[[7,[-1,-2]]],22,5,6],[[[8,[-1,-2]]],22,5,6],[[[15,[-1,-2]]],22,5,6],[22,[[9,[-1]]],[]],[22,1],[[22,-1],[[9,[-2,-1]]],6,[]],[[[4,[[17,[-1]],-2]],-1],[[4,[-1,-2]]],[],6],[[[4,[-1,-2]],[14,[13]]],3,[52,5],6],[[1,48],[[35,[3,55]]]],[[[4,[-1,-2]],107],3,[52,5],6],[[[4,[-1,-2]],108],3,[52,5],6],[[[4,[-1,-2]],109],3,[52,5],6],[[[4,[-1,-2]],110],3,[52,5],6],[[[4,[-1,-2]],111],3,[52,5],6],[[[4,[-1,-2]],112],3,[52,5],6],[[[4,[-1,-2]],22],3,[52,5],6],[[[4,[-1,-2]],2],3,[52,5],6],[[1,2],[[35,[3,55]]]],[[[4,[-1,-2]],113],3,[52,5],6],[[[4,[-1,-2]],62],3,[52,5],6],[[[4,[-1,-2]],114],3,[52,5],6],[[[4,[-1,-2]],51],3,[52,5],6],[[[4,[-1,-2]],13],3,[52,5],6],[[[4,[-1,-2]],22],3,[52,5],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[115,30],115],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[117,[116]]],[[119,[118]]]],[120,120],[121,121],[122,122],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[121,121],29],[-1,[[117,[123]]],[[119,[118]]]],[[115,30],115],[[115,30],115],[[121,121],30],[[122,122],30],[124,125],[124,[[117,[121]]]],[120,121],[123,[[117,[3]]]],[[120,54],126],[[121,54],126],[[122,54],126],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[121,-1],3,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,30],[121,30],[120,30],[121,30],[121,30],[120,30],[121,30],[121,30],[121,30],[120,51],[124,[[117,[120]]]],[[],115],[127,[[24,[[117,[124]]]]]],[-1,[[117,[123]]],[[119,[118]]]],[[115,-1],[[117,[123]]],[[119,[118]]]],[[121,121],[[24,[29]]]],[124,116],[120,122],[[123,[14,[13]]],[[117,[22]]]],[[115,30],115],[-1,[[117,[127]]],[[119,[118]]]],[[123,[9,[13]]],[[117,[22]]]],[122,30],[[123,51],[[117,[3]]]],[[123,122],[[117,[3]]]],[[122,30],3],[123,[[117,[3]]]],[123,[[117,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,30],115],[123,[[117,[123]]]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[[123,[14,[13]]],[[117,[22]]]],[[115,30],115],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[128,128],[[-1,-2],3,[],[]],[[128,128],29],[[128,128],30],[129,[[117,[3]]]],[[130,54],126],[[128,54],126],[[131,54],126],[-1,-1,[]],[128,130],[-1,-1,[]],[-1,-1,[]],[109,130],[130,[[24,[132]]]],[130,[[24,[132]]]],[[128,-1],3,52],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[24,[[4,[132]]]]]],[130,128],[[],130],[[128,-1],130,[[133,[[4,[132]]]]]],[[128,128],[[24,[29]]]],[130,[[24,[109]]]],[[134,[14,[13]]],[[117,[22]]]],[[134,[9,[13]]],[[117,[22]]]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[[129,[14,[13]]],[[117,[22]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[135,109],[135,112],[135,114],[136,13],[135,22],[[137,137],-1,[]],[[137,137],3],[[137,137],-1,[]],[[137,137],3],[138,13],[137,13],[139,114],[[137,137],-1,[]],[[137,137],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,140],0,[141,141],[140,140],[142,142],[138,138],[[[143,[-1]]],[[143,[-1]]],12],[137,137],[136,136],[144,144],[145,145],[146,146],[147,147],[148,148],[139,139],[149,149],[135,135],[150,150],[151,151],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[141,141],29],[[140,140],29],[[142,142],29],[[136,136],29],[[144,144],29],[[145,145],29],[[146,146],29],[[147,147],29],[[148,148],29],[[149,149],29],[[152,152],29],[[151,151],29],[62,140],[[138,138],30],[[137,137],30],[[139,139],30],[[],142],[[],138],[[],[[143,[-1]]],33],[[],137],0,[62,140],[[],138],[[],137],[[],139],[[141,141],30],[[140,140],30],[[142,142],30],[[136,136],30],[[144,144],30],[[145,145],30],[[146,146],30],[[147,147],30],[[148,148],30],[[149,149],30],[[152,152],30],[[151,151],30],[[141,54],126],[[140,54],126],[[140,54],126],[[142,54],126],[[138,54],126],[[[143,[-1]],54],126,57],[[137,54],126],[[136,54],126],[[144,54],126],[[145,54],126],[[146,54],126],[[147,54],126],[[148,54],126],[[139,54],126],[[149,54],126],[[135,54],126],[[150,54],126],[[152,54],126],[[151,54],126],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[142,140],[-1,-1,[]],[-1,-1,[]],[22,138],[-1,-1,[]],[-1,-1,[]],[22,137],[13,137],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,135],[114,135],[62,135],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,138],[13,137],[114,139],[110,[[24,[148]]]],[110,[[24,[149]]]],[51,[[24,[148]]]],[51,[[24,[149]]]],[13,146],[13,147],[142,140],[62,140],[138,30],[138,30],[138,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,30],[139,30],[138,30],[137,30],[145,30],[139,30],[139,30],[145,[[24,[148]]]],[62,140],0,0,[[[14,[13]]],153],[[141,62],140],[13,[[24,[136]]]],[[],150],[[],152],[153,[[24,[-1]]],[]],[[[143,[-1]]],[[143,[112]]],[[133,[112]],47]],[[141,141],[[24,[29]]]],[[140,140],[[24,[29]]]],[[142,142],[[24,[29]]]],[[136,136],[[24,[29]]]],[[144,144],[[24,[29]]]],[[145,145],[[24,[29]]]],[[146,146],[[24,[29]]]],[[147,147],[[24,[29]]]],[[148,148],[[24,[29]]]],[[149,149],[[24,[29]]]],[[152,152],[[24,[29]]]],[[151,151],[[24,[29]]]],0,0,[153,22],[[153,145],[[24,[135]]]],0,0,0,[145,147],[152,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[145,146],[146,22],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],0,0,[140,62],0,0,0,[140,141],0,0,0,0,0,0,0,[[[154,[-1]]],-1,155],[[[154,[-1]]],-1,155],[-1,-2,[],[]],[-1,-2,[],[]],[[[154,[-1]]],-2,155,[]],[[[154,[-1]]],-2,155,[]],[155,3],[[[154,[-1]]],3,155],[-1,-1,[]],[-1,-2,[],[]],[-1,[[154,[-1]]],155],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],0,0,0,0,[156,157],[125,16],[16,118],[16,16],[125,16],[156,157],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,22],[156,22],[125,3],[156,3],[125,125],[156,156],[[157,156],3],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[16,16],29],[[],16],[[],125],[125,16],[125,16],[[],[[4,[157]]]],[[16,2],30],[[16,16],30],[[156,156],30],[[157,157],30],[[16,54],126],[[125,54],126],[[156,54],126],[116,125],[-1,-1,[]],[-1,-1,[]],[[[4,[157]]],156],[2,157],[1,156],[[16,16],30],[[16,16],30],[[16,-1],3,52],[[125,68],16],[[125,68],16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[157,[[8,[157]]]],[156,[[8,[157]]]],[157,[[4,[157]]]],[156,[[4,[157]]]],[125,[[4,[16]]]],[[[4,[16]]],125],[157,[[7,[157]]]],[156,[[7,[157]]]],[156,[[35,[1,156]]]],[157,30],[16,30],[[16,16],30],[16,22],[[16,16],30],[157,3],[157,3],[-1,16,[[119,[16]],5]],[[],125],[[16,16],[[24,[29]]]],[[16,2],[[24,[29]]]],[[125,-1],3,[[119,[16]]]],[[156,157],3],[[125,22],3],[[156,22],3],[[125,22],3],[[156,22],3],[[156,22],3],[125,3],[156,3],[157,156],[157,156],[16,125],[157,156],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[24,[2]]]],[157,[[24,[2]]]],[157,[[44,[2]]]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[[156,22],[[35,[3,103]]]],[[156,22],[[35,[3,103]]]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[22,125],[22,156],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[118,158],[118,16],[159,16],[160,16],[161,118],[116,118],[118,16],[118,118],[161,118],[161,16],[116,118],[116,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,22],[116,3],[116,116],[158,158],[159,159],[160,160],[162,162],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[159,159],29],[[160,160],29],[[162,162],29],[118,161],[116,118],[[118,-1],30,[[119,[118]]]],[[159,159],30],[[160,160],30],[[162,162],30],[118,[[24,[16]]]],[118,[[24,[16]]]],[118,[[24,[16]]]],[[118,54],126],[[158,54],126],[[159,54],126],[[160,54],126],[[162,54],126],[-1,-1,[]],[-1,-1,[]],[125,116],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[118,30],[[159,-1],3,52],[[160,-1],3,52],[[162,-1],3,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,[[4,[118]]]],[-1,-2,[],[]],[-1,-2,[],[]],[116,125],[118,30],[118,30],[162,30],[[118,-1],116,[[119,[118]]]],[160,162],[-1,118,[[119,[16]],5]],[[],116],[161,[[24,[-1]]],[]],[158,[[24,[-1]]],[]],[118,[[24,[118]]]],[[159,159],[[24,[29]]]],[[160,160],[[24,[29]]]],[[162,162],[[24,[29]]]],[116,30],[[116,-1],3,[[119,[118]]]],[[116,22],3],[[116,22],3],[[116,-1],30,[[119,[16]]]],[[116,-1],3,[[119,[16]]]],[116,3],[[118,-1],30,[[119,[118]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[118,116],[118,[[24,[2]]]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[22,116],[[118,-1],116,[[119,[16]]]],[[118,-1],116,[[119,[16]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],163],[[],164],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[165,163],[166,164],[[[167,[],[[32,[-1]]]]],-1,[]],[163,51],[164,114],[[[168,[],[[32,[-1]]]]],[[35,[-1,3]]],[]],[-1,[[35,[3]]],[]],[-1,[[35,[3]]],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],0,[169,2],[169,2],[169,2],[169,3],[-1,-2,[],[]],[-1,-2,[],[]],[169,3],[169,169],[[-1,-2],3,[],[]],[[169,169],29],[[169,169],30],[-1,-1,[]],[-1,-2,[],[]],[169,22],[[],169],[[169,169],[[24,[29]]]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[[169,2],126],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[170,30],170],[170,114],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[170,22],[170,170],[171,171],[172,172],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[170,170],30],[[170,30],170],[[170,30],170],[[172,172],30],[173,125],[173,[[117,[121]]]],[171,121],[174,[[117,[3]]]],[[170,54],126],[[171,54],126],[[172,54],126],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,51],[173,[[117,[171]]]],[[],170],[175,[[24,[[117,[173]]]]]],[[-1,170],[[117,[174]]],[[119,[118]]]],[173,116],[171,172],[[174,[14,[13]]],[[117,[22]]]],[[170,30],170],[172,30],[[170,170,30],3],[[172,30],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[170,30],170],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[-1,104,[]],[[174,[14,[13]]],[[117,[22]]]],[[170,30],170],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[176,176],[[-1,-2],3,[],[]],[[176,176],29],[[176,176],30],[[176,54],126],[-1,-1,[]],[-1,-2,[],[]],[[176,176],[[24,[29]]]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[177,177],[[-1,-2],3,[],[]],[[177,54],126],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[178,114],[178,[[43,[13]]]],[178,113],[178,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[178,62],[178,178],[179,179],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[178,178],29],[[179,179],29],[178,62],[178,[[14,[13]]]],[178,51],[[178,178],30],[[179,179],30],[[178,54],126],[[179,54],126],[-1,-1,[]],[-1,-1,[]],[110,[[24,[179]]]],[[114,62,62,62,[43,[13]]],178],[[[43,[13]]],178],[[[43,[13]]],178],[51,[[24,[179]]]],[-1,-2,[],[]],[-1,-2,[],[]],[178,[[43,[13]]]],[178,30],[[],178],[[178,178],[[24,[29]]]],[[179,179],[[24,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,104,[]],[-1,104,[]],[178,[[24,[179]]]]],"c":[],"p":[[5,"String",0],[1,"str"],[1,"tuple"],[5,"Box",0],[10,"Sized",2185],[10,"Allocator",2186],[5,"Rc",0],[5,"Arc",0],[5,"Vec",0],[5,"BTreeMap",0],[10,"Ord",2187],[10,"Clone",2188],[1,"u8"],[1,"slice"],[5,"Weak",0],[5,"OsStr",1644],[20,"MaybeUninit",2189],[10,"Tuple",2185],[10,"Fn",2190],[10,"FnMut",2190],[10,"FnOnce",2190],[1,"usize"],[10,"Error",2191],[6,"Option",2192],[5,"CStr",2193],[17,"Owned"],[10,"ToOwned",0],[10,"Borrow",2194],[6,"Ordering",2187],[1,"bool"],[10,"PartialEq",2187],[17,"Output"],[10,"Default",2195],[10,"Any",2196],[6,"Result",2197],[10,"Send",2185],[10,"Sync",2185],[5,"Weak",2198],[5,"Drain",2199],[10,"RangeBounds",2200],[5,"Drain",2201],[6,"Entry",2202],[1,"array"],[6,"Cow",2203],[17,"Item"],[10,"IntoIterator",2204],[10,"Copy",2185],[1,"char"],[5,"ExtractIf",2205],[5,"ExtractIf",2206],[1,"u64"],[10,"Hasher",2207],[5,"OccupiedEntry",2202],[5,"Formatter",2208],[5,"Error",2208],[10,"Display",2208],[10,"Debug",2208],[1,"never"],[5,"CString",2209],[5,"VecDeque",2210],[5,"BinaryHeap",2211],[1,"u16"],[5,"FromUtf16Error",2201],[5,"FromUtf8Error",2201],[10,"PartialOrd",2187],[10,"Hash",2207],[10,"SliceIndex",2212],[5,"RangeFull",2200],[5,"RangeTo",2200],[5,"Range",2200],[5,"RangeToInclusive",2200],[5,"RangeFrom",2200],[5,"RangeInclusive",2200],[5,"Iter",2205],[5,"IterMut",2205],[5,"IntoIter",2205],[5,"IntoKeys",2205],[5,"Pin",2213],[5,"CharPredicateSearcher",2214],[5,"IntoValues",2205],[10,"ExactSizeIterator",2215],[5,"Keys",2205],[10,"Iterator",2216],[6,"Bound",2200],[5,"Cursor",2205],[5,"CursorMut",2205],[10,"DoubleEndedIterator",2217],[5,"Context",2218],[6,"Poll",2219],[10,"Future",2220],[10,"Unpin",2185],[10,"AsyncIterator",2221],[5,"Request",2191],[5,"Range",2205],[5,"RangeMut",2205],[10,"Pattern",2214],[6,"CoroutineState",2222],[10,"Coroutine",2222],[5,"Splice",2223],[10,"ToString",0],[5,"OccupiedError",2202],[5,"AllocError",2186],[5,"TryReserveError",2224],[5,"TypeId",2196],[5,"Values",2205],[5,"ValuesMut",2205],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"isize"],[1,"u128"],[1,"u32"],[5,"OpenOptions",669],[5,"PathBuf",1749],[8,"Result",790],[5,"Path",1749],[10,"AsRef",2225],[5,"Metadata",669],[6,"FileType",669],[5,"Permissions",669],[5,"File",669],[5,"DirEntry",669],[5,"OsString",1644],[8,"Result",2208],[5,"ReadDir",669],[6,"ErrorKind",790],[10,"Write",790],[5,"Error",790],[5,"Custom",790],[10,"Error",668],[10,"Into",2225],[10,"Read",790],[6,"HidReportValue",883],[5,"HidReportId",883],[5,"MouseButton",883],[5,"Modifier",883],[5,"HidReportMainFlag",883],[5,"HidUsage",883],[5,"UsagePage",883],[5,"Usage",883],[5,"MouseReport",883],[6,"HidReportType",883],[5,"HidReportLeadByte",883],[6,"HidTrailBytes",883],[6,"HidReportItemType",883],[6,"HidReportItemTag",883],[6,"HidReportCollectionType",883],[5,"HidReportGlobalState",883],[6,"DeviceMode",883],[5,"HidReportLocalState",883],[5,"HidReporteReader",883],[5,"DisposableRef",1628],[10,"DisposeRef",1628],[5,"Buf",1644],[5,"Slice",1644],[5,"Ancestors",1749],[6,"Component",1749],[5,"PrefixComponent",1749],[5,"Components",1749],[6,"Prefix",1749],[5,"XorShift64",1893],[5,"XorShift32",1893],[5,"NonZeroU64",2226],[5,"NonZeroU32",2226],[10,"Prng",1893],[10,"Rng",1893],[5,"Sb255",1923],[5,"OpenOptions",1960],[5,"Metadata",1960],[5,"Permissions",1960],[5,"DirEntry",1960],[5,"File",1960],[5,"ReadDir",1960],[6,"Function",2056],[5,"SystemTime",2113],[5,"Uuid",2127],[6,"UuidVersion",2127],[10,"Identify",2127]],"b":[[20,"impl-AsMut%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[21,"impl-AsMut%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[34,"impl-AsRef%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[35,"impl-AsRef%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[36,"impl-AsRef%3Cstr%3E-for-String"],[37,"impl-AsRef%3COsStr%3E-for-String"],[38,"impl-AsRef%3C%5Bu8%5D%3E-for-String"],[41,"impl-Box%3CMaybeUninit%3CT%3E,+A%3E"],[42,"impl-Box%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[43,"impl-Rc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[44,"impl-Rc%3CMaybeUninit%3CT%3E,+A%3E"],[45,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[46,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[79,"impl-Clone-for-Box%3C%5BT%5D,+A%3E"],[80,"impl-Clone-for-Box%3Cstr%3E"],[81,"impl-Clone-for-Box%3CT,+A%3E"],[82,"impl-Clone-for-Box%3CCStr%3E"],[89,"impl-Clone-for-Box%3C%5BT%5D,+A%3E"],[90,"impl-Clone-for-Box%3CT,+A%3E"],[116,"impl-Default-for-Box%3C%5BT%5D%3E"],[117,"impl-Default-for-Box%3Cstr%3E"],[118,"impl-Default-for-Box%3CCStr%3E"],[119,"impl-Default-for-Box%3CT%3E"],[136,"impl-Box%3Cdyn+Any,+A%3E"],[137,"impl-Box%3Cdyn+Any+%2B+Send+%2B+Sync,+A%3E"],[138,"impl-Box%3Cdyn+Any+%2B+Send,+A%3E"],[141,"impl-Box%3Cdyn+Any+%2B+Send,+A%3E"],[142,"impl-Box%3Cdyn+Any,+A%3E"],[143,"impl-Box%3Cdyn+Any+%2B+Send+%2B+Sync,+A%3E"],[162,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[163,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[164,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[165,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[166,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[167,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[168,"impl-PartialEq%3C%26str%3E-for-String"],[169,"impl-PartialEq%3Cstr%3E-for-String"],[170,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-String"],[171,"impl-PartialEq-for-String"],[173,"impl-Extend%3C(K,+V)%3E-for-BTreeMap%3CK,+V,+A%3E"],[174,"impl-Extend%3C(%26K,+%26V)%3E-for-BTreeMap%3CK,+V,+A%3E"],[175,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[176,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[177,"impl-Extend%3Cchar%3E-for-String"],[178,"impl-Extend%3C%26char%3E-for-String"],[179,"impl-Extend%3CBox%3Cstr%3E%3E-for-String"],[180,"impl-Extend%3CCow%3C\'a,+str%3E%3E-for-String"],[181,"impl-Extend%3C%26str%3E-for-String"],[182,"impl-Extend%3CString%3E-for-String"],[186,"impl-Extend%3C(%26K,+%26V)%3E-for-BTreeMap%3CK,+V,+A%3E"],[187,"impl-Extend%3C(K,+V)%3E-for-BTreeMap%3CK,+V,+A%3E"],[188,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[189,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[190,"impl-Extend%3CString%3E-for-String"],[191,"impl-Extend%3CCow%3C\'a,+str%3E%3E-for-String"],[192,"impl-Extend%3Cchar%3E-for-String"],[193,"impl-Extend%3C%26char%3E-for-String"],[194,"impl-Extend%3C%26str%3E-for-String"],[195,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[196,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[197,"impl-Extend%3C%26char%3E-for-String"],[198,"impl-Extend%3Cchar%3E-for-String"],[204,"impl-Display-for-Box%3CT,+A%3E"],[205,"impl-Debug-for-Box%3CT,+A%3E"],[206,"impl-Pointer-for-Box%3CT,+A%3E"],[208,"impl-Pointer-for-Rc%3CT,+A%3E"],[209,"impl-Display-for-Rc%3CT,+A%3E"],[210,"impl-Debug-for-Rc%3CT,+A%3E"],[211,"impl-Display-for-Arc%3CT,+A%3E"],[212,"impl-Pointer-for-Arc%3CT,+A%3E"],[213,"impl-Debug-for-Arc%3CT,+A%3E"],[216,"impl-Display-for-String"],[217,"impl-Debug-for-String"],[219,"impl-From%3CCow%3C\'_,+%5BT%5D%3E%3E-for-Box%3C%5BT%5D%3E"],[220,"impl-From%3C%26CStr%3E-for-Box%3CCStr%3E"],[221,"impl-From%3CBox%3Cstr,+A%3E%3E-for-Box%3C%5Bu8%5D,+A%3E"],[222,"impl-From%3CString%3E-for-Box%3Cstr%3E"],[225,"impl-From%3CCow%3C\'_,+CStr%3E%3E-for-Box%3CCStr%3E"],[226,"impl-From%3CString%3E-for-Box%3Cdyn+Error%3E"],[227,"impl-From%3CCow%3C\'a,+str%3E%3E-for-Box%3Cdyn+Error%3E"],[228,"impl-From%3CE%3E-for-Box%3Cdyn+Error%3E"],[229,"impl-From%3CCString%3E-for-Box%3CCStr%3E"],[230,"impl-From%3C%26%5BT%5D%3E-for-Box%3C%5BT%5D%3E"],[231,"impl-From%3C%5BT;+N%5D%3E-for-Box%3C%5BT%5D%3E"],[232,"impl-From%3CString%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E"],[233,"impl-From%3CT%3E-for-Box%3CT%3E"],[234,"impl-From%3C%26str%3E-for-Box%3Cdyn+Error%3E"],[235,"impl-From%3CE%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E"],[236,"impl-From%3C%26str%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E"],[237,"impl-From%3CCow%3C\'_,+str%3E%3E-for-Box%3Cstr%3E"],[238,"impl-From%3CVec%3CT,+A%3E%3E-for-Box%3C%5BT%5D,+A%3E"],[239,"impl-From%3CCow%3C\'b,+str%3E%3E-for-Box%3Cdyn+Error+%2B+Send+%2B+Sync%3E"],[240,"impl-From%3C%26str%3E-for-Box%3Cstr%3E"],[243,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Rc%3CB%3E"],[246,"impl-From%3C%5BT;+N%5D%3E-for-Rc%3C%5BT%5D%3E"],[247,"impl-From%3CString%3E-for-Rc%3Cstr%3E"],[248,"impl-From%3CT%3E-for-Rc%3CT%3E"],[249,"impl-From%3C%26str%3E-for-Rc%3Cstr%3E"],[250,"impl-From%3CVec%3CT,+A%3E%3E-for-Rc%3C%5BT%5D,+A%3E"],[251,"impl-From%3CRc%3Cstr%3E%3E-for-Rc%3C%5Bu8%5D%3E"],[252,"impl-From%3C%26CStr%3E-for-Rc%3CCStr%3E"],[253,"impl-From%3C%26%5BT%5D%3E-for-Rc%3C%5BT%5D%3E"],[254,"impl-From%3CCString%3E-for-Rc%3CCStr%3E"],[255,"impl-From%3CBox%3CT,+A%3E%3E-for-Rc%3CT,+A%3E"],[256,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[258,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[259,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[260,"impl-From%3CT%3E-for-Arc%3CT%3E"],[261,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[262,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[263,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[265,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[266,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[267,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[268,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[270,"impl-From%3CCString%3E-for-Vec%3Cu8%3E"],[271,"impl-From%3C%26str%3E-for-Vec%3Cu8%3E"],[272,"impl-From%3C%26%5BT;+N%5D%3E-for-Vec%3CT%3E"],[273,"impl-From%3C%5BT;+N%5D%3E-for-Vec%3CT%3E"],[274,"impl-From%3CBox%3C%5BT%5D,+A%3E%3E-for-Vec%3CT,+A%3E"],[275,"impl-From%3C%26mut+%5BT;+N%5D%3E-for-Vec%3CT%3E"],[276,"impl-From%3CString%3E-for-Vec%3Cu8%3E"],[277,"impl-From%3CVecDeque%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[278,"impl-From%3C%26%5BT%5D%3E-for-Vec%3CT%3E"],[280,"impl-From%3C%26mut+%5BT%5D%3E-for-Vec%3CT%3E"],[281,"impl-From%3CCow%3C\'a,+%5BT%5D%3E%3E-for-Vec%3CT%3E"],[282,"impl-From%3CBinaryHeap%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[283,"impl-From%3CBox%3Cstr%3E%3E-for-String"],[284,"impl-From%3C%26str%3E-for-String"],[285,"impl-From%3Cchar%3E-for-String"],[286,"impl-From%3C%26String%3E-for-String"],[287,"impl-From%3C%26mut+str%3E-for-String"],[289,"impl-From%3CCow%3C\'a,+str%3E%3E-for-String"],[295,"impl-FromIterator%3C%26str%3E-for-String"],[296,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-String"],[297,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-String"],[298,"impl-FromIterator%3C%26char%3E-for-String"],[299,"impl-FromIterator%3Cchar%3E-for-String"],[300,"impl-FromIterator%3CString%3E-for-String"],[349,"impl-Index%3CRangeFull%3E-for-String"],[350,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-String"],[351,"impl-Index%3CRange%3Cusize%3E%3E-for-String"],[352,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-String"],[353,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-String"],[354,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-String"],[356,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-String"],[357,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-String"],[358,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-String"],[359,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-String"],[360,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-String"],[361,"impl-IndexMut%3CRangeFull%3E-for-String"],[383,"impl-IntoIterator-for-%26BTreeMap%3CK,+V,+A%3E"],[384,"impl-IntoIterator-for-%26mut+BTreeMap%3CK,+V,+A%3E"],[385,"impl-IntoIterator-for-BTreeMap%3CK,+V,+A%3E"],[386,"impl-IntoIterator-for-Vec%3CT,+A%3E"],[387,"impl-IntoIterator-for-%26Vec%3CT,+A%3E"],[388,"impl-IntoIterator-for-%26mut+Vec%3CT,+A%3E"],[440,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[441,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[442,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[443,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[444,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[445,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[446,"impl-PartialEq%3Cstr%3E-for-String"],[447,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-String"],[448,"impl-PartialEq%3C%26str%3E-for-String"],[546,"impl-Iterator-for-Box%3CI,+A%3E"],[547,"impl-AsyncIterator-for-Box%3CS%3E"],[583,"impl-TryFrom%3CBox%3C%5BT%5D%3E%3E-for-Box%3C%5BT;+N%5D%3E"],[584,"impl-TryFrom%3CVec%3CT%3E%3E-for-Box%3C%5BT;+N%5D%3E"],[650,"impl-Box%3CMaybeUninit%3CT%3E,+A%3E"],[651,"impl-Hasher-for-Box%3CT,+A%3E"],[1422,"impl-Debug-for-HidUsage"],[1423,"impl-Display-for-HidUsage"],[1449,"impl-From%3Cusize%3E-for-MouseButton"],[1450,"impl-From%3Cu8%3E-for-MouseButton"],[1460,"impl-From%3Cu8%3E-for-HidReportValue"],[1461,"impl-From%3Cu32%3E-for-HidReportValue"],[1462,"impl-From%3Cu16%3E-for-HidReportValue"],[1650,"impl-AsRef%3CPath%3E-for-OsStr"],[1651,"impl-AsRef%3COsStr%3E-for-OsStr"],[1677,"impl-PartialEq%3Cstr%3E-for-OsStr"],[1678,"impl-PartialEq-for-OsStr"],[1717,"impl-PartialOrd-for-OsStr"],[1718,"impl-PartialOrd%3Cstr%3E-for-OsStr"],[1773,"impl-AsRef%3COsStr%3E-for-Path"],[1774,"impl-AsRef%3CPath%3E-for-Path"],[1775,"impl-AsRef%3CPath%3E-for-Components%3C\'_%3E"],[1776,"impl-AsRef%3COsStr%3E-for-Components%3C\'_%3E"],[1777,"impl-AsRef%3CPath%3E-for-PathBuf"],[1778,"impl-AsRef%3COsStr%3E-for-PathBuf"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
